!=Content-Type: text/plain; charset\=UTF-8\nContent-Transfer-Encoding: 8bit\n

# #######################################################################
#
# List of Locales
#
# #######################################################################
(locale)en=English (en)

(locale)en-US=English - US (en-US)

(locale)zh-TW=\u7e41\u9ad4\u4e2d\u6587 - \u53f0\u7063 (zh-TW)

# #######################################################################
#
# List of Locations (used by setup)
#
# #######################################################################
vivipos.fec.registry.package-location.generic=Generic Location

# #######################################################################
#
# List of Sectors (used by setup)
#
# #######################################################################
vivipos.fec.registry.package.generic.generic.label=Generic

vivipos.fec.registry.package.generic.generic.description=If you are not sure what sector to choose, you may want to start with this selection.

vivipos.fec.registry.package.generic.retail.label=Retail

vivipos.fec.registry.package.generic.retail.description=This is for general retail.

# #######################################################################
#
# List of Control Panels
#
# #######################################################################
# #############
# ACTIVITIES
# #############
vivipos.fec.settings.controlpanels.activity.pricelevelschedule.label=Price Level Schedule

vivipos.fec.settings.controlpanels.activity.promotions_manager.label=Promotions Manager

# #########
# CONFIG
# #########
vivipos.fec.settings.controlpanels.config.addons.label=Add-ons

vivipos.fec.settings.controlpanels.config.annotations.label=Annotation Types

vivipos.fec.settings.controlpanels.config.currency.label=Currency Exchange

vivipos.fec.settings.controlpanels.config.destinations.label=Order Destinations

vivipos.fec.settings.controlpanels.config.devices.label=Devices

vivipos.fec.settings.controlpanels.config.functionpanel.label=Function Panel Configuration

vivipos.fec.settings.controlpanels.config.hotkey.label=HotKey Configuration

vivipos.fec.settings.controlpanels.config.layout.label=Layout Manager

vivipos.fec.settings.controlpanels.config.ledger.label=Ledger

vivipos.fec.settings.controlpanels.config.sysprefs.label=General Options

vivipos.fec.settings.controlpanels.config.tableman.label=Table Manager

# ###########
# EMPLOYEE
# ###########
vivipos.fec.settings.controlpanels.employee.jobs.label=Jobs

vivipos.fec.settings.controlpanels.employee.roles.label=Roles

vivipos.fec.settings.controlpanels.employee.storecontact.label=Store Contact

vivipos.fec.settings.controlpanels.employee.users.label=Employees

# ##########
# PRODUCT
# ##########
vivipos.fec.settings.controlpanels.product.condiments.label=Condiments

vivipos.fec.settings.controlpanels.product.departments.label=Departments

vivipos.fec.settings.controlpanels.product.imagemanager.label=Image Manager

vivipos.fec.settings.controlpanels.product.nonplu_setting.label=Non PLU Setting

vivipos.fec.settings.controlpanels.product.plufilters.label=Product Filters

vivipos.fec.settings.controlpanels.product.plugroups.label=Product Groups

vivipos.fec.settings.controlpanels.product.plus.label=Products

vivipos.fec.settings.controlpanels.product.reports.label=Reports

vivipos.fec.settings.controlpanels.product.static_condiments.label=Condiment Dock

vivipos.fec.settings.controlpanels.product.stocks.label=Stock Control

vivipos.fec.settings.controlpanels.product.taxes.label=Taxes

# #########
# SYSTEM
# #########
vivipos.fec.settings.controlpanels.system.datetime.label=Date & Time

vivipos.fec.settings.controlpanels.system.importexport.label=Data Import/ Export

vivipos.fec.settings.controlpanels.system.localekeyboard.label=Language and Keyboard Mapping

vivipos.fec.settings.controlpanels.system.localization.label=Localization Editor

vivipos.fec.settings.controlpanels.system.network_setting.label=Network Settings

vivipos.fec.settings.controlpanels.system.printers.label=Printer Sharing

vivipos.fec.settings.controlpanels.system.remote_control.label=Remote Control

vivipos.fec.settings.controlpanels.system.sync_settings.label=Synchronization Settings

vivipos.fec.settings.controlpanels.system.systembackup.label=System Backup

vivipos.fec.settings.controlpanels.system.touch_calibration.label=Touch Calibration

vivipos.fec.settings.controlpanels.system.xterm.label=XTerm

# #######################################################################
#
# List of Reports
#
# #######################################################################
vivipos.fec.reportpanels.attendancerecord.label=Attendance Record

vivipos.fec.reportpanels.cashbyclerk.label=Shift Change Report

vivipos.fec.reportpanels.cashdrawerreport.label=Cash Drawer Report

vivipos.fec.reportpanels.cashdrawersummary.label=Cash Drawer Summary

vivipos.fec.reportpanels.clerksalesreport.label=Clerk Sales

vivipos.fec.reportpanels.dailysalesdetail.label=Sales - Detailed

vivipos.fec.reportpanels.dailysales.label=Sales Report

vivipos.fec.reportpanels.dailysalessummary.label=Sales Summary

vivipos.fec.reportpanels.departmentlist.label=Department List

vivipos.fec.reportpanels.detailedtaxreport.label=Detailed Tax Report

vivipos.fec.reportpanels.hourlysales.label=Hourly Sales

vivipos.fec.reportpanels.orderannotation.label=Order Annotations

vivipos.fec.reportpanels.orderstatus.label=Order Status Report

vivipos.fec.reportpanels.productlist.label=Product List

vivipos.fec.reportpanels.productsales.label=Product Sales

vivipos.fec.reportpanels.promotionsummary.label=Promotion Summary

vivipos.fec.reportpanels.salessummary.label=Sales Summary

vivipos.fec.reportpanels.stocks.label=Stock Report

vivipos.fec.reportpanels.userlist.label=Employee List

vivipos.fec.reportpanels.yourorder.label=Custom Sales Report

# #######################################################################
#
# Register Display - Payments
#
# #######################################################################
CREDITCARD=CC

COUPON=CPN

CASH=$

CHECK=CHK

GIFTCARD=GC

# #######################################################################
#
# Register Display - Markers
#
# #######################################################################
** SUBTOTAL=** SUB

** TOTAL=** TAL

** TRAY=** TRAY

# #######################################################################
#
# Register Display - Others
#
# #######################################################################
House Bon=BON

# #######################################################################
#
# Function Keys
#
# #######################################################################
# ################
# Training Mode
# ################
trainingMode.desc=This function is used to launch the training mode.

trainingMode.label=Training Mode

trainingMode.name=Training Mode

# ###################
# Return Cart Item
# ###################
returncartitem.desc=This function is used to register return of the current item in the shopping cart. No parameter is needed.

returncartitem.label=Return Item

returncartitem.name=Return Item

# ##################
# Item By Barcode
# ##################
itembybarcode.desc=This function is used to register an item by its product number or barcode.The parameter must be set to the product number or the barcode of the itemto be registered.

itembybarcode.label=PLU

itembybarcode.name=Register PLU

# ###########
# Annotate
# ###########
annotate.desc=This function is used to add and/or view annotations. Annotations are most often used to allow the user to enter customer data or special messages to be printed on receipts or checks. The parameter may be set to a pre-defined annotation code, in which case the user will be prompted to enter the annotation text for that annotation code. If the parameter is left blank, all annotations for the current order are listed, and the user may add, edit, or delete annotations per his/her access privileges.

annotate.label=Annotate

annotate.name=Annotate

# ################
# Issue Receipt
# ################
receipt.desc=This function issues a post-finalization receipt. The parameter should be 1 or 2, indicating the printer to issue the receipt on. If no parameter is given, the receipt will be printed on all enabled receipt printers.

receipt.label=Issue Receipt

receipt.name=Issue Receipt

# #####################
# Issue Receipt Copy
# #####################
receiptcopy.desc=This function issues a receipt copy. The parameter should be 1 or 2, indicating the printer to issue the receipt on. If no parameter is given, the receipt will be printed on all enabled receipt printers.

receiptcopy.label=Issue Receipt Copy

receiptcopy.name=Issue Receipt Copy

# ####################
# Issue Guest Check 
# ####################
printcheck.desc=This function issues a check. The parameter should be 1, 2, 3, or 4, indicating the printer to issue the check on. If no parameter is given, the check will be printed on all enabled check printers.

printcheck.label=Issue Check

printcheck.name=Issue Check

# #########################
# Issue Guest Check Copy
# #########################
checkcopy.desc=This function issues a check copy. The parameter should be 1, 2, 3, or 4, indicating the printer to issue the check on. If no parameter is given, the check will be printed on all enabled check printers.

checkcopy.label=Issue Check Copy

checkcopy.name=Issue Check Copy

# ####################
# Shift Price Level
# ####################
pricelevelshift.desc=This function shifts the current price level up by 1. No parameter is needed.

pricelevelshift.label=Price Level Shift

pricelevelshift.name=Price Level Shift

# ####################
# Set Price Level 1
# ####################
pricelevel1.desc=This function sets the current price level to 1. The parameter must be 1.

pricelevel1.label=Price Level 1

pricelevel1.name=Price Level 1

# ####################
# Set Price Level 2
# ####################
pricelevel2.desc=This function sets the current price level to 2. The parameter must be 2.

pricelevel2.label=Price Level 2

pricelevel2.name=Price Level 2

# ####################
# Set Price Level 3
# ####################
pricelevel3.desc=This function sets the current price level to 3. The parameter must be 3.

pricelevel3.label=Price Level 3

pricelevel3.name=Price Level 3

# ####################
# Set Price Level 4
# ####################
pricelevel4.desc=This function sets the current price level to 4. The parameter must be 4.

pricelevel4.label=Price Level 4

pricelevel4.name=Price Level 4

# ####################
# Set Price Level 5
# ####################
pricelevel5.desc=This function sets the current price level to 5. The parameter must be 5.

pricelevel5.label=Price Level 5

pricelevel5.name=Price Level 5

# ####################
# Set Price Level 6
# ####################
pricelevel6.desc=This function sets the current price level to 6. The parameter must be 6.

pricelevel6.label=Price Level 6

pricelevel6.name=Price Level 6

# ####################
# Set Price Level 7
# ####################
pricelevel7.desc=This function sets the current price level to 7. The parameter must be 7.

pricelevel7.label=Price Level 7

pricelevel7.name=Price Level 7

# ####################
# Set Price Level 8
# ####################
pricelevel8.desc=This function sets the current price level to 8. The parameter must be 8.

pricelevel8.label=Price Level 8

pricelevel8.name=Price Level 8

# ####################
# Set Price Level 9
# ####################
pricelevel9.desc=This function sets the current price level to 9. The parameter must be 9.

pricelevel9.label=Price Level 9

pricelevel9.name=Price Level 9

# ############
# Shift Tax
# ############
shifttax.desc=This function shifts current item's tax status. The parameter field can be used to program a specific tax status. If a preset tax status is programmed, this function changes the current item to the preset tax status; otherwise, it shifts the item to the next tax status.

shifttax.label=Shift Tax

shifttax.name=Shift Tax

# #########################
# Discount By Percentage
# #########################
discountByPercentage.desc=This function registers a percentage-based discount. The parameter field can be used to program a preset percentage and label (separated by comma.) If no preset percentage is programmed, the discount percentage is read from the input line.

discountByPercentage.label=-%

discountByPercentage.name=Discount

# #####################
# Discount By Amount
# #####################
discountByAmount.desc=This function registers a reduction. The parameter field can be used to program a preset reduction amount and label (separated by comma.) If no preset amount is programmed, the discount amount is read from the input line.

discountByAmount.label=-

discountByAmount.name=Reduction

# ##########################
# Surcharge By Percentage
# ##########################
surchargeByPercentage.desc=This function registers a percentage surcharge. The parameter field can be used to program a preset surcharge and label (separated by comma.) If no preset surcharge is programmed, the surcharge percentage is read from the input line.

surchargeByPercentage.label=+%

surchargeByPercentage.name=Surcharge

# ######################
# Surcharge By Amount
# ######################
surchargeByAmount.desc=This function registers an addition. The parameter field can be used to program a preset addition amount and label (separated by comma.) If no preset amount is programmed, the amount is read from the input line.

surchargeByAmount.label=+

surchargeByAmount.name=PLUS

# ##############
# Cash Tender
# ##############
cash.desc=This function registers a cash payment. The parameter field can be used to program a preset cash payment amount. If no preset is programmed, the payment amount is read from the input line  If the input line is also blank, a quick cash payment is registered.

cash.label=Cash

cash.name=Cash

# ###########
# Keypress
# ###########
keypress.desc=This function simulates a series of key presses. The parameter field contains the string of key characters to press.

keypress.label=Key

keypress.name=Keypress

# ##############
# Clear Input
# ##############
clear.desc=This function clears the input line. The parameter field must not be altered

clear.label=Clear

clear.name=Clear

# ############
# Enter Key
# ############
enter.desc=This function simulates pressing the 'Enter' key. The parameter field must not be altered

enter.label=Enter

enter.name=Enter

# ###############
# Quantity Key
# ###############
quantity.desc=This function sets the quantity to the value entered on the input line. The parameter field must not be altered

quantity.label=X

quantity.name=Quantity

# ##################
# Subtotal Marker
# ##################
subtotal.desc=This function registers a subtotal. The parameter field must not be altered

subtotal.label=SUB TOTAL

subtotal.name=Sub Total

# ##############
# Tray Marker
# ##############
traymarker.desc=This function registers a tray marker. The parameter field must not be altered

traymarker.label=Tray Marker

traymarker.name=Tray Marker

# ###############
# Cancel Order
# ###############
cancel.desc=This function cancels the current order. No parameter is needed.

cancel.label=Cancel

cancel.name=Cancel

# #################
# Product Search
# #################
plusearch.desc=This function allows the operator to perform a Product search. No parameter is needed.

plusearch.label=Product Search

plusearch.name=Product Search

# ##############
# Queue Order
# ##############
pushqueue.desc=This function queues the current order and readies the register for a new order. No parameter is needed.

pushqueue.label=Queue Order

pushqueue.name=Queue Order

# #############
# View Order
# #############
pullqueue.desc=This function allows the operator to recall a queued order. No parameter is needed.

pullqueue.label=View Queue

pullqueue.name=View Queue

# ##############
# Modify Item
# ##############
modifyitem.desc=This function allows the operator to modify a registered item. No parameter is needed.

modifyitem.label=Modify

modifyitem.name=Modify Item

# ############
# Void Item
# ############
voidItem.desc=This function voids the last transaction. No parameter is needed.

voidItem.label=VOID

voidItem.name=VOID

# ############
# House BON
# ############
houseBon.desc=This function marks the current item as 'on-the-house'. The parameter, if specified, will be used to register the discount.

houseBon.label=House BON

houseBon.name=House BON

# ###########
# Sign Off
# ###########
signOff.desc=This function signs off the current operator. No parameter is needed.

signOff.label=Sign Off

signOff.name=Sign Off

# ##########################
# Foreign Currency Tender
# ##########################
currencyConvert.desc=This function registers a currency conversion. The parameter indicates the currency code to convert from and must be filled.

currencyConvert.label=Currency Exchange

currencyConvert.name=Currency Exchange

# ####################
# Reset Price Level
# ####################
changeToCurrentLevel.desc=This function resets the current price level. If the price level schedule is active, the currently scheduled level is restored. If the price level schedule is not active, or if no schedule has been defined, the price level reverts to the system/user default. No parameter is needed.

changeToCurrentLevel.label=Reset Price Level

changeToCurrentLevel.name=Reset Price Level

# #####################
# Silent User Switch
# #####################
silentsignoff.desc=This function allows a silent switch to the user specified in the paramter field using password from the input buffer. The parameter field must be set to the username of the user to switch to.

silentsignoff.label=Silent User Switch

silentsignoff.name=Silent User Switch

# ####################
# Quick User Switch
# ####################
quicksignoff.desc=This function allows the current user to enter a password and quickly switch to the user identified by that password. No parameter is needed.

quicksignoff.label=Change Clerk

quicksignoff.name=Quick User Switch

# ###################
# Command Dispatch
# ###################
dispatch.desc=This function dispatches a command to a controller. The parameter field should be a comma-separated list of arguments, with the first argument being the command name, the second argument the data to pass to the command, and the third argument the controller handling the command.

dispatch.label=Dispatch

dispatch.name=Dispatch

# ##############
# Item Refund
# ##############
return.desc=This function registers a return of an item for refund. No parameter is needed.

return.label=Item Refund

return.name=Item Refund

# ######################
# Credit Card Payment
# ######################
creditcard.desc=This function registers a credit card payment. The parameter field should be set to the credit card type. The payment amount is read from the input line; if no input is present, the payment will be for the balance due. An optional second parameter, separated by a comma, when set to 1, will cause the credit card payment to be registered immediately, bypassing the confirm screen.

creditcard.label=Credit Card

creditcard.name=Credit Card

# ####################
# Payment By Coupon
# ####################
coupon.desc=This function registers a coupon payment. The parameter field should be set to the coupon type. A preset amount may be defined after the coupon type, separated by a comma. If no preset amount is programmed, the payment amount is read from the input line; if no input is present, the payment will be for the balance due. Finally, an optional third parameter, also separated by a comma, when set to 1, will cause the coupon payment to be registered immediately, bypassing the confirm screen.

coupon.label=Coupon

coupon.name=Coupon

# ######################
# Payment By Giftcard
# ######################
giftcard.desc=This function registers a giftcard payment. A giftcard payment is similar to a coupon payment, except that no change is given. The parameter field should be set to the giftcard type. A preset amount may also be defined after the giftcard type, separated by a comma. If no preset amount is programmed, the payment amount is read from the input line; if no input is present, the payment will be for the balance due. Finally, an optional third parameter,also separated by a comma, when set to 1, when set to 1, will cause the giftcard payment to be registered immediately, bypassing the confirm screen.

giftcard.label=Giftcard

giftcard.name=Giftcard

# ############################
# Payment By Personal Check
# ############################
check.desc=This function registers a check payment. The parameter field should be set to the check type. The payment amount is read from the input line; if no input is present, the payment will be for the balance due.

check.label=Check

check.name=Check

# #######################
# Show Payment Details
# #######################
showpayment.desc=This function displays details of currently registered payments. No parameter is needed.

showpayment.label=Show Payments

showpayment.name=Show Payments

# ###########
# Add Memo
# ###########
addmemo.desc=This function adds an open memo to an item in the cart. The memo may also be preset in the parameter field.

addmemo.label=Add Memo

addmemo.name=Add Memo

# ########################
# Add Linked Condiments
# ########################
addlinkedcondiment.desc=This function registers one or more condiments against a product from condiment groups linked to that product. The parameter field must be empty.

addlinkedcondiment.label=Add Linked Condiment

addlinkedcondiment.name=Add Linked Condiment

# #######################
# Add Static Condiment
# #######################
addcondiment.desc=This function registers one or more condiments given by the function parameter against a product. The condiments do not need to be explicitly linked to the product. The parameter field should contain a comma-separated list of condiment name - price tuples. Condiment name and price should be separated by a '|' symbol in each tuple.

addcondiment.label=Add Condiment

addcondiment.name=Add Condiment

# #################################
# Pretax Surcharge By Percentage
# #################################
surchargePretaxByPercentage.desc=This function registers a pretax order surcharge by percentage. The parameter field can be used to program a preset percentage and label (separated by comma.) If no preset percentage is programmed, the surcharge percentage is read from the input line.

surchargePretaxByPercentage.label=Pretax Order Surcharge

surchargePretaxByPercentage.name=Pretax Order Surcharge

# ################################
# Pretax Discount By Percentage
# ################################
discountPretaxByPercentage.desc=This function registers a pretax order discount by percentage. The parameter field can be used to program a preset percentage and label (separated by comma.) If no preset percentage is programmed, the discount percentage is read from the input line.

discountPretaxByPercentage.label=Pretax Order Discount

discountPretaxByPercentage.name=Pretax Order Discount

# ######################
# Open Cash Drawer #1
# ######################
opendrawer1.desc=This function opens cash drawer #1. The parameter field must be empty.

opendrawer1.label=Cash Drawer #1

opendrawer1.name=Cash Drawer #1

# ######################
# Open Cash Drawer #2
# ######################
opendrawer2.desc=This function opens cash drawer #2. The parameter field must be empty.

opendrawer2.label=Cash Drawer #2

opendrawer2.name=Cash Drawer #2

# ####################
# Prefinalize Order
# ####################
prefinalize.desc=This function closes the current order in order for finalization. As part of pre-finalization, the order is closed pending payment of the balance. The same set of post-finalization receipts, slips, and checks will be automatically printed. The parameter field may optional contain a destination. When destination is given, the order will be validated against it.

prefinalize.label=Pre-Finalize

prefinalize.name=Pre-Finalize

# ##################
# Set Destination
# ##################
setdestination.desc=This function sets the destination indicator to the status given by the parameter. The parameter field should be set to a defined destination name.

setdestination.label=Set Destination

setdestination.name=Set Destination

# ###########
# Tag Item
# ###########
tagitem.desc=This function tags the current cart item with the tag given by the parameter. The parameter field must not be empty.

tagitem.label=Tag Item

tagitem.name=Tag Item

# #########################
# Toggle Receipts On/Off
# #########################
togglereceipt.desc=This function is used to toggle receipt printing on/off. No parameter is needed.

togglereceipt.label=Receipt On/Off

togglereceipt.name=Receipt On/Off

# ###############
# Shift Change
# ###############
shiftchange.label=Shift Change

shiftchange.name=Shift Change

shiftchange.desc=This function is used to initiate shift change. No parameter is needed.

# ###############
# Ledger Entry
# ###############
ledgerentry.desc=This function is used to enter an entry into the ledger. The parameter may be used to program an ledger entry type and a receipt device number (separated by commas.) If the receipt device number is not given, no receipt will be issued.

ledgerentry.label=Ledger Entry

ledgerentry.name=Ledger Entry

# ####################
# Printer Dashboard
# ####################
printerDashboard.desc=This function allows the operator to quickly view and change the status of enabled devices. No parameter is needed.

printerDashboard.label=Printer Dashboard

printerDashboard.name=Printer Dashboard

# ##############
# View Orders
# ##############
vieworders.desc=This function allows the operator to quickly browse and view orders. No parameter is needed.

vieworders.label=View Orders

vieworders.name=View Orders

# ###############################
# Truncate Transaction Records
# ###############################
truncatetxnrecords.desc=This function removes all transactional data from the terminal. This feature should be used with extreme care, and it is strongly recommeded that the system be backed up before truncating transaction records. No parameter is needed.

truncatetxnrecords.label=Truncate Transaction Records

truncatetxnrecords.name=Truncate Transaction Records

# ################
# Control Panel
# ################
controlpanel.desc=This function allows the operator to bring up the configuration control panel. No parameter is needed.

controlpanel.label=Control Panel

controlpanel.name=Control Panel

# ###############
# Clock In/Out
# ###############
clockin.desc=This function allows the operator to bring up the clock in/out screen. No parameter is needed.

clockin.label=Clock In

clockin.name=Clock In

# ##########################
# Show/Hide Function Panel
# ##########################
togglefunctionpanel.desc=This function allows the operator to show/hide the function panel. No parameter is needed.

togglefunctionpanel.label=Toggle Function Panel

# #############################
# Show/Hide Virtual Keyboard
# #############################
togglefunctionpanel.name=Toggle Function Panel

togglevirtualkeyboard.desc=This function allows the operator to show/hide the virtual keyboard. No parameter is needed.

togglevirtualkeyboard.label=Toggle Virtual Keyboard

togglevirtualkeyboard.name=Toggle Virtual Keyboard

# #####################
# Adjust stock level
# #####################
stockAdjustment.label=Stock Adjustment

stockAdjustment.name=Stock Adjustment

stockAdjustment.desc=By using this function, the quantity of stock can be adjusted.Meanwhile, a memo of the adjustment can be recorded.

# ####################
# Shutdown Terminal
# ####################
shutdown.desc=This function shuts down the terminal. No parameter needed.

shutdown.label=Shutdown Terminal

shutdown.name=Shutdown Terminal

# ##################
# Reboot Terminal
# ##################
reboot.desc=This function reboots the terminal. No parameter needed.

reboot.label=Reboot Terminal

reboot.name=Reboot Terminal

# ##############
# Store Check
# ##############
storeCheck.desc=This function stores the current check and issues the appropriate receipts/checks. The parameter field must be empty.

storeCheck.label=Store Check

storeCheck.name=Store Check

# ###############
# Recall Check
# ###############
recallCheck.desc=This function recalls a prevously stored check for further action. The parameter field must be empty.

recallCheck.label=Recall Check

recallCheck.name=Recall Check

# ############
# New Check
# ############
newCheck.desc=This function assigns a new check number to an order. If the operator input a number first, then click this funcion button, the new check number will be the same as operator's input. If the operator click this function button directly, a new check number will be generated automatically. Check number can not be duplicated. The parameter field must be empty.

newCheck.label=New Check

newCheck.name=New Check

# ############
# New Table
# ############
newTable.desc=This function assigns a new table number to an order. If the operator input a number first, then click this funcion button, the new table number will be the same as cashier's input. If the operator click this function button directly, a screen of table map will pop-up for table selection. Table number can be duplicated. The parameter field must be empty.

newTable.label=New Table

newTable.name=New Table

# ###################
# Number of Guests
# ###################
guestNum.desc=This function allows the operator to register the number of guest. The parameter field must be empty.

guestNum.label=Number of Guests

guestNum.name=Number of Guests

# ###############
# Recall Order
# ###############
recallOrder.desc=This function recalls a previously stored check for further action via sequence number. If the operator click this function button without sequence number input, a screen will pop-up for the selection of stored check. The parameter field must be empty.

recallOrder.label=Recall Order

recallOrder.name=Recall Order

# ###############
# Recall Table
# ###############
recallTable.desc=This function recalls a previously stored check for further action via table number. If the operator click this function button without table number input, a screen will pop-up for the selection of stored check. The parameter field must be empty.

recallTable.label=Recall Table

recallTable.name=Recall Table

# ##############
# Merge Check 
# ##############
mergeCheck.desc=This function allows operator to merge checks by recalling previously stored check. The operator should recall a previously stored check first, then input a check number and click this funcion button, the checks will be merged automatically. If the operator does not input a check number to merge, a screen will pop-up for the selection of stored check. The parameter field must be empty.

mergeCheck.label=Merge Stored Checks

mergeCheck.name=Merge Stored Checks

# ##############
# Split Check 
# ##############
splitCheck.desc=This function allows operator to split check in a previously stored check. The operator should recall a previously stored check first, then click this funcion button, a screen of split check function will pop-up. The parameter field must be empty.

splitCheck.label=Split Stored Check

splitCheck.name=Split Stored Check

# #################
# Transfer Table
# #################
transferTable.desc=This function allows operator to change the table number in a previously stored check. The operator should recall a previously stored check first, then input a new table number and click this funcion button. If the operator does not input a new table number, a screen of table map will pop-up for table selection. The parameter field must be empty.

transferTable.label=Transfer Table No

transferTable.name=Transfer Table No

# #########
# Scale
# #########
scale.desc=This function allows operator to read product weight from scale. The parameter field, if set (1 or 2), indicates from which scale to read.

scale.label=Scale

scale.name=Scale

# ########
# Tare
# ########
tare.desc=This function allows operator to set scale tare. The parameter field, if set (1 or 2), indicates for which scale to set tare.

tare.label=Tare

tare.name=Tare

# #######################################################################
#
# List of ACLs
#
# #######################################################################
acl_internal_access=For Internal Access Only

acl_read_scale=Read Scale

acl_set_tare=Scale Tare

acl_stock_adjustment=Adjust Stock Level

acl_truncate_transaction_records=Truncate Transaction Records

acl_change_price_level=Change Price Level

acl_set_price_level_1=Set Price Level 1

acl_set_price_level_2=Set Price Level 2

acl_set_price_level_3=Set Price Level 3

acl_set_price_level_4=Set Price Level 4

acl_set_price_level_5=Set Price Level 5

acl_set_price_level_6=Set Price Level 6

acl_set_price_level_7=Set Price Level 7

acl_set_price_level_8=Set Price Level 8

acl_set_price_level_9=Set Price Level 9

acl_revert_price_level=Revert Price Level

acl_override_halo=Override HALO

acl_override_lalo=Override LALO

acl_queue_order=Queue Order

acl_pull_queue=Pull Order from Queue

acl_open_control_panel=Access Control Panel

acl_void_cart_item=Void Cart Items

acl_cancel_order=Cancel Order

acl_plu_search=Product Search

acl_open_cash=Register Cash Payment

acl_manage_condiments=Manage Condiments

acl_manage_currency=Manage Currency Exchange

acl_manage_departments=Manage Departments

acl_manage_employees=Manage Employees

acl_manage_function_panel=Manage Function Panel

acl_shift_item_tax=Shift Item Tax

acl_register_discount=Register Discounts

acl_register_reduction=Register Reductions

acl_register_surcharge=Register Surcharges

acl_register_addition=Register Additions

acl_send_keypress=Send Keypresses

acl_register_plus=Register Products

acl_register_enter=Register ENTER

acl_register_quantity=Register Quantity

acl_register_sub_total=Register Subtotal

acl_register_tray_marker=Register Tray Marker

acl_register_housebon=Register House BON

acl_register_currency_exchange=Register Currency Exchange

acl_manage_jobs=Manage Jobs

acl_manage_nonplu_setting=Manage Non-PLU Settings

acl_manage_plu_groups=Manage Product Groups

acl_manage_import_export=Import/Export Data

acl_manage_price_level_schedule=Manage Price Level Schedule

acl_manage_acl_groups=Manage Access Groups

acl_manage_stock=Manage Stock

acl_manage_system_options=Manage System Options

acl_manage_taxes=Manage Taxes

acl_manage_products=Manage Products

acl_register_return=Register Item Return

acl_register_credit_card=Register Credit Card Payment

acl_register_coupon=Register Coupon Payment

acl_register_giftcard=Register Giftcard Payment

acl_manage_images=Manage Images

acl_modify_condiment_price=Modify Condiment Price

acl_manage_locale_keyboard=Change Language and Keyboard Mapping

acl_register_pretax_discount=Register Order Discounts Pretax

acl_register_pretax_surcharge=Register Order Surcharges Pretax

acl_manage_reports=Run Reports

acl_manage_date_time=Set Date and Time

acl_manage_devices=Manage Devices

acl_issue_post_receipt=Issue Post-finalization Receipt

acl_issue_post_receipt_copy=Issue Post-finalization Receipt Copy

acl_issue_check=Issue Check

acl_issue_check_copy=Issue Check Copy

acl_manage_storecontact=Manage Store Contact

acl_open_cashdrawer_1=Open Cash Drawer #1

acl_open_cashdrawer_2=Open Cash Drawer #2

acl_register_check=Register Check Payment

acl_manage_backup=Manage System Backup/Recovery

acl_manage_sync_settings=Manage Cluster Synchronization

acl_set_destination=Set Destination

acl_pre_finalize=Pre-Finalize Order

acl_modify_price=Modify Price

acl_modify_quantity=Modify Quantity

acl_register_open_price=Register Open Price

acl_void_transactions=Void Completed Transactions

acl_tag_item=Tag Item

acl_manage_network_setting=Manage Network

acl_scroll_function_panel=Scroll Function Panel

acl_manage_hotkey=Manage Hotkey

acl_manage_addons=Manage Add-ons

acl_manage_destinations=Manage Order Destinations

acl_manage_annotations=Manage Annotations

acl_manage_plufilters=Manage Product Filters

acl_annotate=Add Annotations

acl_modify_annotations=Modify Annotations

acl_delete_annotations=Delete Annotations

acl_manage_ledger=Manage Ledger

acl_add_ledger_entry=Add Ledger Entries

acl_localization_editor=Localization Editor

acl_end_sale_period=End Sale Period

acl_remote_control=Remote Control

acl_touch_settings=Touch Screen Settings

acl_xterm=Run XTerm

acl_new_check=New Check

acl_new_table=New Table

acl_guest_no=Number of Guests

acl_store_check=Store Check

acl_recall_check=Recall Stored Check

acl_merge_check=Merge Stored Checks

acl_split_check=Split Stored Check

acl_transfer_table=Transfer Table

acl_manage_printers=Manager Printers

acl_printer_dashboard=Printer Dashboard

acl_view_orders=View Orders

acl_manage_promotions=Promotions Manager

acl_layout_manager=Layout Manager

acl_training_mode=Training Mode

acl_manage_tableman=Table Manager

# #######################################################################
#
# List of Templates
#
# #######################################################################
Sample Receipt 42c condensed=Sample Receipt 42c condensed

Sample Receipt 42c expanded=Sample Receipt 42c expanded

Sample Kitchen 42c expanded=Sample Kitchen 42c expanded

Sample Guest Check 42c condensed=Sample Guest Check 42c condensed

Sample Label Argox 203TD=Sample Label Argox 203TD

Sample Receipt 24c condensed=Sample Receipt 24c condensed

Internal VFD Template=Internal VFD Template

# #######################################################################
#
# List of Ports
#
# #######################################################################
COM 1=COM 1

COM 2=COM 2

COM 4=COM 4

COM 5=COM 5

USB 1=USB 1

USB 2=USB 2

USB 3=USB 3

USB 4=USB 4

GPIO 1=GPIO 1

# #######################################################################
#
# List of Device Models
#
# #######################################################################
FEC F632=FEC F632

Epson TM-T88IV=Epson TM-T88IV

Epson RP-U420=Epson RP-U420

Argox OS-203=Argox OS-203

Firich VFD=Firich VFD

Generic VFD=Generic VFD

# #######################################################################
#
# Promotion Triggers and Types
#
# #######################################################################
trigger.bypass.label=ByPass

trigger.bypass.name=ByPass

trigger.bypass.desc=ByPass Trigger always pass success to promotion type.

type.bypass.label=ByPass

type.bypass.name=ByPass

type.bypass.desc=ByPass Type always pass success.

trigger.individual_plu.label=Individual PLU

trigger.individual_plu.name=Individual PLU

trigger.individual_plu.desc=Individual PLU DESC, Chris Help!

trigger.individual_dept.label=Individual Department

trigger.individual_dept.name=Individual Department

trigger.individual_dept.desc=Individual Department DESC, Chris Help!

trigger.individual_group.label=Individual Group

trigger.individual_group.name=Individual Group

trigger.individual_group.desc=Individual Group DESC, Chris Help!

type.amount_off.label=Amount Off

type.amount_off.name=Amount Off

type.amount_off.desc=Amount Off DESC, Chris Help!

type.percentage_off.label=Percentage Off

type.percentage_off.name=Percentage Off

type.percentage_off.desc=Percentage Off DESC, Chris Help!

type.fixed_value.label=Fixed Value

type.fixed_value.name=Fixed Value

type.fixed_value.desc=Fixed Value DESC, Chris Help!

type.cheapest_one_free.label=Cheapest One Free

type.cheapest_one_free.name=Cheapest One Free

type.cheapest_one_free.desc=Cheapest One Free DESC, Chris Help!

type.multi_buy.label=Multi Buy

type.multi_buy.name=Multi Buy

type.multi_buy.desc=Multi Buy DESC, Chris Help!

# #######################################################################
#
# System Backup
#
# #######################################################################
Factory=Factory Dataset

Training=Training Dataset

restore_with_system.confirm_message=Restore with System Settings will restore all systems settings including software activation code to this machine.\nPlease MAKE SURE the backup files are from this machine otherwise a 'license error message' will pop up.

# #######################################################################
#
# Common Abbreviations
#
# #######################################################################
Y=YES

N=NO

# #######################################################################
#
# Layouts
#
# #######################################################################
vivipos.fec.registry.layouts.traditional.label=Traditional Layout

vivipos.fec.registry.layouts.traditional.desc=Traditional Layout, suitable for quick service and ECR type applications

vivipos.fec.registry.layouts.retail.label=Retail Layout

vivipos.fec.registry.layouts.retail.desc=Retail Layout (for conceptual demonstration only)

# #######################################################################
#
# Tax Types & Rate Types
#
# #######################################################################
(taxType)INCLUDED=included

(taxType)ADDON=add-on

(taxType)COMBINE=combined

(taxType)VAT & VAT=VAT & VAT

(taxRateType)%=Percentage

(taxRateType)$=Fixed Amount

# #######################################################################
#
# Ledger Entry Types
#
# #######################################################################
(ledgerEntryType)IN=IN

(ledgerEntryType)OUT=OUT

(ledgerEntryType)Y=Yes

(ledgerEntryType)N=No

#: /tmp/your_order_report.js:1
(rpt)Terminal=(rpt)Terminal

#: /tmp/your_order_report.js:2
(rpt)Service Clerk=(rpt)Service Clerk

#: /tmp/your_order_report.js:3
(rpt)Service Clerk Display Name=(rpt)Service Clerk Display Name

#: /tmp/your_order_report.js:4
(rpt)Proceeds Clerk=(rpt)Proceeds Clerk

#: /tmp/your_order_report.js:5
(rpt)Proceeds Clerk Display Name=(rpt)Proceeds Clerk Display Name

#: /tmp/your_order_report.js:6
(rpt)Sale Period=(rpt)Sale Period

#: /tmp/your_order_report.js:7
(rpt)Shift=(rpt)Shift

#: /tmp/your_order_report.js:8
(rpt)Selected Time=(rpt)Selected Time

#: /tmp/your_order_report.js:9
(rpt)Sequence=(rpt)Sequence

#: /tmp/your_order_report.js:10
(rpt)Destination=(rpt)Destination

#: /tmp/your_order_report.js:11
(rpt)Status=(rpt)Status

#: /tmp/your_order_report.js:12
(rpt)Table Number=(rpt)Table Number

#: /tmp/your_order_report.js:13
(rpt)Check Number=(rpt)Check Number

#: /tmp/your_order_report.js:14
(rpt)Created Time=(rpt)Created Time

#: /tmp/your_order_report.js:15 /tmp/your_order_report.js:16
(rpt)Stored/Finalized Time=(rpt)Stored/Finalized Time

#: /tmp/your_order_report.js:17
(rpt)Member ID=(rpt)Member ID

#: /tmp/your_order_report.js:18
(rpt)Member Display Name=(rpt)Member Display Name

#: /tmp/your_order_report.js:19
(rpt)Member Email=(rpt)Member Email

#: /tmp/your_order_report.js:20
(rpt)Member Cellphone=(rpt)Member Cellphone

#: /tmp/your_order_report.js:21
(rpt)Branch ID=(rpt)Branch ID

#: /tmp/your_order_report.js:22
(rpt)Branch=(rpt)Branch

#: /tmp/your_order_report.js:23
(rpt)Voided Time=(rpt)Voided Time

#: /tmp/your_order_report.js:24
(rpt)Voided Clerk=(rpt)Voided Clerk

#: /tmp/your_order_report.js:25
(rpt)Voided Clerk Display Name=(rpt)Voided Clerk Display Name

#: /tmp/your_order_report.js:26
(rpt)Void Sale Period=(rpt)Void Sale Period

#: /tmp/your_order_report.js:27
(rpt)Void Shift Number=(rpt)Void Shift Number

#: /tmp/your_order_report.js:28
(rpt)Invoice Type=(rpt)Invoice Type

#: /tmp/your_order_report.js:29
(rpt)Invoice Title=(rpt)Invoice Title

#: /tmp/your_order_report.js:30
(rpt)Invoice Number=(rpt)Invoice Number

#: /tmp/your_order_report.js:31
(rpt)Invoice Count=(rpt)Invoice Count

#: /tmp/your_order_report.js:32
(rpt)Items Count=(rpt)Items Count

#: /tmp/your_order_report.js:33
(rpt)Number of Guests=(rpt)Number of Guests

#: /tmp/your_order_report.js:34
(rpt)Number of Items=(rpt)Number of Items

#: /tmp/your_order_report.js:35
(rpt)Change=(rpt)Change

#: /tmp/your_order_report.js:36
(rpt)Included Tax=(rpt)Included Tax

#: /tmp/your_order_report.js:37
(rpt)Gross Sales=(rpt)Gross Sales

#: /tmp/your_order_report.js:38
(rpt)Add-on Tax=(rpt)Add-on Tax

#: /tmp/your_order_report.js:39
(rpt)Surcharge=(rpt)Surcharge

#: /tmp/your_order_report.js:40
(rpt)Discount=(rpt)Discount

#: /tmp/your_order_report.js:41
(rpt)Promotion=(rpt)Promotion

#: /tmp/your_order_report.js:42
(rpt)Revalue=(rpt)Revalue

#: /tmp/your_order_report.js:43
(rpt)Net Sales=(rpt)Net Sales

#: /tmp/your_order_report.js:44
(rpt)Payment=(rpt)Payment

#: /tmp/your_order_report.js:45
(rpt)Cash=(rpt)Cash

#: /tmp/your_order_report.js:46
(rpt)Check=(rpt)Check

#: /tmp/your_order_report.js:47
(rpt)Credit Card=(rpt)Credit Card

#: /tmp/your_order_report.js:48
(rpt)Coupon=(rpt)Coupon

#: /tmp/your_order_report.js:49
(rpt)Gift Card=(rpt)Gift Card
