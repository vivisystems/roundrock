# Makefile.in generated by automake 1.10.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# vim:noexpandtab:autoindent:tabstop=8:shiftwidth=8:filetype=make:nocindent:tw=0:

# vim:noexpandtab:autoindent:tabstop=8:shiftwidth=8:filetype=make:nocindent:tw=0:

# vim:tw=0:et:ts=4:sw=4

# vim:noexpandtab:autoindent:tabstop=8:shiftwidth=8:filetype=make:nocindent:tw=0:




pkgdatadir = $(datadir)/libsmbios
pkglibdir = $(libdir)/libsmbios
pkgincludedir = $(includedir)/libsmbios
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
bin_PROGRAMS =
sbin_PROGRAMS = bin-supported/assetTag$(EXEEXT) \
	bin-supported/getSystemId$(EXEEXT) \
	bin-supported/propertyTag$(EXEEXT) \
	bin-supported/serviceTag$(EXEEXT) \
	bin-supported/verifySmiPassword$(EXEEXT) \
	bin-supported/wakeupCtl$(EXEEXT) \
	bin-supported/dellBiosUpdate$(EXEEXT) \
	bin-supported/dellLcdBrightness$(EXEEXT) \
	bin-supported/dumpSmbios$(EXEEXT) \
	bin-supported/dellWirelessCtl$(EXEEXT) \
	bin-supported/dellMediaDirectCtl$(EXEEXT) \
	bin-unsupported/activateCmosToken$(EXEEXT) \
	bin-unsupported/createUnitTestFiles$(EXEEXT) \
	bin-unsupported/disable_console_redir$(EXEEXT) \
	bin-unsupported/dumpCmos$(EXEEXT) \
	bin-unsupported/isCmosTokenActive$(EXEEXT) \
	bin-unsupported/smitest$(EXEEXT) \
	bin-unsupported/stateByteCtl$(EXEEXT) \
	bin-unsupported/upBootCtl$(EXEEXT) \
	bin-unsupported/getPasswordFormat$(EXEEXT) \
	bin-unsupported/ascii2enUS_scancode$(EXEEXT) \
	bin-unsupported/probes$(EXEEXT) \
	bin-unsupported/dellLEDCtl$(EXEEXT)
EXTRA_PROGRAMS = bin-supported/assetTagS$(EXEEXT) \
	bin-supported/getSystemIdS$(EXEEXT) \
	bin-supported/propertyTagS$(EXEEXT) \
	bin-supported/serviceTagS$(EXEEXT) \
	bin-supported/verifySmiPasswordS$(EXEEXT) \
	bin-supported/wakeupCtlS$(EXEEXT) \
	bin-supported/dellBiosUpdateS$(EXEEXT) \
	bin-supported/dellLcdBrightnessS$(EXEEXT) \
	bin-supported/dumpSmbiosS$(EXEEXT) \
	bin-supported/dellWirelessCtlS$(EXEEXT) \
	bin-supported/dellMediaDirectCtlS$(EXEEXT) \
	bin-unsupported/activateCmosTokenS$(EXEEXT) \
	bin-unsupported/createUnitTestFilesS$(EXEEXT) \
	bin-unsupported/disable_console_redirS$(EXEEXT) \
	bin-unsupported/dumpCmosS$(EXEEXT) \
	bin-unsupported/isCmosTokenActiveS$(EXEEXT) \
	bin-unsupported/smitestS$(EXEEXT) \
	bin-unsupported/stateByteCtlS$(EXEEXT) \
	bin-unsupported/upBootCtlS$(EXEEXT) \
	bin-unsupported/getPasswordFormatS$(EXEEXT) \
	bin-unsupported/ascii2enUS_scancodeS$(EXEEXT) \
	bin-unsupported/probesS$(EXEEXT) \
	bin-unsupported/dellLEDCtlS$(EXEEXT)
DIST_COMMON = README $(am__configure_deps) $(dist_bin_SCRIPTS) \
	$(dist_sbin_SCRIPTS) $(srcdir)/${PACKAGE_NAME}.spec.in \
	$(srcdir)/ChangeLog $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/bin-supported/Makefile.am \
	$(srcdir)/bin-unsupported/Makefile.am \
	$(srcdir)/cppunit/Makefile.am $(srcdir)/libraries/Makefile.am \
	$(top_srcdir)/configure \
	$(top_srcdir)/doc/full-documentation.dox.in \
	$(top_srcdir)/doc/interface-only.dox.in \
	$(top_srcdir)/include/smbios/version.h.in AUTHORS COPYING \
	ChangeLog INSTALL NEWS TODO build/compile build/config.guess \
	build/config.sub build/depcomp build/install-sh \
	build/ltmain.sh build/missing
check_PROGRAMS = cppunit/testRbu$(EXEEXT) \
	cppunit/testPlatform$(EXEEXT) cppunit/testStandalone$(EXEEXT)
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES = include/smbios/version.h \
	doc/full-documentation.dox doc/interface-only.dox \
	${PACKAGE_NAME}.spec
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(sbindir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(sbindir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libraries_libsmbios_la_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_libraries_libsmbios_la_OBJECTS =  \
	libraries/cmos/libraries_libsmbios_la-CmosRW.lo \
	libraries/cmos/libraries_libsmbios_la-CmosRWFactory.lo \
	libraries/cmos/libraries_libsmbios_la-CmosRW_LinuxIO.lo \
	libraries/common/libraries_libsmbios_la-ascii2enUS_scancode.lo \
	libraries/common/libraries_libsmbios_la-Observer.lo \
	libraries/memory/libraries_libsmbios_la-Memory.lo \
	libraries/memory/libraries_libsmbios_la-Memory_Linux.lo \
	libraries/rbu/libraries_libsmbios_la-RbuHdr.lo \
	libraries/rbu/libraries_libsmbios_la-Rbu_Linux.lo \
	libraries/smbios/libraries_libsmbios_la-SmbiosFactory.lo \
	libraries/smbios/libraries_libsmbios_la-SmbiosItem.lo \
	libraries/smbios/libraries_libsmbios_la-SmbiosStrategy.lo \
	libraries/smbios/libraries_libsmbios_la-SmbiosStrategy_Linux.lo \
	libraries/smbios/libraries_libsmbios_la-SmbiosTable.lo \
	libraries/smbios/libraries_libsmbios_la-SmbiosTableIterator.lo \
	libraries/smbios/libraries_libsmbios_la-SmbiosWorkaround.lo \
	libraries/smi/libraries_libsmbios_la-Smi.lo \
	libraries/smi/libraries_libsmbios_la-SmiFactory.lo \
	libraries/smi/libraries_libsmbios_la-Smi_Linux.lo \
	libraries/systeminfo/libraries_libsmbios_la-IdByte.lo \
	libraries/systeminfo/libraries_libsmbios_la-SysInfoError.lo \
	libraries/systeminfo/libraries_libsmbios_la-System.lo \
	libraries/systeminfo/libraries_libsmbios_la-SystemDetect.lo \
	libraries/token/libraries_libsmbios_la-checksum.lo \
	libraries/token/libraries_libsmbios_la-Token.lo \
	libraries/token/libraries_libsmbios_la-TokenD4.lo \
	libraries/token/libraries_libsmbios_la-TokenD5.lo \
	libraries/token/libraries_libsmbios_la-TokenD6.lo \
	libraries/token/libraries_libsmbios_la-TokenDA.lo \
	libraries/token/libraries_libsmbios_la-TokenTable.lo \
	libraries/token/libraries_libsmbios_la-TokenTableFactory.lo \
	libraries/token/libraries_libsmbios_la-TokenTableIterator.lo
libraries_libsmbios_la_OBJECTS = $(am_libraries_libsmbios_la_OBJECTS)
libraries_libsmbios_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) \
	$(libraries_libsmbios_la_LDFLAGS) $(LDFLAGS) -o $@
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
sbinPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS) $(sbin_PROGRAMS)
am__objects_1 = bin-supported/getopts.$(OBJEXT)
am_bin_supported_assetTag_OBJECTS = bin-supported/assetTag.$(OBJEXT) \
	$(am__objects_1)
bin_supported_assetTag_OBJECTS = $(am_bin_supported_assetTag_OBJECTS)
bin_supported_assetTag_LDADD = $(LDADD)
bin_supported_assetTag_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(bin_supported_assetTag_LDFLAGS) $(LDFLAGS) -o $@
am_bin_supported_assetTagS_OBJECTS = bin-supported/assetTag.$(OBJEXT) \
	$(am__objects_1)
bin_supported_assetTagS_OBJECTS =  \
	$(am_bin_supported_assetTagS_OBJECTS)
bin_supported_assetTagS_LDADD = $(LDADD)
bin_supported_assetTagS_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(bin_supported_assetTagS_LDFLAGS) $(LDFLAGS) -o \
	$@
am_bin_supported_dellBiosUpdate_OBJECTS = $(am__objects_1) \
	bin-supported/bin_supported_dellBiosUpdate-dellBiosUpdate.$(OBJEXT)
bin_supported_dellBiosUpdate_OBJECTS =  \
	$(am_bin_supported_dellBiosUpdate_OBJECTS)
bin_supported_dellBiosUpdate_LDADD = $(LDADD)
bin_supported_dellBiosUpdate_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(bin_supported_dellBiosUpdate_CXXFLAGS) $(CXXFLAGS) \
	$(bin_supported_dellBiosUpdate_LDFLAGS) $(LDFLAGS) -o $@
am_bin_supported_dellBiosUpdateS_OBJECTS = $(am__objects_1) \
	bin-supported/bin_supported_dellBiosUpdateS-dellBiosUpdate.$(OBJEXT)
bin_supported_dellBiosUpdateS_OBJECTS =  \
	$(am_bin_supported_dellBiosUpdateS_OBJECTS)
bin_supported_dellBiosUpdateS_LDADD = $(LDADD)
bin_supported_dellBiosUpdateS_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(bin_supported_dellBiosUpdateS_CXXFLAGS) $(CXXFLAGS) \
	$(bin_supported_dellBiosUpdateS_LDFLAGS) $(LDFLAGS) -o $@
am_bin_supported_dellLcdBrightness_OBJECTS = $(am__objects_1) \
	bin-supported/dellLcdBrightness.$(OBJEXT)
bin_supported_dellLcdBrightness_OBJECTS =  \
	$(am_bin_supported_dellLcdBrightness_OBJECTS)
bin_supported_dellLcdBrightness_LDADD = $(LDADD)
bin_supported_dellLcdBrightness_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_supported_dellLcdBrightness_LDFLAGS) $(LDFLAGS) -o $@
am_bin_supported_dellLcdBrightnessS_OBJECTS = $(am__objects_1) \
	bin-supported/dellLcdBrightness.$(OBJEXT)
bin_supported_dellLcdBrightnessS_OBJECTS =  \
	$(am_bin_supported_dellLcdBrightnessS_OBJECTS)
bin_supported_dellLcdBrightnessS_LDADD = $(LDADD)
bin_supported_dellLcdBrightnessS_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_supported_dellLcdBrightnessS_LDFLAGS) $(LDFLAGS) -o $@
am_bin_supported_dellMediaDirectCtl_OBJECTS = $(am__objects_1) \
	bin-supported/dellMediaDirectCtl.$(OBJEXT)
bin_supported_dellMediaDirectCtl_OBJECTS =  \
	$(am_bin_supported_dellMediaDirectCtl_OBJECTS)
bin_supported_dellMediaDirectCtl_LDADD = $(LDADD)
bin_supported_dellMediaDirectCtl_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_supported_dellMediaDirectCtl_LDFLAGS) $(LDFLAGS) -o $@
am_bin_supported_dellMediaDirectCtlS_OBJECTS = $(am__objects_1) \
	bin-supported/dellMediaDirectCtl.$(OBJEXT)
bin_supported_dellMediaDirectCtlS_OBJECTS =  \
	$(am_bin_supported_dellMediaDirectCtlS_OBJECTS)
bin_supported_dellMediaDirectCtlS_LDADD = $(LDADD)
bin_supported_dellMediaDirectCtlS_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_supported_dellMediaDirectCtlS_LDFLAGS) $(LDFLAGS) -o $@
am_bin_supported_dellWirelessCtl_OBJECTS = $(am__objects_1) \
	bin-supported/dellWirelessCtl.$(OBJEXT)
bin_supported_dellWirelessCtl_OBJECTS =  \
	$(am_bin_supported_dellWirelessCtl_OBJECTS)
bin_supported_dellWirelessCtl_LDADD = $(LDADD)
bin_supported_dellWirelessCtl_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_supported_dellWirelessCtl_LDFLAGS) $(LDFLAGS) -o $@
am_bin_supported_dellWirelessCtlS_OBJECTS = $(am__objects_1) \
	bin-supported/dellWirelessCtl.$(OBJEXT)
bin_supported_dellWirelessCtlS_OBJECTS =  \
	$(am_bin_supported_dellWirelessCtlS_OBJECTS)
bin_supported_dellWirelessCtlS_LDADD = $(LDADD)
bin_supported_dellWirelessCtlS_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_supported_dellWirelessCtlS_LDFLAGS) $(LDFLAGS) -o $@
am_bin_supported_dumpSmbios_OBJECTS = $(am__objects_1) \
	bin-supported/dumpSmbios.$(OBJEXT)
bin_supported_dumpSmbios_OBJECTS =  \
	$(am_bin_supported_dumpSmbios_OBJECTS)
bin_supported_dumpSmbios_LDADD = $(LDADD)
bin_supported_dumpSmbios_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(bin_supported_dumpSmbios_LDFLAGS) \
	$(LDFLAGS) -o $@
am_bin_supported_dumpSmbiosS_OBJECTS = $(am__objects_1) \
	bin-supported/dumpSmbios.$(OBJEXT)
bin_supported_dumpSmbiosS_OBJECTS =  \
	$(am_bin_supported_dumpSmbiosS_OBJECTS)
bin_supported_dumpSmbiosS_LDADD = $(LDADD)
bin_supported_dumpSmbiosS_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_supported_dumpSmbiosS_LDFLAGS) $(LDFLAGS) -o $@
am_bin_supported_getSystemId_OBJECTS =  \
	bin-supported/getSystemId.$(OBJEXT) $(am__objects_1)
bin_supported_getSystemId_OBJECTS =  \
	$(am_bin_supported_getSystemId_OBJECTS)
bin_supported_getSystemId_LDADD = $(LDADD)
bin_supported_getSystemId_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_supported_getSystemId_LDFLAGS) $(LDFLAGS) -o $@
am_bin_supported_getSystemIdS_OBJECTS =  \
	bin-supported/getSystemId.$(OBJEXT) $(am__objects_1)
bin_supported_getSystemIdS_OBJECTS =  \
	$(am_bin_supported_getSystemIdS_OBJECTS)
bin_supported_getSystemIdS_LDADD = $(LDADD)
bin_supported_getSystemIdS_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_supported_getSystemIdS_LDFLAGS) $(LDFLAGS) -o $@
am_bin_supported_propertyTag_OBJECTS = $(am__objects_1) \
	bin-supported/propertyTag.$(OBJEXT)
bin_supported_propertyTag_OBJECTS =  \
	$(am_bin_supported_propertyTag_OBJECTS)
bin_supported_propertyTag_LDADD = $(LDADD)
bin_supported_propertyTag_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_supported_propertyTag_LDFLAGS) $(LDFLAGS) -o $@
am_bin_supported_propertyTagS_OBJECTS = $(am__objects_1) \
	bin-supported/propertyTag.$(OBJEXT)
bin_supported_propertyTagS_OBJECTS =  \
	$(am_bin_supported_propertyTagS_OBJECTS)
bin_supported_propertyTagS_LDADD = $(LDADD)
bin_supported_propertyTagS_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_supported_propertyTagS_LDFLAGS) $(LDFLAGS) -o $@
am_bin_supported_serviceTag_OBJECTS = $(am__objects_1) \
	bin-supported/serviceTag.$(OBJEXT)
bin_supported_serviceTag_OBJECTS =  \
	$(am_bin_supported_serviceTag_OBJECTS)
bin_supported_serviceTag_LDADD = $(LDADD)
bin_supported_serviceTag_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(bin_supported_serviceTag_LDFLAGS) \
	$(LDFLAGS) -o $@
am_bin_supported_serviceTagS_OBJECTS = $(am__objects_1) \
	bin-supported/serviceTag.$(OBJEXT)
bin_supported_serviceTagS_OBJECTS =  \
	$(am_bin_supported_serviceTagS_OBJECTS)
bin_supported_serviceTagS_LDADD = $(LDADD)
bin_supported_serviceTagS_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_supported_serviceTagS_LDFLAGS) $(LDFLAGS) -o $@
am_bin_supported_verifySmiPassword_OBJECTS = $(am__objects_1) \
	bin-supported/verifySmiPassword.$(OBJEXT)
bin_supported_verifySmiPassword_OBJECTS =  \
	$(am_bin_supported_verifySmiPassword_OBJECTS)
bin_supported_verifySmiPassword_LDADD = $(LDADD)
bin_supported_verifySmiPassword_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_supported_verifySmiPassword_LDFLAGS) $(LDFLAGS) -o $@
am_bin_supported_verifySmiPasswordS_OBJECTS = $(am__objects_1) \
	bin-supported/verifySmiPassword.$(OBJEXT)
bin_supported_verifySmiPasswordS_OBJECTS =  \
	$(am_bin_supported_verifySmiPasswordS_OBJECTS)
bin_supported_verifySmiPasswordS_LDADD = $(LDADD)
bin_supported_verifySmiPasswordS_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_supported_verifySmiPasswordS_LDFLAGS) $(LDFLAGS) -o $@
am_bin_supported_wakeupCtl_OBJECTS = $(am__objects_1) \
	bin-supported/wakeupCtl.$(OBJEXT)
bin_supported_wakeupCtl_OBJECTS =  \
	$(am_bin_supported_wakeupCtl_OBJECTS)
bin_supported_wakeupCtl_LDADD = $(LDADD)
bin_supported_wakeupCtl_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(bin_supported_wakeupCtl_LDFLAGS) $(LDFLAGS) -o \
	$@
am_bin_supported_wakeupCtlS_OBJECTS = $(am__objects_1) \
	bin-supported/wakeupCtl.$(OBJEXT)
bin_supported_wakeupCtlS_OBJECTS =  \
	$(am_bin_supported_wakeupCtlS_OBJECTS)
bin_supported_wakeupCtlS_LDADD = $(LDADD)
bin_supported_wakeupCtlS_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(bin_supported_wakeupCtlS_LDFLAGS) \
	$(LDFLAGS) -o $@
am_bin_unsupported_activateCmosToken_OBJECTS = $(am__objects_1) \
	bin-unsupported/activateCmosToken.$(OBJEXT)
bin_unsupported_activateCmosToken_OBJECTS =  \
	$(am_bin_unsupported_activateCmosToken_OBJECTS)
bin_unsupported_activateCmosToken_LDADD = $(LDADD)
bin_unsupported_activateCmosToken_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_unsupported_activateCmosToken_LDFLAGS) $(LDFLAGS) -o $@
am_bin_unsupported_activateCmosTokenS_OBJECTS = $(am__objects_1) \
	bin-unsupported/activateCmosToken.$(OBJEXT)
bin_unsupported_activateCmosTokenS_OBJECTS =  \
	$(am_bin_unsupported_activateCmosTokenS_OBJECTS)
bin_unsupported_activateCmosTokenS_LDADD = $(LDADD)
bin_unsupported_activateCmosTokenS_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_unsupported_activateCmosTokenS_LDFLAGS) $(LDFLAGS) -o $@
am_bin_unsupported_ascii2enUS_scancode_OBJECTS = $(am__objects_1) \
	bin-unsupported/ascii2enUS_scancode.$(OBJEXT)
bin_unsupported_ascii2enUS_scancode_OBJECTS =  \
	$(am_bin_unsupported_ascii2enUS_scancode_OBJECTS)
bin_unsupported_ascii2enUS_scancode_LDADD = $(LDADD)
bin_unsupported_ascii2enUS_scancode_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_unsupported_ascii2enUS_scancode_LDFLAGS) $(LDFLAGS) -o \
	$@
am_bin_unsupported_ascii2enUS_scancodeS_OBJECTS = $(am__objects_1) \
	bin-unsupported/ascii2enUS_scancode.$(OBJEXT)
bin_unsupported_ascii2enUS_scancodeS_OBJECTS =  \
	$(am_bin_unsupported_ascii2enUS_scancodeS_OBJECTS)
bin_unsupported_ascii2enUS_scancodeS_LDADD = $(LDADD)
bin_unsupported_ascii2enUS_scancodeS_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_unsupported_ascii2enUS_scancodeS_LDFLAGS) $(LDFLAGS) -o \
	$@
am_bin_unsupported_createUnitTestFiles_OBJECTS = $(am__objects_1) \
	bin-unsupported/createUnitTestFiles.$(OBJEXT)
bin_unsupported_createUnitTestFiles_OBJECTS =  \
	$(am_bin_unsupported_createUnitTestFiles_OBJECTS)
bin_unsupported_createUnitTestFiles_LDADD = $(LDADD)
bin_unsupported_createUnitTestFiles_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_unsupported_createUnitTestFiles_LDFLAGS) $(LDFLAGS) -o \
	$@
am_bin_unsupported_createUnitTestFilesS_OBJECTS = $(am__objects_1) \
	bin-unsupported/createUnitTestFiles.$(OBJEXT)
bin_unsupported_createUnitTestFilesS_OBJECTS =  \
	$(am_bin_unsupported_createUnitTestFilesS_OBJECTS)
bin_unsupported_createUnitTestFilesS_LDADD = $(LDADD)
bin_unsupported_createUnitTestFilesS_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_unsupported_createUnitTestFilesS_LDFLAGS) $(LDFLAGS) -o \
	$@
am_bin_unsupported_dellLEDCtl_OBJECTS = $(am__objects_1) \
	bin-unsupported/dellLEDCtl.$(OBJEXT)
bin_unsupported_dellLEDCtl_OBJECTS =  \
	$(am_bin_unsupported_dellLEDCtl_OBJECTS)
bin_unsupported_dellLEDCtl_LDADD = $(LDADD)
bin_unsupported_dellLEDCtl_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_unsupported_dellLEDCtl_LDFLAGS) $(LDFLAGS) -o $@
am_bin_unsupported_dellLEDCtlS_OBJECTS = $(am__objects_1) \
	bin-unsupported/dellLEDCtl.$(OBJEXT)
bin_unsupported_dellLEDCtlS_OBJECTS =  \
	$(am_bin_unsupported_dellLEDCtlS_OBJECTS)
bin_unsupported_dellLEDCtlS_LDADD = $(LDADD)
bin_unsupported_dellLEDCtlS_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_unsupported_dellLEDCtlS_LDFLAGS) $(LDFLAGS) -o $@
am_bin_unsupported_disable_console_redir_OBJECTS = $(am__objects_1) \
	bin-unsupported/disable_console_redir.$(OBJEXT)
bin_unsupported_disable_console_redir_OBJECTS =  \
	$(am_bin_unsupported_disable_console_redir_OBJECTS)
bin_unsupported_disable_console_redir_LDADD = $(LDADD)
bin_unsupported_disable_console_redir_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_unsupported_disable_console_redir_LDFLAGS) $(LDFLAGS) -o \
	$@
am_bin_unsupported_disable_console_redirS_OBJECTS = $(am__objects_1) \
	bin-unsupported/disable_console_redir.$(OBJEXT)
bin_unsupported_disable_console_redirS_OBJECTS =  \
	$(am_bin_unsupported_disable_console_redirS_OBJECTS)
bin_unsupported_disable_console_redirS_LDADD = $(LDADD)
bin_unsupported_disable_console_redirS_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_unsupported_disable_console_redirS_LDFLAGS) $(LDFLAGS) \
	-o $@
am_bin_unsupported_dumpCmos_OBJECTS = $(am__objects_1) \
	bin-unsupported/dumpCmos.$(OBJEXT)
bin_unsupported_dumpCmos_OBJECTS =  \
	$(am_bin_unsupported_dumpCmos_OBJECTS)
bin_unsupported_dumpCmos_LDADD = $(LDADD)
bin_unsupported_dumpCmos_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(bin_unsupported_dumpCmos_LDFLAGS) \
	$(LDFLAGS) -o $@
am_bin_unsupported_dumpCmosS_OBJECTS = $(am__objects_1) \
	bin-unsupported/dumpCmos.$(OBJEXT)
bin_unsupported_dumpCmosS_OBJECTS =  \
	$(am_bin_unsupported_dumpCmosS_OBJECTS)
bin_unsupported_dumpCmosS_LDADD = $(LDADD)
bin_unsupported_dumpCmosS_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_unsupported_dumpCmosS_LDFLAGS) $(LDFLAGS) -o $@
am_bin_unsupported_getPasswordFormat_OBJECTS = $(am__objects_1) \
	bin-unsupported/getPasswordFormat.$(OBJEXT)
bin_unsupported_getPasswordFormat_OBJECTS =  \
	$(am_bin_unsupported_getPasswordFormat_OBJECTS)
bin_unsupported_getPasswordFormat_LDADD = $(LDADD)
bin_unsupported_getPasswordFormat_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_unsupported_getPasswordFormat_LDFLAGS) $(LDFLAGS) -o $@
am_bin_unsupported_getPasswordFormatS_OBJECTS = $(am__objects_1) \
	bin-unsupported/getPasswordFormat.$(OBJEXT)
bin_unsupported_getPasswordFormatS_OBJECTS =  \
	$(am_bin_unsupported_getPasswordFormatS_OBJECTS)
bin_unsupported_getPasswordFormatS_LDADD = $(LDADD)
bin_unsupported_getPasswordFormatS_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_unsupported_getPasswordFormatS_LDFLAGS) $(LDFLAGS) -o $@
am_bin_unsupported_isCmosTokenActive_OBJECTS = $(am__objects_1) \
	bin-unsupported/isCmosTokenActive.$(OBJEXT)
bin_unsupported_isCmosTokenActive_OBJECTS =  \
	$(am_bin_unsupported_isCmosTokenActive_OBJECTS)
bin_unsupported_isCmosTokenActive_LDADD = $(LDADD)
bin_unsupported_isCmosTokenActive_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_unsupported_isCmosTokenActive_LDFLAGS) $(LDFLAGS) -o $@
am_bin_unsupported_isCmosTokenActiveS_OBJECTS = $(am__objects_1) \
	bin-unsupported/isCmosTokenActive.$(OBJEXT)
bin_unsupported_isCmosTokenActiveS_OBJECTS =  \
	$(am_bin_unsupported_isCmosTokenActiveS_OBJECTS)
bin_unsupported_isCmosTokenActiveS_LDADD = $(LDADD)
bin_unsupported_isCmosTokenActiveS_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_unsupported_isCmosTokenActiveS_LDFLAGS) $(LDFLAGS) -o $@
am_bin_unsupported_probes_OBJECTS = $(am__objects_1) \
	bin-unsupported/probes.$(OBJEXT)
bin_unsupported_probes_OBJECTS = $(am_bin_unsupported_probes_OBJECTS)
bin_unsupported_probes_LDADD = $(LDADD)
bin_unsupported_probes_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(bin_unsupported_probes_LDFLAGS) $(LDFLAGS) -o $@
am_bin_unsupported_probesS_OBJECTS = $(am__objects_1) \
	bin-unsupported/probes.$(OBJEXT)
bin_unsupported_probesS_OBJECTS =  \
	$(am_bin_unsupported_probesS_OBJECTS)
bin_unsupported_probesS_LDADD = $(LDADD)
bin_unsupported_probesS_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(bin_unsupported_probesS_LDFLAGS) $(LDFLAGS) -o \
	$@
am_bin_unsupported_smitest_OBJECTS = $(am__objects_1) \
	bin-unsupported/smitest.$(OBJEXT)
bin_unsupported_smitest_OBJECTS =  \
	$(am_bin_unsupported_smitest_OBJECTS)
bin_unsupported_smitest_LDADD = $(LDADD)
bin_unsupported_smitest_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(bin_unsupported_smitest_LDFLAGS) $(LDFLAGS) -o \
	$@
am_bin_unsupported_smitestS_OBJECTS = $(am__objects_1) \
	bin-unsupported/smitest.$(OBJEXT)
bin_unsupported_smitestS_OBJECTS =  \
	$(am_bin_unsupported_smitestS_OBJECTS)
bin_unsupported_smitestS_LDADD = $(LDADD)
bin_unsupported_smitestS_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(bin_unsupported_smitestS_LDFLAGS) \
	$(LDFLAGS) -o $@
am_bin_unsupported_stateByteCtl_OBJECTS = $(am__objects_1) \
	bin-unsupported/stateByteCtl.$(OBJEXT)
bin_unsupported_stateByteCtl_OBJECTS =  \
	$(am_bin_unsupported_stateByteCtl_OBJECTS)
bin_unsupported_stateByteCtl_LDADD = $(LDADD)
bin_unsupported_stateByteCtl_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_unsupported_stateByteCtl_LDFLAGS) $(LDFLAGS) -o $@
am_bin_unsupported_stateByteCtlS_OBJECTS = $(am__objects_1) \
	bin-unsupported/stateByteCtl.$(OBJEXT)
bin_unsupported_stateByteCtlS_OBJECTS =  \
	$(am_bin_unsupported_stateByteCtlS_OBJECTS)
bin_unsupported_stateByteCtlS_LDADD = $(LDADD)
bin_unsupported_stateByteCtlS_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_unsupported_stateByteCtlS_LDFLAGS) $(LDFLAGS) -o $@
am_bin_unsupported_upBootCtl_OBJECTS = $(am__objects_1) \
	bin-unsupported/upBootCtl.$(OBJEXT)
bin_unsupported_upBootCtl_OBJECTS =  \
	$(am_bin_unsupported_upBootCtl_OBJECTS)
bin_unsupported_upBootCtl_LDADD = $(LDADD)
bin_unsupported_upBootCtl_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_unsupported_upBootCtl_LDFLAGS) $(LDFLAGS) -o $@
am_bin_unsupported_upBootCtlS_OBJECTS = $(am__objects_1) \
	bin-unsupported/upBootCtl.$(OBJEXT)
bin_unsupported_upBootCtlS_OBJECTS =  \
	$(am_bin_unsupported_upBootCtlS_OBJECTS)
bin_unsupported_upBootCtlS_LDADD = $(LDADD)
bin_unsupported_upBootCtlS_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(bin_unsupported_upBootCtlS_LDFLAGS) $(LDFLAGS) -o $@
am_cppunit_testPlatform_OBJECTS =  \
	cppunit/cppunit_testPlatform-main.$(OBJEXT) \
	cppunit/interface/cppunit_testPlatform-XmlUtils.$(OBJEXT) \
	cppunit/interface/cppunit_testPlatform-testPlatform.$(OBJEXT)
cppunit_testPlatform_OBJECTS = $(am_cppunit_testPlatform_OBJECTS)
cppunit_testPlatform_LDADD = $(LDADD)
cppunit_testPlatform_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(cppunit_testPlatform_CXXFLAGS) $(CXXFLAGS) \
	$(cppunit_testPlatform_LDFLAGS) $(LDFLAGS) -o $@
am_cppunit_testRbu_OBJECTS = cppunit/cppunit_testRbu-main.$(OBJEXT) \
	cppunit/interface/cppunit_testRbu-XmlUtils.$(OBJEXT) \
	cppunit/interface/cppunit_testRbu-testRbu.$(OBJEXT)
cppunit_testRbu_OBJECTS = $(am_cppunit_testRbu_OBJECTS)
cppunit_testRbu_LDADD = $(LDADD)
cppunit_testRbu_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(cppunit_testRbu_CXXFLAGS) $(CXXFLAGS) \
	$(cppunit_testRbu_LDFLAGS) $(LDFLAGS) -o $@
am_cppunit_testStandalone_OBJECTS =  \
	cppunit/cppunit_testStandalone-main.$(OBJEXT) \
	cppunit/interface/cppunit_testStandalone-XmlUtils.$(OBJEXT) \
	cppunit/interface/cppunit_testStandalone-testStandalone.$(OBJEXT)
cppunit_testStandalone_OBJECTS = $(am_cppunit_testStandalone_OBJECTS)
cppunit_testStandalone_LDADD = $(LDADD)
cppunit_testStandalone_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(cppunit_testStandalone_CXXFLAGS) $(CXXFLAGS) \
	$(cppunit_testStandalone_LDFLAGS) $(LDFLAGS) -o $@
dist_binSCRIPT_INSTALL = $(INSTALL_SCRIPT)
dist_sbinSCRIPT_INSTALL = $(INSTALL_SCRIPT)
SCRIPTS = $(dist_bin_SCRIPTS) $(dist_sbin_SCRIPTS)
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/build/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libraries_libsmbios_la_SOURCES) \
	$(bin_supported_assetTag_SOURCES) \
	$(bin_supported_assetTagS_SOURCES) \
	$(bin_supported_dellBiosUpdate_SOURCES) \
	$(bin_supported_dellBiosUpdateS_SOURCES) \
	$(bin_supported_dellLcdBrightness_SOURCES) \
	$(bin_supported_dellLcdBrightnessS_SOURCES) \
	$(bin_supported_dellMediaDirectCtl_SOURCES) \
	$(bin_supported_dellMediaDirectCtlS_SOURCES) \
	$(bin_supported_dellWirelessCtl_SOURCES) \
	$(bin_supported_dellWirelessCtlS_SOURCES) \
	$(bin_supported_dumpSmbios_SOURCES) \
	$(bin_supported_dumpSmbiosS_SOURCES) \
	$(bin_supported_getSystemId_SOURCES) \
	$(bin_supported_getSystemIdS_SOURCES) \
	$(bin_supported_propertyTag_SOURCES) \
	$(bin_supported_propertyTagS_SOURCES) \
	$(bin_supported_serviceTag_SOURCES) \
	$(bin_supported_serviceTagS_SOURCES) \
	$(bin_supported_verifySmiPassword_SOURCES) \
	$(bin_supported_verifySmiPasswordS_SOURCES) \
	$(bin_supported_wakeupCtl_SOURCES) \
	$(bin_supported_wakeupCtlS_SOURCES) \
	$(bin_unsupported_activateCmosToken_SOURCES) \
	$(bin_unsupported_activateCmosTokenS_SOURCES) \
	$(bin_unsupported_ascii2enUS_scancode_SOURCES) \
	$(bin_unsupported_ascii2enUS_scancodeS_SOURCES) \
	$(bin_unsupported_createUnitTestFiles_SOURCES) \
	$(bin_unsupported_createUnitTestFilesS_SOURCES) \
	$(bin_unsupported_dellLEDCtl_SOURCES) \
	$(bin_unsupported_dellLEDCtlS_SOURCES) \
	$(bin_unsupported_disable_console_redir_SOURCES) \
	$(bin_unsupported_disable_console_redirS_SOURCES) \
	$(bin_unsupported_dumpCmos_SOURCES) \
	$(bin_unsupported_dumpCmosS_SOURCES) \
	$(bin_unsupported_getPasswordFormat_SOURCES) \
	$(bin_unsupported_getPasswordFormatS_SOURCES) \
	$(bin_unsupported_isCmosTokenActive_SOURCES) \
	$(bin_unsupported_isCmosTokenActiveS_SOURCES) \
	$(bin_unsupported_probes_SOURCES) \
	$(bin_unsupported_probesS_SOURCES) \
	$(bin_unsupported_smitest_SOURCES) \
	$(bin_unsupported_smitestS_SOURCES) \
	$(bin_unsupported_stateByteCtl_SOURCES) \
	$(bin_unsupported_stateByteCtlS_SOURCES) \
	$(bin_unsupported_upBootCtl_SOURCES) \
	$(bin_unsupported_upBootCtlS_SOURCES) \
	$(cppunit_testPlatform_SOURCES) $(cppunit_testRbu_SOURCES) \
	$(cppunit_testStandalone_SOURCES)
DIST_SOURCES = $(libraries_libsmbios_la_SOURCES) \
	$(bin_supported_assetTag_SOURCES) \
	$(bin_supported_assetTagS_SOURCES) \
	$(bin_supported_dellBiosUpdate_SOURCES) \
	$(bin_supported_dellBiosUpdateS_SOURCES) \
	$(bin_supported_dellLcdBrightness_SOURCES) \
	$(bin_supported_dellLcdBrightnessS_SOURCES) \
	$(bin_supported_dellMediaDirectCtl_SOURCES) \
	$(bin_supported_dellMediaDirectCtlS_SOURCES) \
	$(bin_supported_dellWirelessCtl_SOURCES) \
	$(bin_supported_dellWirelessCtlS_SOURCES) \
	$(bin_supported_dumpSmbios_SOURCES) \
	$(bin_supported_dumpSmbiosS_SOURCES) \
	$(bin_supported_getSystemId_SOURCES) \
	$(bin_supported_getSystemIdS_SOURCES) \
	$(bin_supported_propertyTag_SOURCES) \
	$(bin_supported_propertyTagS_SOURCES) \
	$(bin_supported_serviceTag_SOURCES) \
	$(bin_supported_serviceTagS_SOURCES) \
	$(bin_supported_verifySmiPassword_SOURCES) \
	$(bin_supported_verifySmiPasswordS_SOURCES) \
	$(bin_supported_wakeupCtl_SOURCES) \
	$(bin_supported_wakeupCtlS_SOURCES) \
	$(bin_unsupported_activateCmosToken_SOURCES) \
	$(bin_unsupported_activateCmosTokenS_SOURCES) \
	$(bin_unsupported_ascii2enUS_scancode_SOURCES) \
	$(bin_unsupported_ascii2enUS_scancodeS_SOURCES) \
	$(bin_unsupported_createUnitTestFiles_SOURCES) \
	$(bin_unsupported_createUnitTestFilesS_SOURCES) \
	$(bin_unsupported_dellLEDCtl_SOURCES) \
	$(bin_unsupported_dellLEDCtlS_SOURCES) \
	$(bin_unsupported_disable_console_redir_SOURCES) \
	$(bin_unsupported_disable_console_redirS_SOURCES) \
	$(bin_unsupported_dumpCmos_SOURCES) \
	$(bin_unsupported_dumpCmosS_SOURCES) \
	$(bin_unsupported_getPasswordFormat_SOURCES) \
	$(bin_unsupported_getPasswordFormatS_SOURCES) \
	$(bin_unsupported_isCmosTokenActive_SOURCES) \
	$(bin_unsupported_isCmosTokenActiveS_SOURCES) \
	$(bin_unsupported_probes_SOURCES) \
	$(bin_unsupported_probesS_SOURCES) \
	$(bin_unsupported_smitest_SOURCES) \
	$(bin_unsupported_smitestS_SOURCES) \
	$(bin_unsupported_stateByteCtl_SOURCES) \
	$(bin_unsupported_stateByteCtlS_SOURCES) \
	$(bin_unsupported_upBootCtl_SOURCES) \
	$(bin_unsupported_upBootCtlS_SOURCES) \
	$(cppunit_testPlatform_SOURCES) $(cppunit_testRbu_SOURCES) \
	$(cppunit_testStandalone_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/rack/workspace/tmp/libsmbios-2.0.3/build/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/rack/workspace/tmp/libsmbios-2.0.3/build/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/rack/workspace/tmp/libsmbios-2.0.3/build/missing --run autoconf
AUTOHEADER = ${SHELL} /home/rack/workspace/tmp/libsmbios-2.0.3/build/missing --run autoheader
AUTOMAKE = ${SHELL} /home/rack/workspace/tmp/libsmbios-2.0.3/build/missing --run automake-1.10
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CPPUNIT_CFLAGS = 
CPPUNIT_CONFIG = /usr/bin/cppunit-config
CPPUNIT_LIBS = -lcppunit -ldl
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"libsmbios\" -DPACKAGE_TARNAME=\"libsmbios\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE=\"libsmbios\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DSTDC_HEADERS=1 -DHAVE_LIBINTL_H=1 -DHAVE_LIMITS_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_SYS_FILE_H=1 -DHAVE_UNISTD_H=1 -DHAVE__BOOL=1 -DHAVE_STDBOOL_H=1 -DHAVE_PTRDIFF_T=1 -DHAVE_STDLIB_H=1 -DHAVE_MALLOC=1 -DHAVE_STDLIB_H=1 -DHAVE_UNISTD_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MMAP=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MEMMOVE=1 -DHAVE_MEMSET=1 -DHAVE_MUNMAP=1 -DHAVE_STRERROR=1 -DHAVE_STRNDUP=1 -DHAVE_STRTOL=1 -DHAVE_STRTOUL=1 -DVERSION=\"2.0.3\" -DPACKAGE_VERSION=\"2.0.3\" -DPACKAGE_STRING=\"libsmbios\ 2.0.3\"
DEPDIR = .deps
DOT = 
DOXYGEN = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = 
FFLAGS = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/rack/workspace/tmp/libsmbios-2.0.3/build/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = $(RELEASE_NAME)
PACKAGE_BUGREPORT = 
PACKAGE_NAME = libsmbios
PACKAGE_STRING = libsmbios 2.0.3
PACKAGE_TARNAME = libsmbios
PACKAGE_VERSION = 2.0.3
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = $(RELEASE_VERSION)
abs_builddir = /home/rack/workspace/tmp/libsmbios-2.0.3
abs_srcdir = /home/rack/workspace/tmp/libsmbios-2.0.3
abs_top_builddir = /home/rack/workspace/tmp/libsmbios-2.0.3
abs_top_srcdir = /home/rack/workspace/tmp/libsmbios-2.0.3
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/rack/workspace/tmp/libsmbios-2.0.3/build/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = .
top_srcdir = .
AUTOMAKE_OPTIONS = subdir-objects
SUBDIRS = 

# dont move these 5 lines, as this is how we override the autoconf version and package name
RELEASE_NAME = libsmbios
RELEASE_MAJOR = 2
RELEASE_MINOR = 0
RELEASE_SUBLEVEL = 3
RELEASE_EXTRALEVEL = 
RELEASE_VERSION = $(RELEASE_MAJOR).$(RELEASE_MINOR).$(RELEASE_SUBLEVEL)$(RELEASE_EXTRALEVEL)
RELEASE_STRING = $(RELEASE_NAME)-$(RELEASE_VERSION)
LIBTOOL_CURRENT = 2
LIBTOOL_REVISION = 0
LIBTOOL_AGE = 0
CLEANFILES = libsmbios-*.tar.gz libsmbios-*.tar.bz2 libsmbios-*.rpm \
	_buildtemp doc/reports/code-coverage.txt \
	doc/reports/valgrind_output.txt doc/*.log doc/reports/*.txt \
	version smbios-utils*.rpm libraries/.libs bin-supported/.libs \
	bin-unsupported/.libs testResults.xml cppunit/.libs \
	$(EXTRA_PROGRAMS)
DISTCLEANFILES = *~
########## END DOCS ################
EXTRA_DIST = libraries/cmos/CmosRW_WindowsIO.cpp \
	libraries/memory/Memory_Windows.cpp \
	libraries/smbios/SmbiosStrategy_Windows.cpp \
	libraries/smi/Smi_Windows.cpp libraries/rbu/RbuImpl.h \
	libraries/common/ExceptionImpl.h libraries/common/CmosRWImpl.h \
	libraries/common/SmbiosWorkaroundImpl.h \
	libraries/common/FactoryImpl2.h libraries/common/SmbiosImpl.h \
	libraries/common/TokenLowLevel.h libraries/common/miniddk.h \
	libraries/memory/MemoryImpl.h \
	libraries/smbios/StdWorkarounds.h libraries/smi/SmiLowLevel.h \
	libraries/smi/SmiImpl.h libraries/systeminfo/DellMagic.h \
	libraries/systeminfo/SystemDetect.h \
	libraries/common/TokenImpl.h $(getopts_h) \
	bin-unsupported/getopts.h bin-unsupported/getopts_LICENSE.txt \
	cppunit/runtests.sh cppunit/platform cppunit/outputctl.h \
	cppunit/interface/XmlUtils.h cppunit/interface/testPlatform.h \
	cppunit/interface/testRbu.h cppunit/interface/testStandalone.h \
	libsmbios.spec build/scripts build/VC.2005 COPYING-GPL \
	COPYING-OSL include/smbios/SmbiosLowLevel.h \
	include/smbios/DellRbu.h include/smbios/ICmosRW.h \
	include/smbios/IException.h include/smbios/IFactory.h \
	include/smbios/IMemory.h include/smbios/IObserver.h \
	include/smbios/ISmbios.h include/smbios/ISmi.h \
	include/smbios/IToken.h include/smbios/SmbiosDefs.h \
	include/smbios/RbuLowLevel.h \
	include/smbios/config/abi/msvc_prefix.hpp \
	include/smbios/config/abi/msvc_suffix.hpp \
	include/smbios/config/boost_LICENSE_1_0_txt \
	include/smbios/config/abi_prefix.hpp \
	include/smbios/config/abi_suffix.hpp \
	include/smbios/config/auto_link.hpp \
	include/smbios/config/compiler/gcc.hpp \
	include/smbios/config/compiler/visualc.hpp \
	include/smbios/config/platform/linux.hpp \
	include/smbios/config/platform/win32.hpp \
	include/smbios/config/platform/win64.hpp \
	include/smbios/config/select_compiler_config.hpp \
	include/smbios/config/posix_features.hpp \
	include/smbios/config/stdlib/libstdcpp2.hpp \
	include/smbios/config/stdlib/libstdcpp3.hpp \
	include/smbios/config/README include/smbios/config/suffix.hpp \
	include/smbios/config/user.hpp \
	include/smbios/config/select_stdlib_config.hpp \
	include/smbios/config/select_platform_config.hpp \
	include/smbios/config.hpp include/smbios/compat.h \
	include/smbios/SystemInfo.h include/smbios/types.h \
	include/smbios/message.h doc/bios_hdr_file.txt doc/coding \
	doc/dell_drivers.txt doc/DellToken.txt doc/design \
	doc/exe-assetTag.txt doc/exe-dellBiosUpdate.txt \
	doc/exe-getSystemId.txt doc/exe-propertyTag.txt \
	doc/exe-serviceTag.txt doc/external-specs doc/getopt \
	doc/installation.txt doc/interface-only.dox doc/mainpage.txt \
	doc/old_news.txt doc/smbios23.xml doc/visio doc/yum.txt \
	doc/pkgheader.sh
dist_sbin_SCRIPTS = bin-supported/mkbiospkg.sh
dist_bin_SCRIPTS = 
lib_LTLIBRARIES = libraries/libsmbios.la
libraries_libsmbios_la_LDFLAGS = -version-info $(LIBTOOL_CURRENT):$(LIBTOOL_REVISION):$(LIBTOOL_AGE)
libraries_libsmbios_la_CXXFLAGS = -I$(top_srcdir)/libraries/common -I$(top_builddir)/libraries/common 
AM_CPPFLAGS = -I$(top_builddir)/include -I$(top_srcdir)/include
libraries_libsmbios_la_SOURCES = \
    libraries/cmos/CmosRW.cpp                   \
    libraries/cmos/CmosRWFactory.cpp            \
    libraries/cmos/CmosRW_LinuxIO.cpp           \
    libraries/common/ascii2enUS_scancode.cpp    \
    libraries/common/Observer.cpp               \
    libraries/memory/Memory.cpp                 \
    libraries/memory/Memory_Linux.cpp           \
    libraries/rbu/RbuHdr.cpp                    \
    libraries/rbu/Rbu_Linux.cpp                 \
    libraries/smbios/SmbiosFactory.cpp          \
    libraries/smbios/SmbiosItem.cpp             \
    libraries/smbios/SmbiosStrategy.cpp         \
    libraries/smbios/SmbiosStrategy_Linux.cpp   \
    libraries/smbios/SmbiosTable.cpp            \
    libraries/smbios/SmbiosTableIterator.cpp    \
    libraries/smbios/SmbiosWorkaround.cpp       \
    libraries/smi/Smi.cpp                       \
    libraries/smi/SmiFactory.cpp                \
    libraries/smi/Smi_Linux.cpp                 \
    libraries/systeminfo/IdByte.cpp             \
    libraries/systeminfo/SysInfoError.cpp       \
    libraries/systeminfo/System.cpp             \
    libraries/systeminfo/SystemDetect.cpp       \
    libraries/token/checksum.cpp                \
    libraries/token/Token.cpp                   \
    libraries/token/TokenD4.cpp                 \
    libraries/token/TokenD5.cpp                 \
    libraries/token/TokenD6.cpp                 \
    libraries/token/TokenDA.cpp                 \
    libraries/token/TokenTable.cpp              \
    libraries/token/TokenTableFactory.cpp       \
    libraries/token/TokenTableIterator.cpp      

getopts_h = bin-supported/getopts.h
getopts_c = bin-supported/getopts.c
bin_supported_assetTag_SOURCES = bin-supported/assetTag.cpp $(getopts_c)
bin_supported_getSystemId_SOURCES = bin-supported/getSystemId.cpp $(getopts_c)
bin_supported_propertyTag_SOURCES = $(getopts_c) bin-supported/propertyTag.cpp
bin_supported_serviceTag_SOURCES = $(getopts_c) bin-supported/serviceTag.cpp
bin_supported_verifySmiPassword_SOURCES = $(getopts_c) bin-supported/verifySmiPassword.cpp
bin_supported_wakeupCtl_SOURCES = $(getopts_c) bin-supported/wakeupCtl.cpp
bin_supported_dellLcdBrightness_SOURCES = $(getopts_c) bin-supported/dellLcdBrightness.cpp
bin_supported_dellWirelessCtl_SOURCES = $(getopts_c) bin-supported/dellWirelessCtl.cpp
bin_supported_dellMediaDirectCtl_SOURCES = $(getopts_c) bin-supported/dellMediaDirectCtl.cpp
bin_supported_dumpSmbios_SOURCES = $(getopts_c) bin-supported/dumpSmbios.cpp
bin_supported_assetTag_LDFLAGS = -Llibraries/ -lsmbios
bin_supported_getSystemId_LDFLAGS = -Llibraries/ -lsmbios
bin_supported_propertyTag_LDFLAGS = -Llibraries/ -lsmbios
bin_supported_serviceTag_LDFLAGS = -Llibraries/ -lsmbios
bin_supported_verifySmiPassword_LDFLAGS = -Llibraries/ -lsmbios
bin_supported_wakeupCtl_LDFLAGS = -Llibraries/ -lsmbios
bin_supported_dellLcdBrightness_LDFLAGS = -Llibraries/ -lsmbios
bin_supported_dellWirelessCtl_LDFLAGS = -Llibraries/ -lsmbios
bin_supported_dellMediaDirectCtl_LDFLAGS = -Llibraries/ -lsmbios
bin_supported_dumpSmbios_LDFLAGS = -Llibraries/ -lsmbios

# BAD BAD BAD programs....  (uses private headers)
bin_supported_dellBiosUpdate_SOURCES = $(getopts_c) bin-supported/dellBiosUpdate.cpp
bin_supported_dellBiosUpdate_LDFLAGS = -Llibraries/ -lsmbios
bin_supported_dellBiosUpdate_CXXFLAGS = -Ilibraries/common

#static versions
bin_supported_assetTagS_SOURCES = bin-supported/assetTag.cpp $(getopts_c)
bin_supported_getSystemIdS_SOURCES = bin-supported/getSystemId.cpp $(getopts_c)
bin_supported_propertyTagS_SOURCES = $(getopts_c) bin-supported/propertyTag.cpp
bin_supported_serviceTagS_SOURCES = $(getopts_c) bin-supported/serviceTag.cpp
bin_supported_verifySmiPasswordS_SOURCES = $(getopts_c) bin-supported/verifySmiPassword.cpp
bin_supported_wakeupCtlS_SOURCES = $(getopts_c) bin-supported/wakeupCtl.cpp
bin_supported_dellLcdBrightnessS_SOURCES = $(getopts_c) bin-supported/dellLcdBrightness.cpp
bin_supported_dellWirelessCtlS_SOURCES = $(getopts_c) bin-supported/dellWirelessCtl.cpp
bin_supported_dellMediaDirectCtlS_SOURCES = $(getopts_c) bin-supported/dellMediaDirectCtl.cpp
bin_supported_dumpSmbiosS_SOURCES = $(getopts_c) bin-supported/dumpSmbios.cpp
bin_supported_assetTagS_LDFLAGS = -all-static -Llibraries/ -lsmbios
bin_supported_getSystemIdS_LDFLAGS = -all-static -Llibraries/ -lsmbios
bin_supported_propertyTagS_LDFLAGS = -all-static -Llibraries/ -lsmbios
bin_supported_serviceTagS_LDFLAGS = -all-static -Llibraries/ -lsmbios
bin_supported_verifySmiPasswordS_LDFLAGS = -all-static -Llibraries/ -lsmbios
bin_supported_wakeupCtlS_LDFLAGS = -all-static -Llibraries/ -lsmbios
bin_supported_dellLcdBrightnessS_LDFLAGS = -all-static -Llibraries/ -lsmbios
bin_supported_dellWirelessCtlS_LDFLAGS = -all-static -Llibraries/ -lsmbios
bin_supported_dellMediaDirectCtlS_LDFLAGS = -all-static -Llibraries/ -lsmbios
bin_supported_dumpSmbiosS_LDFLAGS = -all-static -Llibraries/ -lsmbios

# BAD again (uses private includes.)
bin_supported_dellBiosUpdateS_SOURCES = $(getopts_c) bin-supported/dellBiosUpdate.cpp
bin_supported_dellBiosUpdateS_LDFLAGS = -all-static -Llibraries/ -lsmbios
bin_supported_dellBiosUpdateS_CXXFLAGS = -Ilibraries/common
bin_unsupported_activateCmosToken_SOURCES = $(getopts_c) bin-unsupported/activateCmosToken.cpp
bin_unsupported_createUnitTestFiles_SOURCES = $(getopts_c) bin-unsupported/createUnitTestFiles.cpp
bin_unsupported_disable_console_redir_SOURCES = $(getopts_c) bin-unsupported/disable_console_redir.cpp
bin_unsupported_dumpCmos_SOURCES = $(getopts_c) bin-unsupported/dumpCmos.cpp
bin_unsupported_isCmosTokenActive_SOURCES = $(getopts_c) bin-unsupported/isCmosTokenActive.cpp
bin_unsupported_smitest_SOURCES = $(getopts_c) bin-unsupported/smitest.cpp
bin_unsupported_stateByteCtl_SOURCES = $(getopts_c) bin-unsupported/stateByteCtl.cpp
bin_unsupported_upBootCtl_SOURCES = $(getopts_c) bin-unsupported/upBootCtl.cpp
bin_unsupported_getPasswordFormat_SOURCES = $(getopts_c) bin-unsupported/getPasswordFormat.cpp
bin_unsupported_ascii2enUS_scancode_SOURCES = $(getopts_c) bin-unsupported/ascii2enUS_scancode.cpp
bin_unsupported_probes_SOURCES = $(getopts_c) bin-unsupported/probes.cpp
bin_unsupported_dellLEDCtl_SOURCES = $(getopts_c) bin-unsupported/dellLEDCtl.cpp
bin_unsupported_activateCmosToken_LDFLAGS = -Llibraries/ -lsmbios
bin_unsupported_createUnitTestFiles_LDFLAGS = -Llibraries/ -lsmbios
bin_unsupported_disable_console_redir_LDFLAGS = -Llibraries/ -lsmbios
bin_unsupported_dumpCmos_LDFLAGS = -Llibraries/ -lsmbios
bin_unsupported_isCmosTokenActive_LDFLAGS = -Llibraries/ -lsmbios
bin_unsupported_smitest_LDFLAGS = -Llibraries/ -lsmbios
bin_unsupported_stateByteCtl_LDFLAGS = -Llibraries/ -lsmbios
bin_unsupported_upBootCtl_LDFLAGS = -Llibraries/ -lsmbios
bin_unsupported_getPasswordFormat_LDFLAGS = -Llibraries/ -lsmbios
bin_unsupported_ascii2enUS_scancode_LDFLAGS = -Llibraries/ -lsmbios
bin_unsupported_probes_LDFLAGS = -Llibraries/ -lsmbios
bin_unsupported_dellLEDCtl_LDFLAGS = -Llibraries/ -lsmbios

#static 
bin_unsupported_activateCmosTokenS_SOURCES = $(getopts_c) bin-unsupported/activateCmosToken.cpp
bin_unsupported_activateCmosTokenS_LDFLAGS = -all-static -Llibraries/ -lsmbios
bin_unsupported_createUnitTestFilesS_SOURCES = $(getopts_c) bin-unsupported/createUnitTestFiles.cpp
bin_unsupported_createUnitTestFilesS_LDFLAGS = -all-static -Llibraries/ -lsmbios
bin_unsupported_disable_console_redirS_SOURCES = $(getopts_c) bin-unsupported/disable_console_redir.cpp
bin_unsupported_disable_console_redirS_LDFLAGS = -all-static -Llibraries/ -lsmbios
bin_unsupported_dumpCmosS_SOURCES = $(getopts_c) bin-unsupported/dumpCmos.cpp
bin_unsupported_dumpCmosS_LDFLAGS = -all-static -Llibraries/ -lsmbios
bin_unsupported_isCmosTokenActiveS_SOURCES = $(getopts_c) bin-unsupported/isCmosTokenActive.cpp
bin_unsupported_isCmosTokenActiveS_LDFLAGS = -all-static -Llibraries/ -lsmbios
bin_unsupported_smitestS_SOURCES = $(getopts_c) bin-unsupported/smitest.cpp
bin_unsupported_smitestS_LDFLAGS = -all-static -Llibraries/ -lsmbios
bin_unsupported_stateByteCtlS_SOURCES = $(getopts_c) bin-unsupported/stateByteCtl.cpp
bin_unsupported_stateByteCtlS_LDFLAGS = -all-static -Llibraries/ -lsmbios
bin_unsupported_upBootCtlS_SOURCES = $(getopts_c) bin-unsupported/upBootCtl.cpp
bin_unsupported_upBootCtlS_LDFLAGS = -all-static -Llibraries/ -lsmbios
bin_unsupported_getPasswordFormatS_SOURCES = $(getopts_c) bin-unsupported/getPasswordFormat.cpp
bin_unsupported_getPasswordFormatS_LDFLAGS = -all-static -Llibraries/ -lsmbios
bin_unsupported_ascii2enUS_scancodeS_SOURCES = $(getopts_c) bin-unsupported/ascii2enUS_scancode.cpp
bin_unsupported_ascii2enUS_scancodeS_LDFLAGS = -all-static -Llibraries/ -lsmbios
bin_unsupported_probesS_SOURCES = $(getopts_c) bin-unsupported/probes.cpp
bin_unsupported_probesS_LDFLAGS = -all-static -Llibraries/ -lsmbios
bin_unsupported_dellLEDCtlS_SOURCES = $(getopts_c) bin-unsupported/dellLEDCtl.cpp
bin_unsupported_dellLEDCtlS_LDFLAGS = -all-static -Llibraries/ -lsmbios
TESTS = cppunit/runtests.sh
cppunit_testRbu_LDFLAGS = -lxml2 -lcppunit -ldl -lsmbios -Llibraries $(CPPUNIT_LIBS)
cppunit_testRbu_CXXFLAGS = -I/usr/include/libxml2 $(CPPUNIT_CXXFLAGS) -I./include -I./libraries/common -I./include -I./libraries/common -I./cppunit/
cppunit_testRbu_SOURCES = \
    cppunit/main.cpp  \
    cppunit/interface/XmlUtils.cpp	\
    cppunit/interface/testRbu.cpp

cppunit_testPlatform_LDFLAGS = -lxml2 -lcppunit -ldl -lsmbios -Llibraries $(CPPUNIT_LIBS)
cppunit_testPlatform_CXXFLAGS = -I/usr/include/libxml2 $(CPPUNIT_CXXFLAGS) -I./include -I./libraries/common -I./include -I./libraries/common -I./cppunit/
cppunit_testPlatform_SOURCES = \
    cppunit/main.cpp  \
    cppunit/interface/XmlUtils.cpp	\
    cppunit/interface/testPlatform.cpp 

cppunit_testStandalone_LDFLAGS = -lxml2 -lcppunit -ldl -lsmbios -Llibraries $(CPPUNIT_LIBS)
cppunit_testStandalone_CXXFLAGS = -I/usr/include/libxml2 $(CPPUNIT_CXXFLAGS) -I./include -I./libraries/common -I./include -I./libraries/common -I./cppunit/
cppunit_testStandalone_SOURCES = \
    cppunit/main.cpp  \
    cppunit/interface/XmlUtils.cpp	\
    cppunit/interface/testStandalone.cpp 

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(srcdir)/libraries/Makefile.am $(srcdir)/bin-supported/Makefile.am $(srcdir)/bin-unsupported/Makefile.am $(srcdir)/cppunit/Makefile.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign '; \
	      cd $(srcdir) && $(AUTOMAKE) --foreign  \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
include/smbios/version.h: $(top_builddir)/config.status $(top_srcdir)/include/smbios/version.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
doc/full-documentation.dox: $(top_builddir)/config.status $(top_srcdir)/doc/full-documentation.dox.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
doc/interface-only.dox: $(top_builddir)/config.status $(top_srcdir)/doc/interface-only.dox.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
${PACKAGE_NAME}.spec: $(top_builddir)/config.status $(srcdir)/${PACKAGE_NAME}.spec.in $(srcdir)/ChangeLog
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libraries/cmos/$(am__dirstamp):
	@$(MKDIR_P) libraries/cmos
	@: > libraries/cmos/$(am__dirstamp)
libraries/cmos/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libraries/cmos/$(DEPDIR)
	@: > libraries/cmos/$(DEPDIR)/$(am__dirstamp)
libraries/cmos/libraries_libsmbios_la-CmosRW.lo:  \
	libraries/cmos/$(am__dirstamp) \
	libraries/cmos/$(DEPDIR)/$(am__dirstamp)
libraries/cmos/libraries_libsmbios_la-CmosRWFactory.lo:  \
	libraries/cmos/$(am__dirstamp) \
	libraries/cmos/$(DEPDIR)/$(am__dirstamp)
libraries/cmos/libraries_libsmbios_la-CmosRW_LinuxIO.lo:  \
	libraries/cmos/$(am__dirstamp) \
	libraries/cmos/$(DEPDIR)/$(am__dirstamp)
libraries/common/$(am__dirstamp):
	@$(MKDIR_P) libraries/common
	@: > libraries/common/$(am__dirstamp)
libraries/common/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libraries/common/$(DEPDIR)
	@: > libraries/common/$(DEPDIR)/$(am__dirstamp)
libraries/common/libraries_libsmbios_la-ascii2enUS_scancode.lo:  \
	libraries/common/$(am__dirstamp) \
	libraries/common/$(DEPDIR)/$(am__dirstamp)
libraries/common/libraries_libsmbios_la-Observer.lo:  \
	libraries/common/$(am__dirstamp) \
	libraries/common/$(DEPDIR)/$(am__dirstamp)
libraries/memory/$(am__dirstamp):
	@$(MKDIR_P) libraries/memory
	@: > libraries/memory/$(am__dirstamp)
libraries/memory/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libraries/memory/$(DEPDIR)
	@: > libraries/memory/$(DEPDIR)/$(am__dirstamp)
libraries/memory/libraries_libsmbios_la-Memory.lo:  \
	libraries/memory/$(am__dirstamp) \
	libraries/memory/$(DEPDIR)/$(am__dirstamp)
libraries/memory/libraries_libsmbios_la-Memory_Linux.lo:  \
	libraries/memory/$(am__dirstamp) \
	libraries/memory/$(DEPDIR)/$(am__dirstamp)
libraries/rbu/$(am__dirstamp):
	@$(MKDIR_P) libraries/rbu
	@: > libraries/rbu/$(am__dirstamp)
libraries/rbu/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libraries/rbu/$(DEPDIR)
	@: > libraries/rbu/$(DEPDIR)/$(am__dirstamp)
libraries/rbu/libraries_libsmbios_la-RbuHdr.lo:  \
	libraries/rbu/$(am__dirstamp) \
	libraries/rbu/$(DEPDIR)/$(am__dirstamp)
libraries/rbu/libraries_libsmbios_la-Rbu_Linux.lo:  \
	libraries/rbu/$(am__dirstamp) \
	libraries/rbu/$(DEPDIR)/$(am__dirstamp)
libraries/smbios/$(am__dirstamp):
	@$(MKDIR_P) libraries/smbios
	@: > libraries/smbios/$(am__dirstamp)
libraries/smbios/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libraries/smbios/$(DEPDIR)
	@: > libraries/smbios/$(DEPDIR)/$(am__dirstamp)
libraries/smbios/libraries_libsmbios_la-SmbiosFactory.lo:  \
	libraries/smbios/$(am__dirstamp) \
	libraries/smbios/$(DEPDIR)/$(am__dirstamp)
libraries/smbios/libraries_libsmbios_la-SmbiosItem.lo:  \
	libraries/smbios/$(am__dirstamp) \
	libraries/smbios/$(DEPDIR)/$(am__dirstamp)
libraries/smbios/libraries_libsmbios_la-SmbiosStrategy.lo:  \
	libraries/smbios/$(am__dirstamp) \
	libraries/smbios/$(DEPDIR)/$(am__dirstamp)
libraries/smbios/libraries_libsmbios_la-SmbiosStrategy_Linux.lo:  \
	libraries/smbios/$(am__dirstamp) \
	libraries/smbios/$(DEPDIR)/$(am__dirstamp)
libraries/smbios/libraries_libsmbios_la-SmbiosTable.lo:  \
	libraries/smbios/$(am__dirstamp) \
	libraries/smbios/$(DEPDIR)/$(am__dirstamp)
libraries/smbios/libraries_libsmbios_la-SmbiosTableIterator.lo:  \
	libraries/smbios/$(am__dirstamp) \
	libraries/smbios/$(DEPDIR)/$(am__dirstamp)
libraries/smbios/libraries_libsmbios_la-SmbiosWorkaround.lo:  \
	libraries/smbios/$(am__dirstamp) \
	libraries/smbios/$(DEPDIR)/$(am__dirstamp)
libraries/smi/$(am__dirstamp):
	@$(MKDIR_P) libraries/smi
	@: > libraries/smi/$(am__dirstamp)
libraries/smi/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libraries/smi/$(DEPDIR)
	@: > libraries/smi/$(DEPDIR)/$(am__dirstamp)
libraries/smi/libraries_libsmbios_la-Smi.lo:  \
	libraries/smi/$(am__dirstamp) \
	libraries/smi/$(DEPDIR)/$(am__dirstamp)
libraries/smi/libraries_libsmbios_la-SmiFactory.lo:  \
	libraries/smi/$(am__dirstamp) \
	libraries/smi/$(DEPDIR)/$(am__dirstamp)
libraries/smi/libraries_libsmbios_la-Smi_Linux.lo:  \
	libraries/smi/$(am__dirstamp) \
	libraries/smi/$(DEPDIR)/$(am__dirstamp)
libraries/systeminfo/$(am__dirstamp):
	@$(MKDIR_P) libraries/systeminfo
	@: > libraries/systeminfo/$(am__dirstamp)
libraries/systeminfo/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libraries/systeminfo/$(DEPDIR)
	@: > libraries/systeminfo/$(DEPDIR)/$(am__dirstamp)
libraries/systeminfo/libraries_libsmbios_la-IdByte.lo:  \
	libraries/systeminfo/$(am__dirstamp) \
	libraries/systeminfo/$(DEPDIR)/$(am__dirstamp)
libraries/systeminfo/libraries_libsmbios_la-SysInfoError.lo:  \
	libraries/systeminfo/$(am__dirstamp) \
	libraries/systeminfo/$(DEPDIR)/$(am__dirstamp)
libraries/systeminfo/libraries_libsmbios_la-System.lo:  \
	libraries/systeminfo/$(am__dirstamp) \
	libraries/systeminfo/$(DEPDIR)/$(am__dirstamp)
libraries/systeminfo/libraries_libsmbios_la-SystemDetect.lo:  \
	libraries/systeminfo/$(am__dirstamp) \
	libraries/systeminfo/$(DEPDIR)/$(am__dirstamp)
libraries/token/$(am__dirstamp):
	@$(MKDIR_P) libraries/token
	@: > libraries/token/$(am__dirstamp)
libraries/token/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libraries/token/$(DEPDIR)
	@: > libraries/token/$(DEPDIR)/$(am__dirstamp)
libraries/token/libraries_libsmbios_la-checksum.lo:  \
	libraries/token/$(am__dirstamp) \
	libraries/token/$(DEPDIR)/$(am__dirstamp)
libraries/token/libraries_libsmbios_la-Token.lo:  \
	libraries/token/$(am__dirstamp) \
	libraries/token/$(DEPDIR)/$(am__dirstamp)
libraries/token/libraries_libsmbios_la-TokenD4.lo:  \
	libraries/token/$(am__dirstamp) \
	libraries/token/$(DEPDIR)/$(am__dirstamp)
libraries/token/libraries_libsmbios_la-TokenD5.lo:  \
	libraries/token/$(am__dirstamp) \
	libraries/token/$(DEPDIR)/$(am__dirstamp)
libraries/token/libraries_libsmbios_la-TokenD6.lo:  \
	libraries/token/$(am__dirstamp) \
	libraries/token/$(DEPDIR)/$(am__dirstamp)
libraries/token/libraries_libsmbios_la-TokenDA.lo:  \
	libraries/token/$(am__dirstamp) \
	libraries/token/$(DEPDIR)/$(am__dirstamp)
libraries/token/libraries_libsmbios_la-TokenTable.lo:  \
	libraries/token/$(am__dirstamp) \
	libraries/token/$(DEPDIR)/$(am__dirstamp)
libraries/token/libraries_libsmbios_la-TokenTableFactory.lo:  \
	libraries/token/$(am__dirstamp) \
	libraries/token/$(DEPDIR)/$(am__dirstamp)
libraries/token/libraries_libsmbios_la-TokenTableIterator.lo:  \
	libraries/token/$(am__dirstamp) \
	libraries/token/$(DEPDIR)/$(am__dirstamp)
libraries/$(am__dirstamp):
	@$(MKDIR_P) libraries
	@: > libraries/$(am__dirstamp)
libraries/libsmbios.la: $(libraries_libsmbios_la_OBJECTS) $(libraries_libsmbios_la_DEPENDENCIES) libraries/$(am__dirstamp)
	$(libraries_libsmbios_la_LINK) -rpath $(libdir) $(libraries_libsmbios_la_OBJECTS) $(libraries_libsmbios_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(sbindir)" || $(MKDIR_P) "$(DESTDIR)$(sbindir)"
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(sbinPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(sbindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(sbinPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(sbindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(sbindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(sbindir)/$$f"; \
	done

clean-sbinPROGRAMS:
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
bin-supported/$(am__dirstamp):
	@$(MKDIR_P) bin-supported
	@: > bin-supported/$(am__dirstamp)
bin-supported/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) bin-supported/$(DEPDIR)
	@: > bin-supported/$(DEPDIR)/$(am__dirstamp)
bin-supported/assetTag.$(OBJEXT): bin-supported/$(am__dirstamp) \
	bin-supported/$(DEPDIR)/$(am__dirstamp)
bin-supported/getopts.$(OBJEXT): bin-supported/$(am__dirstamp) \
	bin-supported/$(DEPDIR)/$(am__dirstamp)
bin-supported/assetTag$(EXEEXT): $(bin_supported_assetTag_OBJECTS) $(bin_supported_assetTag_DEPENDENCIES) bin-supported/$(am__dirstamp)
	@rm -f bin-supported/assetTag$(EXEEXT)
	$(bin_supported_assetTag_LINK) $(bin_supported_assetTag_OBJECTS) $(bin_supported_assetTag_LDADD) $(LIBS)
bin-supported/assetTagS$(EXEEXT): $(bin_supported_assetTagS_OBJECTS) $(bin_supported_assetTagS_DEPENDENCIES) bin-supported/$(am__dirstamp)
	@rm -f bin-supported/assetTagS$(EXEEXT)
	$(bin_supported_assetTagS_LINK) $(bin_supported_assetTagS_OBJECTS) $(bin_supported_assetTagS_LDADD) $(LIBS)
bin-supported/bin_supported_dellBiosUpdate-dellBiosUpdate.$(OBJEXT):  \
	bin-supported/$(am__dirstamp) \
	bin-supported/$(DEPDIR)/$(am__dirstamp)
bin-supported/dellBiosUpdate$(EXEEXT): $(bin_supported_dellBiosUpdate_OBJECTS) $(bin_supported_dellBiosUpdate_DEPENDENCIES) bin-supported/$(am__dirstamp)
	@rm -f bin-supported/dellBiosUpdate$(EXEEXT)
	$(bin_supported_dellBiosUpdate_LINK) $(bin_supported_dellBiosUpdate_OBJECTS) $(bin_supported_dellBiosUpdate_LDADD) $(LIBS)
bin-supported/bin_supported_dellBiosUpdateS-dellBiosUpdate.$(OBJEXT):  \
	bin-supported/$(am__dirstamp) \
	bin-supported/$(DEPDIR)/$(am__dirstamp)
bin-supported/dellBiosUpdateS$(EXEEXT): $(bin_supported_dellBiosUpdateS_OBJECTS) $(bin_supported_dellBiosUpdateS_DEPENDENCIES) bin-supported/$(am__dirstamp)
	@rm -f bin-supported/dellBiosUpdateS$(EXEEXT)
	$(bin_supported_dellBiosUpdateS_LINK) $(bin_supported_dellBiosUpdateS_OBJECTS) $(bin_supported_dellBiosUpdateS_LDADD) $(LIBS)
bin-supported/dellLcdBrightness.$(OBJEXT):  \
	bin-supported/$(am__dirstamp) \
	bin-supported/$(DEPDIR)/$(am__dirstamp)
bin-supported/dellLcdBrightness$(EXEEXT): $(bin_supported_dellLcdBrightness_OBJECTS) $(bin_supported_dellLcdBrightness_DEPENDENCIES) bin-supported/$(am__dirstamp)
	@rm -f bin-supported/dellLcdBrightness$(EXEEXT)
	$(bin_supported_dellLcdBrightness_LINK) $(bin_supported_dellLcdBrightness_OBJECTS) $(bin_supported_dellLcdBrightness_LDADD) $(LIBS)
bin-supported/dellLcdBrightnessS$(EXEEXT): $(bin_supported_dellLcdBrightnessS_OBJECTS) $(bin_supported_dellLcdBrightnessS_DEPENDENCIES) bin-supported/$(am__dirstamp)
	@rm -f bin-supported/dellLcdBrightnessS$(EXEEXT)
	$(bin_supported_dellLcdBrightnessS_LINK) $(bin_supported_dellLcdBrightnessS_OBJECTS) $(bin_supported_dellLcdBrightnessS_LDADD) $(LIBS)
bin-supported/dellMediaDirectCtl.$(OBJEXT):  \
	bin-supported/$(am__dirstamp) \
	bin-supported/$(DEPDIR)/$(am__dirstamp)
bin-supported/dellMediaDirectCtl$(EXEEXT): $(bin_supported_dellMediaDirectCtl_OBJECTS) $(bin_supported_dellMediaDirectCtl_DEPENDENCIES) bin-supported/$(am__dirstamp)
	@rm -f bin-supported/dellMediaDirectCtl$(EXEEXT)
	$(bin_supported_dellMediaDirectCtl_LINK) $(bin_supported_dellMediaDirectCtl_OBJECTS) $(bin_supported_dellMediaDirectCtl_LDADD) $(LIBS)
bin-supported/dellMediaDirectCtlS$(EXEEXT): $(bin_supported_dellMediaDirectCtlS_OBJECTS) $(bin_supported_dellMediaDirectCtlS_DEPENDENCIES) bin-supported/$(am__dirstamp)
	@rm -f bin-supported/dellMediaDirectCtlS$(EXEEXT)
	$(bin_supported_dellMediaDirectCtlS_LINK) $(bin_supported_dellMediaDirectCtlS_OBJECTS) $(bin_supported_dellMediaDirectCtlS_LDADD) $(LIBS)
bin-supported/dellWirelessCtl.$(OBJEXT):  \
	bin-supported/$(am__dirstamp) \
	bin-supported/$(DEPDIR)/$(am__dirstamp)
bin-supported/dellWirelessCtl$(EXEEXT): $(bin_supported_dellWirelessCtl_OBJECTS) $(bin_supported_dellWirelessCtl_DEPENDENCIES) bin-supported/$(am__dirstamp)
	@rm -f bin-supported/dellWirelessCtl$(EXEEXT)
	$(bin_supported_dellWirelessCtl_LINK) $(bin_supported_dellWirelessCtl_OBJECTS) $(bin_supported_dellWirelessCtl_LDADD) $(LIBS)
bin-supported/dellWirelessCtlS$(EXEEXT): $(bin_supported_dellWirelessCtlS_OBJECTS) $(bin_supported_dellWirelessCtlS_DEPENDENCIES) bin-supported/$(am__dirstamp)
	@rm -f bin-supported/dellWirelessCtlS$(EXEEXT)
	$(bin_supported_dellWirelessCtlS_LINK) $(bin_supported_dellWirelessCtlS_OBJECTS) $(bin_supported_dellWirelessCtlS_LDADD) $(LIBS)
bin-supported/dumpSmbios.$(OBJEXT): bin-supported/$(am__dirstamp) \
	bin-supported/$(DEPDIR)/$(am__dirstamp)
bin-supported/dumpSmbios$(EXEEXT): $(bin_supported_dumpSmbios_OBJECTS) $(bin_supported_dumpSmbios_DEPENDENCIES) bin-supported/$(am__dirstamp)
	@rm -f bin-supported/dumpSmbios$(EXEEXT)
	$(bin_supported_dumpSmbios_LINK) $(bin_supported_dumpSmbios_OBJECTS) $(bin_supported_dumpSmbios_LDADD) $(LIBS)
bin-supported/dumpSmbiosS$(EXEEXT): $(bin_supported_dumpSmbiosS_OBJECTS) $(bin_supported_dumpSmbiosS_DEPENDENCIES) bin-supported/$(am__dirstamp)
	@rm -f bin-supported/dumpSmbiosS$(EXEEXT)
	$(bin_supported_dumpSmbiosS_LINK) $(bin_supported_dumpSmbiosS_OBJECTS) $(bin_supported_dumpSmbiosS_LDADD) $(LIBS)
bin-supported/getSystemId.$(OBJEXT): bin-supported/$(am__dirstamp) \
	bin-supported/$(DEPDIR)/$(am__dirstamp)
bin-supported/getSystemId$(EXEEXT): $(bin_supported_getSystemId_OBJECTS) $(bin_supported_getSystemId_DEPENDENCIES) bin-supported/$(am__dirstamp)
	@rm -f bin-supported/getSystemId$(EXEEXT)
	$(bin_supported_getSystemId_LINK) $(bin_supported_getSystemId_OBJECTS) $(bin_supported_getSystemId_LDADD) $(LIBS)
bin-supported/getSystemIdS$(EXEEXT): $(bin_supported_getSystemIdS_OBJECTS) $(bin_supported_getSystemIdS_DEPENDENCIES) bin-supported/$(am__dirstamp)
	@rm -f bin-supported/getSystemIdS$(EXEEXT)
	$(bin_supported_getSystemIdS_LINK) $(bin_supported_getSystemIdS_OBJECTS) $(bin_supported_getSystemIdS_LDADD) $(LIBS)
bin-supported/propertyTag.$(OBJEXT): bin-supported/$(am__dirstamp) \
	bin-supported/$(DEPDIR)/$(am__dirstamp)
bin-supported/propertyTag$(EXEEXT): $(bin_supported_propertyTag_OBJECTS) $(bin_supported_propertyTag_DEPENDENCIES) bin-supported/$(am__dirstamp)
	@rm -f bin-supported/propertyTag$(EXEEXT)
	$(bin_supported_propertyTag_LINK) $(bin_supported_propertyTag_OBJECTS) $(bin_supported_propertyTag_LDADD) $(LIBS)
bin-supported/propertyTagS$(EXEEXT): $(bin_supported_propertyTagS_OBJECTS) $(bin_supported_propertyTagS_DEPENDENCIES) bin-supported/$(am__dirstamp)
	@rm -f bin-supported/propertyTagS$(EXEEXT)
	$(bin_supported_propertyTagS_LINK) $(bin_supported_propertyTagS_OBJECTS) $(bin_supported_propertyTagS_LDADD) $(LIBS)
bin-supported/serviceTag.$(OBJEXT): bin-supported/$(am__dirstamp) \
	bin-supported/$(DEPDIR)/$(am__dirstamp)
bin-supported/serviceTag$(EXEEXT): $(bin_supported_serviceTag_OBJECTS) $(bin_supported_serviceTag_DEPENDENCIES) bin-supported/$(am__dirstamp)
	@rm -f bin-supported/serviceTag$(EXEEXT)
	$(bin_supported_serviceTag_LINK) $(bin_supported_serviceTag_OBJECTS) $(bin_supported_serviceTag_LDADD) $(LIBS)
bin-supported/serviceTagS$(EXEEXT): $(bin_supported_serviceTagS_OBJECTS) $(bin_supported_serviceTagS_DEPENDENCIES) bin-supported/$(am__dirstamp)
	@rm -f bin-supported/serviceTagS$(EXEEXT)
	$(bin_supported_serviceTagS_LINK) $(bin_supported_serviceTagS_OBJECTS) $(bin_supported_serviceTagS_LDADD) $(LIBS)
bin-supported/verifySmiPassword.$(OBJEXT):  \
	bin-supported/$(am__dirstamp) \
	bin-supported/$(DEPDIR)/$(am__dirstamp)
bin-supported/verifySmiPassword$(EXEEXT): $(bin_supported_verifySmiPassword_OBJECTS) $(bin_supported_verifySmiPassword_DEPENDENCIES) bin-supported/$(am__dirstamp)
	@rm -f bin-supported/verifySmiPassword$(EXEEXT)
	$(bin_supported_verifySmiPassword_LINK) $(bin_supported_verifySmiPassword_OBJECTS) $(bin_supported_verifySmiPassword_LDADD) $(LIBS)
bin-supported/verifySmiPasswordS$(EXEEXT): $(bin_supported_verifySmiPasswordS_OBJECTS) $(bin_supported_verifySmiPasswordS_DEPENDENCIES) bin-supported/$(am__dirstamp)
	@rm -f bin-supported/verifySmiPasswordS$(EXEEXT)
	$(bin_supported_verifySmiPasswordS_LINK) $(bin_supported_verifySmiPasswordS_OBJECTS) $(bin_supported_verifySmiPasswordS_LDADD) $(LIBS)
bin-supported/wakeupCtl.$(OBJEXT): bin-supported/$(am__dirstamp) \
	bin-supported/$(DEPDIR)/$(am__dirstamp)
bin-supported/wakeupCtl$(EXEEXT): $(bin_supported_wakeupCtl_OBJECTS) $(bin_supported_wakeupCtl_DEPENDENCIES) bin-supported/$(am__dirstamp)
	@rm -f bin-supported/wakeupCtl$(EXEEXT)
	$(bin_supported_wakeupCtl_LINK) $(bin_supported_wakeupCtl_OBJECTS) $(bin_supported_wakeupCtl_LDADD) $(LIBS)
bin-supported/wakeupCtlS$(EXEEXT): $(bin_supported_wakeupCtlS_OBJECTS) $(bin_supported_wakeupCtlS_DEPENDENCIES) bin-supported/$(am__dirstamp)
	@rm -f bin-supported/wakeupCtlS$(EXEEXT)
	$(bin_supported_wakeupCtlS_LINK) $(bin_supported_wakeupCtlS_OBJECTS) $(bin_supported_wakeupCtlS_LDADD) $(LIBS)
bin-unsupported/$(am__dirstamp):
	@$(MKDIR_P) bin-unsupported
	@: > bin-unsupported/$(am__dirstamp)
bin-unsupported/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) bin-unsupported/$(DEPDIR)
	@: > bin-unsupported/$(DEPDIR)/$(am__dirstamp)
bin-unsupported/activateCmosToken.$(OBJEXT):  \
	bin-unsupported/$(am__dirstamp) \
	bin-unsupported/$(DEPDIR)/$(am__dirstamp)
bin-unsupported/activateCmosToken$(EXEEXT): $(bin_unsupported_activateCmosToken_OBJECTS) $(bin_unsupported_activateCmosToken_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/activateCmosToken$(EXEEXT)
	$(bin_unsupported_activateCmosToken_LINK) $(bin_unsupported_activateCmosToken_OBJECTS) $(bin_unsupported_activateCmosToken_LDADD) $(LIBS)
bin-unsupported/activateCmosTokenS$(EXEEXT): $(bin_unsupported_activateCmosTokenS_OBJECTS) $(bin_unsupported_activateCmosTokenS_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/activateCmosTokenS$(EXEEXT)
	$(bin_unsupported_activateCmosTokenS_LINK) $(bin_unsupported_activateCmosTokenS_OBJECTS) $(bin_unsupported_activateCmosTokenS_LDADD) $(LIBS)
bin-unsupported/ascii2enUS_scancode.$(OBJEXT):  \
	bin-unsupported/$(am__dirstamp) \
	bin-unsupported/$(DEPDIR)/$(am__dirstamp)
bin-unsupported/ascii2enUS_scancode$(EXEEXT): $(bin_unsupported_ascii2enUS_scancode_OBJECTS) $(bin_unsupported_ascii2enUS_scancode_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/ascii2enUS_scancode$(EXEEXT)
	$(bin_unsupported_ascii2enUS_scancode_LINK) $(bin_unsupported_ascii2enUS_scancode_OBJECTS) $(bin_unsupported_ascii2enUS_scancode_LDADD) $(LIBS)
bin-unsupported/ascii2enUS_scancodeS$(EXEEXT): $(bin_unsupported_ascii2enUS_scancodeS_OBJECTS) $(bin_unsupported_ascii2enUS_scancodeS_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/ascii2enUS_scancodeS$(EXEEXT)
	$(bin_unsupported_ascii2enUS_scancodeS_LINK) $(bin_unsupported_ascii2enUS_scancodeS_OBJECTS) $(bin_unsupported_ascii2enUS_scancodeS_LDADD) $(LIBS)
bin-unsupported/createUnitTestFiles.$(OBJEXT):  \
	bin-unsupported/$(am__dirstamp) \
	bin-unsupported/$(DEPDIR)/$(am__dirstamp)
bin-unsupported/createUnitTestFiles$(EXEEXT): $(bin_unsupported_createUnitTestFiles_OBJECTS) $(bin_unsupported_createUnitTestFiles_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/createUnitTestFiles$(EXEEXT)
	$(bin_unsupported_createUnitTestFiles_LINK) $(bin_unsupported_createUnitTestFiles_OBJECTS) $(bin_unsupported_createUnitTestFiles_LDADD) $(LIBS)
bin-unsupported/createUnitTestFilesS$(EXEEXT): $(bin_unsupported_createUnitTestFilesS_OBJECTS) $(bin_unsupported_createUnitTestFilesS_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/createUnitTestFilesS$(EXEEXT)
	$(bin_unsupported_createUnitTestFilesS_LINK) $(bin_unsupported_createUnitTestFilesS_OBJECTS) $(bin_unsupported_createUnitTestFilesS_LDADD) $(LIBS)
bin-unsupported/dellLEDCtl.$(OBJEXT): bin-unsupported/$(am__dirstamp) \
	bin-unsupported/$(DEPDIR)/$(am__dirstamp)
bin-unsupported/dellLEDCtl$(EXEEXT): $(bin_unsupported_dellLEDCtl_OBJECTS) $(bin_unsupported_dellLEDCtl_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/dellLEDCtl$(EXEEXT)
	$(bin_unsupported_dellLEDCtl_LINK) $(bin_unsupported_dellLEDCtl_OBJECTS) $(bin_unsupported_dellLEDCtl_LDADD) $(LIBS)
bin-unsupported/dellLEDCtlS$(EXEEXT): $(bin_unsupported_dellLEDCtlS_OBJECTS) $(bin_unsupported_dellLEDCtlS_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/dellLEDCtlS$(EXEEXT)
	$(bin_unsupported_dellLEDCtlS_LINK) $(bin_unsupported_dellLEDCtlS_OBJECTS) $(bin_unsupported_dellLEDCtlS_LDADD) $(LIBS)
bin-unsupported/disable_console_redir.$(OBJEXT):  \
	bin-unsupported/$(am__dirstamp) \
	bin-unsupported/$(DEPDIR)/$(am__dirstamp)
bin-unsupported/disable_console_redir$(EXEEXT): $(bin_unsupported_disable_console_redir_OBJECTS) $(bin_unsupported_disable_console_redir_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/disable_console_redir$(EXEEXT)
	$(bin_unsupported_disable_console_redir_LINK) $(bin_unsupported_disable_console_redir_OBJECTS) $(bin_unsupported_disable_console_redir_LDADD) $(LIBS)
bin-unsupported/disable_console_redirS$(EXEEXT): $(bin_unsupported_disable_console_redirS_OBJECTS) $(bin_unsupported_disable_console_redirS_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/disable_console_redirS$(EXEEXT)
	$(bin_unsupported_disable_console_redirS_LINK) $(bin_unsupported_disable_console_redirS_OBJECTS) $(bin_unsupported_disable_console_redirS_LDADD) $(LIBS)
bin-unsupported/dumpCmos.$(OBJEXT): bin-unsupported/$(am__dirstamp) \
	bin-unsupported/$(DEPDIR)/$(am__dirstamp)
bin-unsupported/dumpCmos$(EXEEXT): $(bin_unsupported_dumpCmos_OBJECTS) $(bin_unsupported_dumpCmos_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/dumpCmos$(EXEEXT)
	$(bin_unsupported_dumpCmos_LINK) $(bin_unsupported_dumpCmos_OBJECTS) $(bin_unsupported_dumpCmos_LDADD) $(LIBS)
bin-unsupported/dumpCmosS$(EXEEXT): $(bin_unsupported_dumpCmosS_OBJECTS) $(bin_unsupported_dumpCmosS_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/dumpCmosS$(EXEEXT)
	$(bin_unsupported_dumpCmosS_LINK) $(bin_unsupported_dumpCmosS_OBJECTS) $(bin_unsupported_dumpCmosS_LDADD) $(LIBS)
bin-unsupported/getPasswordFormat.$(OBJEXT):  \
	bin-unsupported/$(am__dirstamp) \
	bin-unsupported/$(DEPDIR)/$(am__dirstamp)
bin-unsupported/getPasswordFormat$(EXEEXT): $(bin_unsupported_getPasswordFormat_OBJECTS) $(bin_unsupported_getPasswordFormat_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/getPasswordFormat$(EXEEXT)
	$(bin_unsupported_getPasswordFormat_LINK) $(bin_unsupported_getPasswordFormat_OBJECTS) $(bin_unsupported_getPasswordFormat_LDADD) $(LIBS)
bin-unsupported/getPasswordFormatS$(EXEEXT): $(bin_unsupported_getPasswordFormatS_OBJECTS) $(bin_unsupported_getPasswordFormatS_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/getPasswordFormatS$(EXEEXT)
	$(bin_unsupported_getPasswordFormatS_LINK) $(bin_unsupported_getPasswordFormatS_OBJECTS) $(bin_unsupported_getPasswordFormatS_LDADD) $(LIBS)
bin-unsupported/isCmosTokenActive.$(OBJEXT):  \
	bin-unsupported/$(am__dirstamp) \
	bin-unsupported/$(DEPDIR)/$(am__dirstamp)
bin-unsupported/isCmosTokenActive$(EXEEXT): $(bin_unsupported_isCmosTokenActive_OBJECTS) $(bin_unsupported_isCmosTokenActive_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/isCmosTokenActive$(EXEEXT)
	$(bin_unsupported_isCmosTokenActive_LINK) $(bin_unsupported_isCmosTokenActive_OBJECTS) $(bin_unsupported_isCmosTokenActive_LDADD) $(LIBS)
bin-unsupported/isCmosTokenActiveS$(EXEEXT): $(bin_unsupported_isCmosTokenActiveS_OBJECTS) $(bin_unsupported_isCmosTokenActiveS_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/isCmosTokenActiveS$(EXEEXT)
	$(bin_unsupported_isCmosTokenActiveS_LINK) $(bin_unsupported_isCmosTokenActiveS_OBJECTS) $(bin_unsupported_isCmosTokenActiveS_LDADD) $(LIBS)
bin-unsupported/probes.$(OBJEXT): bin-unsupported/$(am__dirstamp) \
	bin-unsupported/$(DEPDIR)/$(am__dirstamp)
bin-unsupported/probes$(EXEEXT): $(bin_unsupported_probes_OBJECTS) $(bin_unsupported_probes_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/probes$(EXEEXT)
	$(bin_unsupported_probes_LINK) $(bin_unsupported_probes_OBJECTS) $(bin_unsupported_probes_LDADD) $(LIBS)
bin-unsupported/probesS$(EXEEXT): $(bin_unsupported_probesS_OBJECTS) $(bin_unsupported_probesS_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/probesS$(EXEEXT)
	$(bin_unsupported_probesS_LINK) $(bin_unsupported_probesS_OBJECTS) $(bin_unsupported_probesS_LDADD) $(LIBS)
bin-unsupported/smitest.$(OBJEXT): bin-unsupported/$(am__dirstamp) \
	bin-unsupported/$(DEPDIR)/$(am__dirstamp)
bin-unsupported/smitest$(EXEEXT): $(bin_unsupported_smitest_OBJECTS) $(bin_unsupported_smitest_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/smitest$(EXEEXT)
	$(bin_unsupported_smitest_LINK) $(bin_unsupported_smitest_OBJECTS) $(bin_unsupported_smitest_LDADD) $(LIBS)
bin-unsupported/smitestS$(EXEEXT): $(bin_unsupported_smitestS_OBJECTS) $(bin_unsupported_smitestS_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/smitestS$(EXEEXT)
	$(bin_unsupported_smitestS_LINK) $(bin_unsupported_smitestS_OBJECTS) $(bin_unsupported_smitestS_LDADD) $(LIBS)
bin-unsupported/stateByteCtl.$(OBJEXT):  \
	bin-unsupported/$(am__dirstamp) \
	bin-unsupported/$(DEPDIR)/$(am__dirstamp)
bin-unsupported/stateByteCtl$(EXEEXT): $(bin_unsupported_stateByteCtl_OBJECTS) $(bin_unsupported_stateByteCtl_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/stateByteCtl$(EXEEXT)
	$(bin_unsupported_stateByteCtl_LINK) $(bin_unsupported_stateByteCtl_OBJECTS) $(bin_unsupported_stateByteCtl_LDADD) $(LIBS)
bin-unsupported/stateByteCtlS$(EXEEXT): $(bin_unsupported_stateByteCtlS_OBJECTS) $(bin_unsupported_stateByteCtlS_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/stateByteCtlS$(EXEEXT)
	$(bin_unsupported_stateByteCtlS_LINK) $(bin_unsupported_stateByteCtlS_OBJECTS) $(bin_unsupported_stateByteCtlS_LDADD) $(LIBS)
bin-unsupported/upBootCtl.$(OBJEXT): bin-unsupported/$(am__dirstamp) \
	bin-unsupported/$(DEPDIR)/$(am__dirstamp)
bin-unsupported/upBootCtl$(EXEEXT): $(bin_unsupported_upBootCtl_OBJECTS) $(bin_unsupported_upBootCtl_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/upBootCtl$(EXEEXT)
	$(bin_unsupported_upBootCtl_LINK) $(bin_unsupported_upBootCtl_OBJECTS) $(bin_unsupported_upBootCtl_LDADD) $(LIBS)
bin-unsupported/upBootCtlS$(EXEEXT): $(bin_unsupported_upBootCtlS_OBJECTS) $(bin_unsupported_upBootCtlS_DEPENDENCIES) bin-unsupported/$(am__dirstamp)
	@rm -f bin-unsupported/upBootCtlS$(EXEEXT)
	$(bin_unsupported_upBootCtlS_LINK) $(bin_unsupported_upBootCtlS_OBJECTS) $(bin_unsupported_upBootCtlS_LDADD) $(LIBS)
cppunit/$(am__dirstamp):
	@$(MKDIR_P) cppunit
	@: > cppunit/$(am__dirstamp)
cppunit/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) cppunit/$(DEPDIR)
	@: > cppunit/$(DEPDIR)/$(am__dirstamp)
cppunit/cppunit_testPlatform-main.$(OBJEXT): cppunit/$(am__dirstamp) \
	cppunit/$(DEPDIR)/$(am__dirstamp)
cppunit/interface/$(am__dirstamp):
	@$(MKDIR_P) cppunit/interface
	@: > cppunit/interface/$(am__dirstamp)
cppunit/interface/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) cppunit/interface/$(DEPDIR)
	@: > cppunit/interface/$(DEPDIR)/$(am__dirstamp)
cppunit/interface/cppunit_testPlatform-XmlUtils.$(OBJEXT):  \
	cppunit/interface/$(am__dirstamp) \
	cppunit/interface/$(DEPDIR)/$(am__dirstamp)
cppunit/interface/cppunit_testPlatform-testPlatform.$(OBJEXT):  \
	cppunit/interface/$(am__dirstamp) \
	cppunit/interface/$(DEPDIR)/$(am__dirstamp)
cppunit/testPlatform$(EXEEXT): $(cppunit_testPlatform_OBJECTS) $(cppunit_testPlatform_DEPENDENCIES) cppunit/$(am__dirstamp)
	@rm -f cppunit/testPlatform$(EXEEXT)
	$(cppunit_testPlatform_LINK) $(cppunit_testPlatform_OBJECTS) $(cppunit_testPlatform_LDADD) $(LIBS)
cppunit/cppunit_testRbu-main.$(OBJEXT): cppunit/$(am__dirstamp) \
	cppunit/$(DEPDIR)/$(am__dirstamp)
cppunit/interface/cppunit_testRbu-XmlUtils.$(OBJEXT):  \
	cppunit/interface/$(am__dirstamp) \
	cppunit/interface/$(DEPDIR)/$(am__dirstamp)
cppunit/interface/cppunit_testRbu-testRbu.$(OBJEXT):  \
	cppunit/interface/$(am__dirstamp) \
	cppunit/interface/$(DEPDIR)/$(am__dirstamp)
cppunit/testRbu$(EXEEXT): $(cppunit_testRbu_OBJECTS) $(cppunit_testRbu_DEPENDENCIES) cppunit/$(am__dirstamp)
	@rm -f cppunit/testRbu$(EXEEXT)
	$(cppunit_testRbu_LINK) $(cppunit_testRbu_OBJECTS) $(cppunit_testRbu_LDADD) $(LIBS)
cppunit/cppunit_testStandalone-main.$(OBJEXT):  \
	cppunit/$(am__dirstamp) cppunit/$(DEPDIR)/$(am__dirstamp)
cppunit/interface/cppunit_testStandalone-XmlUtils.$(OBJEXT):  \
	cppunit/interface/$(am__dirstamp) \
	cppunit/interface/$(DEPDIR)/$(am__dirstamp)
cppunit/interface/cppunit_testStandalone-testStandalone.$(OBJEXT):  \
	cppunit/interface/$(am__dirstamp) \
	cppunit/interface/$(DEPDIR)/$(am__dirstamp)
cppunit/testStandalone$(EXEEXT): $(cppunit_testStandalone_OBJECTS) $(cppunit_testStandalone_DEPENDENCIES) cppunit/$(am__dirstamp)
	@rm -f cppunit/testStandalone$(EXEEXT)
	$(cppunit_testStandalone_LINK) $(cppunit_testStandalone_OBJECTS) $(cppunit_testStandalone_LDADD) $(LIBS)
install-dist_binSCRIPTS: $(dist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(dist_bin_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(dist_binSCRIPT_INSTALL) '$$d$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	    $(dist_binSCRIPT_INSTALL) "$$d$$p" "$(DESTDIR)$(bindir)/$$f"; \
	  else :; fi; \
	done

uninstall-dist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done
install-dist_sbinSCRIPTS: $(dist_sbin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(sbindir)" || $(MKDIR_P) "$(DESTDIR)$(sbindir)"
	@list='$(dist_sbin_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(dist_sbinSCRIPT_INSTALL) '$$d$$p' '$(DESTDIR)$(sbindir)/$$f'"; \
	    $(dist_sbinSCRIPT_INSTALL) "$$d$$p" "$(DESTDIR)$(sbindir)/$$f"; \
	  else :; fi; \
	done

uninstall-dist_sbinSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_sbin_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f '$(DESTDIR)$(sbindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(sbindir)/$$f"; \
	done

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f bin-supported/assetTag.$(OBJEXT)
	-rm -f bin-supported/bin_supported_dellBiosUpdate-dellBiosUpdate.$(OBJEXT)
	-rm -f bin-supported/bin_supported_dellBiosUpdateS-dellBiosUpdate.$(OBJEXT)
	-rm -f bin-supported/dellLcdBrightness.$(OBJEXT)
	-rm -f bin-supported/dellMediaDirectCtl.$(OBJEXT)
	-rm -f bin-supported/dellWirelessCtl.$(OBJEXT)
	-rm -f bin-supported/dumpSmbios.$(OBJEXT)
	-rm -f bin-supported/getSystemId.$(OBJEXT)
	-rm -f bin-supported/getopts.$(OBJEXT)
	-rm -f bin-supported/propertyTag.$(OBJEXT)
	-rm -f bin-supported/serviceTag.$(OBJEXT)
	-rm -f bin-supported/verifySmiPassword.$(OBJEXT)
	-rm -f bin-supported/wakeupCtl.$(OBJEXT)
	-rm -f bin-unsupported/activateCmosToken.$(OBJEXT)
	-rm -f bin-unsupported/ascii2enUS_scancode.$(OBJEXT)
	-rm -f bin-unsupported/createUnitTestFiles.$(OBJEXT)
	-rm -f bin-unsupported/dellLEDCtl.$(OBJEXT)
	-rm -f bin-unsupported/disable_console_redir.$(OBJEXT)
	-rm -f bin-unsupported/dumpCmos.$(OBJEXT)
	-rm -f bin-unsupported/getPasswordFormat.$(OBJEXT)
	-rm -f bin-unsupported/isCmosTokenActive.$(OBJEXT)
	-rm -f bin-unsupported/probes.$(OBJEXT)
	-rm -f bin-unsupported/smitest.$(OBJEXT)
	-rm -f bin-unsupported/stateByteCtl.$(OBJEXT)
	-rm -f bin-unsupported/upBootCtl.$(OBJEXT)
	-rm -f cppunit/cppunit_testPlatform-main.$(OBJEXT)
	-rm -f cppunit/cppunit_testRbu-main.$(OBJEXT)
	-rm -f cppunit/cppunit_testStandalone-main.$(OBJEXT)
	-rm -f cppunit/interface/cppunit_testPlatform-XmlUtils.$(OBJEXT)
	-rm -f cppunit/interface/cppunit_testPlatform-testPlatform.$(OBJEXT)
	-rm -f cppunit/interface/cppunit_testRbu-XmlUtils.$(OBJEXT)
	-rm -f cppunit/interface/cppunit_testRbu-testRbu.$(OBJEXT)
	-rm -f cppunit/interface/cppunit_testStandalone-XmlUtils.$(OBJEXT)
	-rm -f cppunit/interface/cppunit_testStandalone-testStandalone.$(OBJEXT)
	-rm -f libraries/cmos/libraries_libsmbios_la-CmosRW.$(OBJEXT)
	-rm -f libraries/cmos/libraries_libsmbios_la-CmosRW.lo
	-rm -f libraries/cmos/libraries_libsmbios_la-CmosRWFactory.$(OBJEXT)
	-rm -f libraries/cmos/libraries_libsmbios_la-CmosRWFactory.lo
	-rm -f libraries/cmos/libraries_libsmbios_la-CmosRW_LinuxIO.$(OBJEXT)
	-rm -f libraries/cmos/libraries_libsmbios_la-CmosRW_LinuxIO.lo
	-rm -f libraries/common/libraries_libsmbios_la-Observer.$(OBJEXT)
	-rm -f libraries/common/libraries_libsmbios_la-Observer.lo
	-rm -f libraries/common/libraries_libsmbios_la-ascii2enUS_scancode.$(OBJEXT)
	-rm -f libraries/common/libraries_libsmbios_la-ascii2enUS_scancode.lo
	-rm -f libraries/memory/libraries_libsmbios_la-Memory.$(OBJEXT)
	-rm -f libraries/memory/libraries_libsmbios_la-Memory.lo
	-rm -f libraries/memory/libraries_libsmbios_la-Memory_Linux.$(OBJEXT)
	-rm -f libraries/memory/libraries_libsmbios_la-Memory_Linux.lo
	-rm -f libraries/rbu/libraries_libsmbios_la-RbuHdr.$(OBJEXT)
	-rm -f libraries/rbu/libraries_libsmbios_la-RbuHdr.lo
	-rm -f libraries/rbu/libraries_libsmbios_la-Rbu_Linux.$(OBJEXT)
	-rm -f libraries/rbu/libraries_libsmbios_la-Rbu_Linux.lo
	-rm -f libraries/smbios/libraries_libsmbios_la-SmbiosFactory.$(OBJEXT)
	-rm -f libraries/smbios/libraries_libsmbios_la-SmbiosFactory.lo
	-rm -f libraries/smbios/libraries_libsmbios_la-SmbiosItem.$(OBJEXT)
	-rm -f libraries/smbios/libraries_libsmbios_la-SmbiosItem.lo
	-rm -f libraries/smbios/libraries_libsmbios_la-SmbiosStrategy.$(OBJEXT)
	-rm -f libraries/smbios/libraries_libsmbios_la-SmbiosStrategy.lo
	-rm -f libraries/smbios/libraries_libsmbios_la-SmbiosStrategy_Linux.$(OBJEXT)
	-rm -f libraries/smbios/libraries_libsmbios_la-SmbiosStrategy_Linux.lo
	-rm -f libraries/smbios/libraries_libsmbios_la-SmbiosTable.$(OBJEXT)
	-rm -f libraries/smbios/libraries_libsmbios_la-SmbiosTable.lo
	-rm -f libraries/smbios/libraries_libsmbios_la-SmbiosTableIterator.$(OBJEXT)
	-rm -f libraries/smbios/libraries_libsmbios_la-SmbiosTableIterator.lo
	-rm -f libraries/smbios/libraries_libsmbios_la-SmbiosWorkaround.$(OBJEXT)
	-rm -f libraries/smbios/libraries_libsmbios_la-SmbiosWorkaround.lo
	-rm -f libraries/smi/libraries_libsmbios_la-Smi.$(OBJEXT)
	-rm -f libraries/smi/libraries_libsmbios_la-Smi.lo
	-rm -f libraries/smi/libraries_libsmbios_la-SmiFactory.$(OBJEXT)
	-rm -f libraries/smi/libraries_libsmbios_la-SmiFactory.lo
	-rm -f libraries/smi/libraries_libsmbios_la-Smi_Linux.$(OBJEXT)
	-rm -f libraries/smi/libraries_libsmbios_la-Smi_Linux.lo
	-rm -f libraries/systeminfo/libraries_libsmbios_la-IdByte.$(OBJEXT)
	-rm -f libraries/systeminfo/libraries_libsmbios_la-IdByte.lo
	-rm -f libraries/systeminfo/libraries_libsmbios_la-SysInfoError.$(OBJEXT)
	-rm -f libraries/systeminfo/libraries_libsmbios_la-SysInfoError.lo
	-rm -f libraries/systeminfo/libraries_libsmbios_la-System.$(OBJEXT)
	-rm -f libraries/systeminfo/libraries_libsmbios_la-System.lo
	-rm -f libraries/systeminfo/libraries_libsmbios_la-SystemDetect.$(OBJEXT)
	-rm -f libraries/systeminfo/libraries_libsmbios_la-SystemDetect.lo
	-rm -f libraries/token/libraries_libsmbios_la-Token.$(OBJEXT)
	-rm -f libraries/token/libraries_libsmbios_la-Token.lo
	-rm -f libraries/token/libraries_libsmbios_la-TokenD4.$(OBJEXT)
	-rm -f libraries/token/libraries_libsmbios_la-TokenD4.lo
	-rm -f libraries/token/libraries_libsmbios_la-TokenD5.$(OBJEXT)
	-rm -f libraries/token/libraries_libsmbios_la-TokenD5.lo
	-rm -f libraries/token/libraries_libsmbios_la-TokenD6.$(OBJEXT)
	-rm -f libraries/token/libraries_libsmbios_la-TokenD6.lo
	-rm -f libraries/token/libraries_libsmbios_la-TokenDA.$(OBJEXT)
	-rm -f libraries/token/libraries_libsmbios_la-TokenDA.lo
	-rm -f libraries/token/libraries_libsmbios_la-TokenTable.$(OBJEXT)
	-rm -f libraries/token/libraries_libsmbios_la-TokenTable.lo
	-rm -f libraries/token/libraries_libsmbios_la-TokenTableFactory.$(OBJEXT)
	-rm -f libraries/token/libraries_libsmbios_la-TokenTableFactory.lo
	-rm -f libraries/token/libraries_libsmbios_la-TokenTableIterator.$(OBJEXT)
	-rm -f libraries/token/libraries_libsmbios_la-TokenTableIterator.lo
	-rm -f libraries/token/libraries_libsmbios_la-checksum.$(OBJEXT)
	-rm -f libraries/token/libraries_libsmbios_la-checksum.lo

distclean-compile:
	-rm -f *.tab.c

include bin-supported/$(DEPDIR)/assetTag.Po
include bin-supported/$(DEPDIR)/bin_supported_dellBiosUpdate-dellBiosUpdate.Po
include bin-supported/$(DEPDIR)/bin_supported_dellBiosUpdateS-dellBiosUpdate.Po
include bin-supported/$(DEPDIR)/dellLcdBrightness.Po
include bin-supported/$(DEPDIR)/dellMediaDirectCtl.Po
include bin-supported/$(DEPDIR)/dellWirelessCtl.Po
include bin-supported/$(DEPDIR)/dumpSmbios.Po
include bin-supported/$(DEPDIR)/getSystemId.Po
include bin-supported/$(DEPDIR)/getopts.Po
include bin-supported/$(DEPDIR)/propertyTag.Po
include bin-supported/$(DEPDIR)/serviceTag.Po
include bin-supported/$(DEPDIR)/verifySmiPassword.Po
include bin-supported/$(DEPDIR)/wakeupCtl.Po
include bin-unsupported/$(DEPDIR)/activateCmosToken.Po
include bin-unsupported/$(DEPDIR)/ascii2enUS_scancode.Po
include bin-unsupported/$(DEPDIR)/createUnitTestFiles.Po
include bin-unsupported/$(DEPDIR)/dellLEDCtl.Po
include bin-unsupported/$(DEPDIR)/disable_console_redir.Po
include bin-unsupported/$(DEPDIR)/dumpCmos.Po
include bin-unsupported/$(DEPDIR)/getPasswordFormat.Po
include bin-unsupported/$(DEPDIR)/isCmosTokenActive.Po
include bin-unsupported/$(DEPDIR)/probes.Po
include bin-unsupported/$(DEPDIR)/smitest.Po
include bin-unsupported/$(DEPDIR)/stateByteCtl.Po
include bin-unsupported/$(DEPDIR)/upBootCtl.Po
include cppunit/$(DEPDIR)/cppunit_testPlatform-main.Po
include cppunit/$(DEPDIR)/cppunit_testRbu-main.Po
include cppunit/$(DEPDIR)/cppunit_testStandalone-main.Po
include cppunit/interface/$(DEPDIR)/cppunit_testPlatform-XmlUtils.Po
include cppunit/interface/$(DEPDIR)/cppunit_testPlatform-testPlatform.Po
include cppunit/interface/$(DEPDIR)/cppunit_testRbu-XmlUtils.Po
include cppunit/interface/$(DEPDIR)/cppunit_testRbu-testRbu.Po
include cppunit/interface/$(DEPDIR)/cppunit_testStandalone-XmlUtils.Po
include cppunit/interface/$(DEPDIR)/cppunit_testStandalone-testStandalone.Po
include libraries/cmos/$(DEPDIR)/libraries_libsmbios_la-CmosRW.Plo
include libraries/cmos/$(DEPDIR)/libraries_libsmbios_la-CmosRWFactory.Plo
include libraries/cmos/$(DEPDIR)/libraries_libsmbios_la-CmosRW_LinuxIO.Plo
include libraries/common/$(DEPDIR)/libraries_libsmbios_la-Observer.Plo
include libraries/common/$(DEPDIR)/libraries_libsmbios_la-ascii2enUS_scancode.Plo
include libraries/memory/$(DEPDIR)/libraries_libsmbios_la-Memory.Plo
include libraries/memory/$(DEPDIR)/libraries_libsmbios_la-Memory_Linux.Plo
include libraries/rbu/$(DEPDIR)/libraries_libsmbios_la-RbuHdr.Plo
include libraries/rbu/$(DEPDIR)/libraries_libsmbios_la-Rbu_Linux.Plo
include libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosFactory.Plo
include libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosItem.Plo
include libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosStrategy.Plo
include libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosStrategy_Linux.Plo
include libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosTable.Plo
include libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosTableIterator.Plo
include libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosWorkaround.Plo
include libraries/smi/$(DEPDIR)/libraries_libsmbios_la-Smi.Plo
include libraries/smi/$(DEPDIR)/libraries_libsmbios_la-SmiFactory.Plo
include libraries/smi/$(DEPDIR)/libraries_libsmbios_la-Smi_Linux.Plo
include libraries/systeminfo/$(DEPDIR)/libraries_libsmbios_la-IdByte.Plo
include libraries/systeminfo/$(DEPDIR)/libraries_libsmbios_la-SysInfoError.Plo
include libraries/systeminfo/$(DEPDIR)/libraries_libsmbios_la-System.Plo
include libraries/systeminfo/$(DEPDIR)/libraries_libsmbios_la-SystemDetect.Plo
include libraries/token/$(DEPDIR)/libraries_libsmbios_la-Token.Plo
include libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenD4.Plo
include libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenD5.Plo
include libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenD6.Plo
include libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenDA.Plo
include libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenTable.Plo
include libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenTableFactory.Plo
include libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenTableIterator.Plo
include libraries/token/$(DEPDIR)/libraries_libsmbios_la-checksum.Plo

.c.o:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	mv -f $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ $<

.c.obj:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	mv -f $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	mv -f $$depbase.Tpo $$depbase.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

.cpp.o:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	mv -f $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	mv -f $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	mv -f $$depbase.Tpo $$depbase.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libraries/cmos/libraries_libsmbios_la-CmosRW.lo: libraries/cmos/CmosRW.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/cmos/libraries_libsmbios_la-CmosRW.lo -MD -MP -MF libraries/cmos/$(DEPDIR)/libraries_libsmbios_la-CmosRW.Tpo -c -o libraries/cmos/libraries_libsmbios_la-CmosRW.lo `test -f 'libraries/cmos/CmosRW.cpp' || echo '$(srcdir)/'`libraries/cmos/CmosRW.cpp
	mv -f libraries/cmos/$(DEPDIR)/libraries_libsmbios_la-CmosRW.Tpo libraries/cmos/$(DEPDIR)/libraries_libsmbios_la-CmosRW.Plo
#	source='libraries/cmos/CmosRW.cpp' object='libraries/cmos/libraries_libsmbios_la-CmosRW.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/cmos/libraries_libsmbios_la-CmosRW.lo `test -f 'libraries/cmos/CmosRW.cpp' || echo '$(srcdir)/'`libraries/cmos/CmosRW.cpp

libraries/cmos/libraries_libsmbios_la-CmosRWFactory.lo: libraries/cmos/CmosRWFactory.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/cmos/libraries_libsmbios_la-CmosRWFactory.lo -MD -MP -MF libraries/cmos/$(DEPDIR)/libraries_libsmbios_la-CmosRWFactory.Tpo -c -o libraries/cmos/libraries_libsmbios_la-CmosRWFactory.lo `test -f 'libraries/cmos/CmosRWFactory.cpp' || echo '$(srcdir)/'`libraries/cmos/CmosRWFactory.cpp
	mv -f libraries/cmos/$(DEPDIR)/libraries_libsmbios_la-CmosRWFactory.Tpo libraries/cmos/$(DEPDIR)/libraries_libsmbios_la-CmosRWFactory.Plo
#	source='libraries/cmos/CmosRWFactory.cpp' object='libraries/cmos/libraries_libsmbios_la-CmosRWFactory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/cmos/libraries_libsmbios_la-CmosRWFactory.lo `test -f 'libraries/cmos/CmosRWFactory.cpp' || echo '$(srcdir)/'`libraries/cmos/CmosRWFactory.cpp

libraries/cmos/libraries_libsmbios_la-CmosRW_LinuxIO.lo: libraries/cmos/CmosRW_LinuxIO.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/cmos/libraries_libsmbios_la-CmosRW_LinuxIO.lo -MD -MP -MF libraries/cmos/$(DEPDIR)/libraries_libsmbios_la-CmosRW_LinuxIO.Tpo -c -o libraries/cmos/libraries_libsmbios_la-CmosRW_LinuxIO.lo `test -f 'libraries/cmos/CmosRW_LinuxIO.cpp' || echo '$(srcdir)/'`libraries/cmos/CmosRW_LinuxIO.cpp
	mv -f libraries/cmos/$(DEPDIR)/libraries_libsmbios_la-CmosRW_LinuxIO.Tpo libraries/cmos/$(DEPDIR)/libraries_libsmbios_la-CmosRW_LinuxIO.Plo
#	source='libraries/cmos/CmosRW_LinuxIO.cpp' object='libraries/cmos/libraries_libsmbios_la-CmosRW_LinuxIO.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/cmos/libraries_libsmbios_la-CmosRW_LinuxIO.lo `test -f 'libraries/cmos/CmosRW_LinuxIO.cpp' || echo '$(srcdir)/'`libraries/cmos/CmosRW_LinuxIO.cpp

libraries/common/libraries_libsmbios_la-ascii2enUS_scancode.lo: libraries/common/ascii2enUS_scancode.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/common/libraries_libsmbios_la-ascii2enUS_scancode.lo -MD -MP -MF libraries/common/$(DEPDIR)/libraries_libsmbios_la-ascii2enUS_scancode.Tpo -c -o libraries/common/libraries_libsmbios_la-ascii2enUS_scancode.lo `test -f 'libraries/common/ascii2enUS_scancode.cpp' || echo '$(srcdir)/'`libraries/common/ascii2enUS_scancode.cpp
	mv -f libraries/common/$(DEPDIR)/libraries_libsmbios_la-ascii2enUS_scancode.Tpo libraries/common/$(DEPDIR)/libraries_libsmbios_la-ascii2enUS_scancode.Plo
#	source='libraries/common/ascii2enUS_scancode.cpp' object='libraries/common/libraries_libsmbios_la-ascii2enUS_scancode.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/common/libraries_libsmbios_la-ascii2enUS_scancode.lo `test -f 'libraries/common/ascii2enUS_scancode.cpp' || echo '$(srcdir)/'`libraries/common/ascii2enUS_scancode.cpp

libraries/common/libraries_libsmbios_la-Observer.lo: libraries/common/Observer.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/common/libraries_libsmbios_la-Observer.lo -MD -MP -MF libraries/common/$(DEPDIR)/libraries_libsmbios_la-Observer.Tpo -c -o libraries/common/libraries_libsmbios_la-Observer.lo `test -f 'libraries/common/Observer.cpp' || echo '$(srcdir)/'`libraries/common/Observer.cpp
	mv -f libraries/common/$(DEPDIR)/libraries_libsmbios_la-Observer.Tpo libraries/common/$(DEPDIR)/libraries_libsmbios_la-Observer.Plo
#	source='libraries/common/Observer.cpp' object='libraries/common/libraries_libsmbios_la-Observer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/common/libraries_libsmbios_la-Observer.lo `test -f 'libraries/common/Observer.cpp' || echo '$(srcdir)/'`libraries/common/Observer.cpp

libraries/memory/libraries_libsmbios_la-Memory.lo: libraries/memory/Memory.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/memory/libraries_libsmbios_la-Memory.lo -MD -MP -MF libraries/memory/$(DEPDIR)/libraries_libsmbios_la-Memory.Tpo -c -o libraries/memory/libraries_libsmbios_la-Memory.lo `test -f 'libraries/memory/Memory.cpp' || echo '$(srcdir)/'`libraries/memory/Memory.cpp
	mv -f libraries/memory/$(DEPDIR)/libraries_libsmbios_la-Memory.Tpo libraries/memory/$(DEPDIR)/libraries_libsmbios_la-Memory.Plo
#	source='libraries/memory/Memory.cpp' object='libraries/memory/libraries_libsmbios_la-Memory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/memory/libraries_libsmbios_la-Memory.lo `test -f 'libraries/memory/Memory.cpp' || echo '$(srcdir)/'`libraries/memory/Memory.cpp

libraries/memory/libraries_libsmbios_la-Memory_Linux.lo: libraries/memory/Memory_Linux.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/memory/libraries_libsmbios_la-Memory_Linux.lo -MD -MP -MF libraries/memory/$(DEPDIR)/libraries_libsmbios_la-Memory_Linux.Tpo -c -o libraries/memory/libraries_libsmbios_la-Memory_Linux.lo `test -f 'libraries/memory/Memory_Linux.cpp' || echo '$(srcdir)/'`libraries/memory/Memory_Linux.cpp
	mv -f libraries/memory/$(DEPDIR)/libraries_libsmbios_la-Memory_Linux.Tpo libraries/memory/$(DEPDIR)/libraries_libsmbios_la-Memory_Linux.Plo
#	source='libraries/memory/Memory_Linux.cpp' object='libraries/memory/libraries_libsmbios_la-Memory_Linux.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/memory/libraries_libsmbios_la-Memory_Linux.lo `test -f 'libraries/memory/Memory_Linux.cpp' || echo '$(srcdir)/'`libraries/memory/Memory_Linux.cpp

libraries/rbu/libraries_libsmbios_la-RbuHdr.lo: libraries/rbu/RbuHdr.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/rbu/libraries_libsmbios_la-RbuHdr.lo -MD -MP -MF libraries/rbu/$(DEPDIR)/libraries_libsmbios_la-RbuHdr.Tpo -c -o libraries/rbu/libraries_libsmbios_la-RbuHdr.lo `test -f 'libraries/rbu/RbuHdr.cpp' || echo '$(srcdir)/'`libraries/rbu/RbuHdr.cpp
	mv -f libraries/rbu/$(DEPDIR)/libraries_libsmbios_la-RbuHdr.Tpo libraries/rbu/$(DEPDIR)/libraries_libsmbios_la-RbuHdr.Plo
#	source='libraries/rbu/RbuHdr.cpp' object='libraries/rbu/libraries_libsmbios_la-RbuHdr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/rbu/libraries_libsmbios_la-RbuHdr.lo `test -f 'libraries/rbu/RbuHdr.cpp' || echo '$(srcdir)/'`libraries/rbu/RbuHdr.cpp

libraries/rbu/libraries_libsmbios_la-Rbu_Linux.lo: libraries/rbu/Rbu_Linux.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/rbu/libraries_libsmbios_la-Rbu_Linux.lo -MD -MP -MF libraries/rbu/$(DEPDIR)/libraries_libsmbios_la-Rbu_Linux.Tpo -c -o libraries/rbu/libraries_libsmbios_la-Rbu_Linux.lo `test -f 'libraries/rbu/Rbu_Linux.cpp' || echo '$(srcdir)/'`libraries/rbu/Rbu_Linux.cpp
	mv -f libraries/rbu/$(DEPDIR)/libraries_libsmbios_la-Rbu_Linux.Tpo libraries/rbu/$(DEPDIR)/libraries_libsmbios_la-Rbu_Linux.Plo
#	source='libraries/rbu/Rbu_Linux.cpp' object='libraries/rbu/libraries_libsmbios_la-Rbu_Linux.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/rbu/libraries_libsmbios_la-Rbu_Linux.lo `test -f 'libraries/rbu/Rbu_Linux.cpp' || echo '$(srcdir)/'`libraries/rbu/Rbu_Linux.cpp

libraries/smbios/libraries_libsmbios_la-SmbiosFactory.lo: libraries/smbios/SmbiosFactory.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/smbios/libraries_libsmbios_la-SmbiosFactory.lo -MD -MP -MF libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosFactory.Tpo -c -o libraries/smbios/libraries_libsmbios_la-SmbiosFactory.lo `test -f 'libraries/smbios/SmbiosFactory.cpp' || echo '$(srcdir)/'`libraries/smbios/SmbiosFactory.cpp
	mv -f libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosFactory.Tpo libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosFactory.Plo
#	source='libraries/smbios/SmbiosFactory.cpp' object='libraries/smbios/libraries_libsmbios_la-SmbiosFactory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/smbios/libraries_libsmbios_la-SmbiosFactory.lo `test -f 'libraries/smbios/SmbiosFactory.cpp' || echo '$(srcdir)/'`libraries/smbios/SmbiosFactory.cpp

libraries/smbios/libraries_libsmbios_la-SmbiosItem.lo: libraries/smbios/SmbiosItem.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/smbios/libraries_libsmbios_la-SmbiosItem.lo -MD -MP -MF libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosItem.Tpo -c -o libraries/smbios/libraries_libsmbios_la-SmbiosItem.lo `test -f 'libraries/smbios/SmbiosItem.cpp' || echo '$(srcdir)/'`libraries/smbios/SmbiosItem.cpp
	mv -f libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosItem.Tpo libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosItem.Plo
#	source='libraries/smbios/SmbiosItem.cpp' object='libraries/smbios/libraries_libsmbios_la-SmbiosItem.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/smbios/libraries_libsmbios_la-SmbiosItem.lo `test -f 'libraries/smbios/SmbiosItem.cpp' || echo '$(srcdir)/'`libraries/smbios/SmbiosItem.cpp

libraries/smbios/libraries_libsmbios_la-SmbiosStrategy.lo: libraries/smbios/SmbiosStrategy.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/smbios/libraries_libsmbios_la-SmbiosStrategy.lo -MD -MP -MF libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosStrategy.Tpo -c -o libraries/smbios/libraries_libsmbios_la-SmbiosStrategy.lo `test -f 'libraries/smbios/SmbiosStrategy.cpp' || echo '$(srcdir)/'`libraries/smbios/SmbiosStrategy.cpp
	mv -f libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosStrategy.Tpo libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosStrategy.Plo
#	source='libraries/smbios/SmbiosStrategy.cpp' object='libraries/smbios/libraries_libsmbios_la-SmbiosStrategy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/smbios/libraries_libsmbios_la-SmbiosStrategy.lo `test -f 'libraries/smbios/SmbiosStrategy.cpp' || echo '$(srcdir)/'`libraries/smbios/SmbiosStrategy.cpp

libraries/smbios/libraries_libsmbios_la-SmbiosStrategy_Linux.lo: libraries/smbios/SmbiosStrategy_Linux.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/smbios/libraries_libsmbios_la-SmbiosStrategy_Linux.lo -MD -MP -MF libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosStrategy_Linux.Tpo -c -o libraries/smbios/libraries_libsmbios_la-SmbiosStrategy_Linux.lo `test -f 'libraries/smbios/SmbiosStrategy_Linux.cpp' || echo '$(srcdir)/'`libraries/smbios/SmbiosStrategy_Linux.cpp
	mv -f libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosStrategy_Linux.Tpo libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosStrategy_Linux.Plo
#	source='libraries/smbios/SmbiosStrategy_Linux.cpp' object='libraries/smbios/libraries_libsmbios_la-SmbiosStrategy_Linux.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/smbios/libraries_libsmbios_la-SmbiosStrategy_Linux.lo `test -f 'libraries/smbios/SmbiosStrategy_Linux.cpp' || echo '$(srcdir)/'`libraries/smbios/SmbiosStrategy_Linux.cpp

libraries/smbios/libraries_libsmbios_la-SmbiosTable.lo: libraries/smbios/SmbiosTable.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/smbios/libraries_libsmbios_la-SmbiosTable.lo -MD -MP -MF libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosTable.Tpo -c -o libraries/smbios/libraries_libsmbios_la-SmbiosTable.lo `test -f 'libraries/smbios/SmbiosTable.cpp' || echo '$(srcdir)/'`libraries/smbios/SmbiosTable.cpp
	mv -f libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosTable.Tpo libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosTable.Plo
#	source='libraries/smbios/SmbiosTable.cpp' object='libraries/smbios/libraries_libsmbios_la-SmbiosTable.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/smbios/libraries_libsmbios_la-SmbiosTable.lo `test -f 'libraries/smbios/SmbiosTable.cpp' || echo '$(srcdir)/'`libraries/smbios/SmbiosTable.cpp

libraries/smbios/libraries_libsmbios_la-SmbiosTableIterator.lo: libraries/smbios/SmbiosTableIterator.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/smbios/libraries_libsmbios_la-SmbiosTableIterator.lo -MD -MP -MF libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosTableIterator.Tpo -c -o libraries/smbios/libraries_libsmbios_la-SmbiosTableIterator.lo `test -f 'libraries/smbios/SmbiosTableIterator.cpp' || echo '$(srcdir)/'`libraries/smbios/SmbiosTableIterator.cpp
	mv -f libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosTableIterator.Tpo libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosTableIterator.Plo
#	source='libraries/smbios/SmbiosTableIterator.cpp' object='libraries/smbios/libraries_libsmbios_la-SmbiosTableIterator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/smbios/libraries_libsmbios_la-SmbiosTableIterator.lo `test -f 'libraries/smbios/SmbiosTableIterator.cpp' || echo '$(srcdir)/'`libraries/smbios/SmbiosTableIterator.cpp

libraries/smbios/libraries_libsmbios_la-SmbiosWorkaround.lo: libraries/smbios/SmbiosWorkaround.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/smbios/libraries_libsmbios_la-SmbiosWorkaround.lo -MD -MP -MF libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosWorkaround.Tpo -c -o libraries/smbios/libraries_libsmbios_la-SmbiosWorkaround.lo `test -f 'libraries/smbios/SmbiosWorkaround.cpp' || echo '$(srcdir)/'`libraries/smbios/SmbiosWorkaround.cpp
	mv -f libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosWorkaround.Tpo libraries/smbios/$(DEPDIR)/libraries_libsmbios_la-SmbiosWorkaround.Plo
#	source='libraries/smbios/SmbiosWorkaround.cpp' object='libraries/smbios/libraries_libsmbios_la-SmbiosWorkaround.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/smbios/libraries_libsmbios_la-SmbiosWorkaround.lo `test -f 'libraries/smbios/SmbiosWorkaround.cpp' || echo '$(srcdir)/'`libraries/smbios/SmbiosWorkaround.cpp

libraries/smi/libraries_libsmbios_la-Smi.lo: libraries/smi/Smi.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/smi/libraries_libsmbios_la-Smi.lo -MD -MP -MF libraries/smi/$(DEPDIR)/libraries_libsmbios_la-Smi.Tpo -c -o libraries/smi/libraries_libsmbios_la-Smi.lo `test -f 'libraries/smi/Smi.cpp' || echo '$(srcdir)/'`libraries/smi/Smi.cpp
	mv -f libraries/smi/$(DEPDIR)/libraries_libsmbios_la-Smi.Tpo libraries/smi/$(DEPDIR)/libraries_libsmbios_la-Smi.Plo
#	source='libraries/smi/Smi.cpp' object='libraries/smi/libraries_libsmbios_la-Smi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/smi/libraries_libsmbios_la-Smi.lo `test -f 'libraries/smi/Smi.cpp' || echo '$(srcdir)/'`libraries/smi/Smi.cpp

libraries/smi/libraries_libsmbios_la-SmiFactory.lo: libraries/smi/SmiFactory.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/smi/libraries_libsmbios_la-SmiFactory.lo -MD -MP -MF libraries/smi/$(DEPDIR)/libraries_libsmbios_la-SmiFactory.Tpo -c -o libraries/smi/libraries_libsmbios_la-SmiFactory.lo `test -f 'libraries/smi/SmiFactory.cpp' || echo '$(srcdir)/'`libraries/smi/SmiFactory.cpp
	mv -f libraries/smi/$(DEPDIR)/libraries_libsmbios_la-SmiFactory.Tpo libraries/smi/$(DEPDIR)/libraries_libsmbios_la-SmiFactory.Plo
#	source='libraries/smi/SmiFactory.cpp' object='libraries/smi/libraries_libsmbios_la-SmiFactory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/smi/libraries_libsmbios_la-SmiFactory.lo `test -f 'libraries/smi/SmiFactory.cpp' || echo '$(srcdir)/'`libraries/smi/SmiFactory.cpp

libraries/smi/libraries_libsmbios_la-Smi_Linux.lo: libraries/smi/Smi_Linux.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/smi/libraries_libsmbios_la-Smi_Linux.lo -MD -MP -MF libraries/smi/$(DEPDIR)/libraries_libsmbios_la-Smi_Linux.Tpo -c -o libraries/smi/libraries_libsmbios_la-Smi_Linux.lo `test -f 'libraries/smi/Smi_Linux.cpp' || echo '$(srcdir)/'`libraries/smi/Smi_Linux.cpp
	mv -f libraries/smi/$(DEPDIR)/libraries_libsmbios_la-Smi_Linux.Tpo libraries/smi/$(DEPDIR)/libraries_libsmbios_la-Smi_Linux.Plo
#	source='libraries/smi/Smi_Linux.cpp' object='libraries/smi/libraries_libsmbios_la-Smi_Linux.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/smi/libraries_libsmbios_la-Smi_Linux.lo `test -f 'libraries/smi/Smi_Linux.cpp' || echo '$(srcdir)/'`libraries/smi/Smi_Linux.cpp

libraries/systeminfo/libraries_libsmbios_la-IdByte.lo: libraries/systeminfo/IdByte.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/systeminfo/libraries_libsmbios_la-IdByte.lo -MD -MP -MF libraries/systeminfo/$(DEPDIR)/libraries_libsmbios_la-IdByte.Tpo -c -o libraries/systeminfo/libraries_libsmbios_la-IdByte.lo `test -f 'libraries/systeminfo/IdByte.cpp' || echo '$(srcdir)/'`libraries/systeminfo/IdByte.cpp
	mv -f libraries/systeminfo/$(DEPDIR)/libraries_libsmbios_la-IdByte.Tpo libraries/systeminfo/$(DEPDIR)/libraries_libsmbios_la-IdByte.Plo
#	source='libraries/systeminfo/IdByte.cpp' object='libraries/systeminfo/libraries_libsmbios_la-IdByte.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/systeminfo/libraries_libsmbios_la-IdByte.lo `test -f 'libraries/systeminfo/IdByte.cpp' || echo '$(srcdir)/'`libraries/systeminfo/IdByte.cpp

libraries/systeminfo/libraries_libsmbios_la-SysInfoError.lo: libraries/systeminfo/SysInfoError.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/systeminfo/libraries_libsmbios_la-SysInfoError.lo -MD -MP -MF libraries/systeminfo/$(DEPDIR)/libraries_libsmbios_la-SysInfoError.Tpo -c -o libraries/systeminfo/libraries_libsmbios_la-SysInfoError.lo `test -f 'libraries/systeminfo/SysInfoError.cpp' || echo '$(srcdir)/'`libraries/systeminfo/SysInfoError.cpp
	mv -f libraries/systeminfo/$(DEPDIR)/libraries_libsmbios_la-SysInfoError.Tpo libraries/systeminfo/$(DEPDIR)/libraries_libsmbios_la-SysInfoError.Plo
#	source='libraries/systeminfo/SysInfoError.cpp' object='libraries/systeminfo/libraries_libsmbios_la-SysInfoError.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/systeminfo/libraries_libsmbios_la-SysInfoError.lo `test -f 'libraries/systeminfo/SysInfoError.cpp' || echo '$(srcdir)/'`libraries/systeminfo/SysInfoError.cpp

libraries/systeminfo/libraries_libsmbios_la-System.lo: libraries/systeminfo/System.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/systeminfo/libraries_libsmbios_la-System.lo -MD -MP -MF libraries/systeminfo/$(DEPDIR)/libraries_libsmbios_la-System.Tpo -c -o libraries/systeminfo/libraries_libsmbios_la-System.lo `test -f 'libraries/systeminfo/System.cpp' || echo '$(srcdir)/'`libraries/systeminfo/System.cpp
	mv -f libraries/systeminfo/$(DEPDIR)/libraries_libsmbios_la-System.Tpo libraries/systeminfo/$(DEPDIR)/libraries_libsmbios_la-System.Plo
#	source='libraries/systeminfo/System.cpp' object='libraries/systeminfo/libraries_libsmbios_la-System.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/systeminfo/libraries_libsmbios_la-System.lo `test -f 'libraries/systeminfo/System.cpp' || echo '$(srcdir)/'`libraries/systeminfo/System.cpp

libraries/systeminfo/libraries_libsmbios_la-SystemDetect.lo: libraries/systeminfo/SystemDetect.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/systeminfo/libraries_libsmbios_la-SystemDetect.lo -MD -MP -MF libraries/systeminfo/$(DEPDIR)/libraries_libsmbios_la-SystemDetect.Tpo -c -o libraries/systeminfo/libraries_libsmbios_la-SystemDetect.lo `test -f 'libraries/systeminfo/SystemDetect.cpp' || echo '$(srcdir)/'`libraries/systeminfo/SystemDetect.cpp
	mv -f libraries/systeminfo/$(DEPDIR)/libraries_libsmbios_la-SystemDetect.Tpo libraries/systeminfo/$(DEPDIR)/libraries_libsmbios_la-SystemDetect.Plo
#	source='libraries/systeminfo/SystemDetect.cpp' object='libraries/systeminfo/libraries_libsmbios_la-SystemDetect.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/systeminfo/libraries_libsmbios_la-SystemDetect.lo `test -f 'libraries/systeminfo/SystemDetect.cpp' || echo '$(srcdir)/'`libraries/systeminfo/SystemDetect.cpp

libraries/token/libraries_libsmbios_la-checksum.lo: libraries/token/checksum.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/token/libraries_libsmbios_la-checksum.lo -MD -MP -MF libraries/token/$(DEPDIR)/libraries_libsmbios_la-checksum.Tpo -c -o libraries/token/libraries_libsmbios_la-checksum.lo `test -f 'libraries/token/checksum.cpp' || echo '$(srcdir)/'`libraries/token/checksum.cpp
	mv -f libraries/token/$(DEPDIR)/libraries_libsmbios_la-checksum.Tpo libraries/token/$(DEPDIR)/libraries_libsmbios_la-checksum.Plo
#	source='libraries/token/checksum.cpp' object='libraries/token/libraries_libsmbios_la-checksum.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/token/libraries_libsmbios_la-checksum.lo `test -f 'libraries/token/checksum.cpp' || echo '$(srcdir)/'`libraries/token/checksum.cpp

libraries/token/libraries_libsmbios_la-Token.lo: libraries/token/Token.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/token/libraries_libsmbios_la-Token.lo -MD -MP -MF libraries/token/$(DEPDIR)/libraries_libsmbios_la-Token.Tpo -c -o libraries/token/libraries_libsmbios_la-Token.lo `test -f 'libraries/token/Token.cpp' || echo '$(srcdir)/'`libraries/token/Token.cpp
	mv -f libraries/token/$(DEPDIR)/libraries_libsmbios_la-Token.Tpo libraries/token/$(DEPDIR)/libraries_libsmbios_la-Token.Plo
#	source='libraries/token/Token.cpp' object='libraries/token/libraries_libsmbios_la-Token.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/token/libraries_libsmbios_la-Token.lo `test -f 'libraries/token/Token.cpp' || echo '$(srcdir)/'`libraries/token/Token.cpp

libraries/token/libraries_libsmbios_la-TokenD4.lo: libraries/token/TokenD4.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/token/libraries_libsmbios_la-TokenD4.lo -MD -MP -MF libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenD4.Tpo -c -o libraries/token/libraries_libsmbios_la-TokenD4.lo `test -f 'libraries/token/TokenD4.cpp' || echo '$(srcdir)/'`libraries/token/TokenD4.cpp
	mv -f libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenD4.Tpo libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenD4.Plo
#	source='libraries/token/TokenD4.cpp' object='libraries/token/libraries_libsmbios_la-TokenD4.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/token/libraries_libsmbios_la-TokenD4.lo `test -f 'libraries/token/TokenD4.cpp' || echo '$(srcdir)/'`libraries/token/TokenD4.cpp

libraries/token/libraries_libsmbios_la-TokenD5.lo: libraries/token/TokenD5.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/token/libraries_libsmbios_la-TokenD5.lo -MD -MP -MF libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenD5.Tpo -c -o libraries/token/libraries_libsmbios_la-TokenD5.lo `test -f 'libraries/token/TokenD5.cpp' || echo '$(srcdir)/'`libraries/token/TokenD5.cpp
	mv -f libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenD5.Tpo libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenD5.Plo
#	source='libraries/token/TokenD5.cpp' object='libraries/token/libraries_libsmbios_la-TokenD5.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/token/libraries_libsmbios_la-TokenD5.lo `test -f 'libraries/token/TokenD5.cpp' || echo '$(srcdir)/'`libraries/token/TokenD5.cpp

libraries/token/libraries_libsmbios_la-TokenD6.lo: libraries/token/TokenD6.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/token/libraries_libsmbios_la-TokenD6.lo -MD -MP -MF libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenD6.Tpo -c -o libraries/token/libraries_libsmbios_la-TokenD6.lo `test -f 'libraries/token/TokenD6.cpp' || echo '$(srcdir)/'`libraries/token/TokenD6.cpp
	mv -f libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenD6.Tpo libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenD6.Plo
#	source='libraries/token/TokenD6.cpp' object='libraries/token/libraries_libsmbios_la-TokenD6.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/token/libraries_libsmbios_la-TokenD6.lo `test -f 'libraries/token/TokenD6.cpp' || echo '$(srcdir)/'`libraries/token/TokenD6.cpp

libraries/token/libraries_libsmbios_la-TokenDA.lo: libraries/token/TokenDA.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/token/libraries_libsmbios_la-TokenDA.lo -MD -MP -MF libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenDA.Tpo -c -o libraries/token/libraries_libsmbios_la-TokenDA.lo `test -f 'libraries/token/TokenDA.cpp' || echo '$(srcdir)/'`libraries/token/TokenDA.cpp
	mv -f libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenDA.Tpo libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenDA.Plo
#	source='libraries/token/TokenDA.cpp' object='libraries/token/libraries_libsmbios_la-TokenDA.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/token/libraries_libsmbios_la-TokenDA.lo `test -f 'libraries/token/TokenDA.cpp' || echo '$(srcdir)/'`libraries/token/TokenDA.cpp

libraries/token/libraries_libsmbios_la-TokenTable.lo: libraries/token/TokenTable.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/token/libraries_libsmbios_la-TokenTable.lo -MD -MP -MF libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenTable.Tpo -c -o libraries/token/libraries_libsmbios_la-TokenTable.lo `test -f 'libraries/token/TokenTable.cpp' || echo '$(srcdir)/'`libraries/token/TokenTable.cpp
	mv -f libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenTable.Tpo libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenTable.Plo
#	source='libraries/token/TokenTable.cpp' object='libraries/token/libraries_libsmbios_la-TokenTable.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/token/libraries_libsmbios_la-TokenTable.lo `test -f 'libraries/token/TokenTable.cpp' || echo '$(srcdir)/'`libraries/token/TokenTable.cpp

libraries/token/libraries_libsmbios_la-TokenTableFactory.lo: libraries/token/TokenTableFactory.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/token/libraries_libsmbios_la-TokenTableFactory.lo -MD -MP -MF libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenTableFactory.Tpo -c -o libraries/token/libraries_libsmbios_la-TokenTableFactory.lo `test -f 'libraries/token/TokenTableFactory.cpp' || echo '$(srcdir)/'`libraries/token/TokenTableFactory.cpp
	mv -f libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenTableFactory.Tpo libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenTableFactory.Plo
#	source='libraries/token/TokenTableFactory.cpp' object='libraries/token/libraries_libsmbios_la-TokenTableFactory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/token/libraries_libsmbios_la-TokenTableFactory.lo `test -f 'libraries/token/TokenTableFactory.cpp' || echo '$(srcdir)/'`libraries/token/TokenTableFactory.cpp

libraries/token/libraries_libsmbios_la-TokenTableIterator.lo: libraries/token/TokenTableIterator.cpp
	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -MT libraries/token/libraries_libsmbios_la-TokenTableIterator.lo -MD -MP -MF libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenTableIterator.Tpo -c -o libraries/token/libraries_libsmbios_la-TokenTableIterator.lo `test -f 'libraries/token/TokenTableIterator.cpp' || echo '$(srcdir)/'`libraries/token/TokenTableIterator.cpp
	mv -f libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenTableIterator.Tpo libraries/token/$(DEPDIR)/libraries_libsmbios_la-TokenTableIterator.Plo
#	source='libraries/token/TokenTableIterator.cpp' object='libraries/token/libraries_libsmbios_la-TokenTableIterator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libraries_libsmbios_la_CXXFLAGS) $(CXXFLAGS) -c -o libraries/token/libraries_libsmbios_la-TokenTableIterator.lo `test -f 'libraries/token/TokenTableIterator.cpp' || echo '$(srcdir)/'`libraries/token/TokenTableIterator.cpp

bin-supported/bin_supported_dellBiosUpdate-dellBiosUpdate.o: bin-supported/dellBiosUpdate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_supported_dellBiosUpdate_CXXFLAGS) $(CXXFLAGS) -MT bin-supported/bin_supported_dellBiosUpdate-dellBiosUpdate.o -MD -MP -MF bin-supported/$(DEPDIR)/bin_supported_dellBiosUpdate-dellBiosUpdate.Tpo -c -o bin-supported/bin_supported_dellBiosUpdate-dellBiosUpdate.o `test -f 'bin-supported/dellBiosUpdate.cpp' || echo '$(srcdir)/'`bin-supported/dellBiosUpdate.cpp
	mv -f bin-supported/$(DEPDIR)/bin_supported_dellBiosUpdate-dellBiosUpdate.Tpo bin-supported/$(DEPDIR)/bin_supported_dellBiosUpdate-dellBiosUpdate.Po
#	source='bin-supported/dellBiosUpdate.cpp' object='bin-supported/bin_supported_dellBiosUpdate-dellBiosUpdate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_supported_dellBiosUpdate_CXXFLAGS) $(CXXFLAGS) -c -o bin-supported/bin_supported_dellBiosUpdate-dellBiosUpdate.o `test -f 'bin-supported/dellBiosUpdate.cpp' || echo '$(srcdir)/'`bin-supported/dellBiosUpdate.cpp

bin-supported/bin_supported_dellBiosUpdate-dellBiosUpdate.obj: bin-supported/dellBiosUpdate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_supported_dellBiosUpdate_CXXFLAGS) $(CXXFLAGS) -MT bin-supported/bin_supported_dellBiosUpdate-dellBiosUpdate.obj -MD -MP -MF bin-supported/$(DEPDIR)/bin_supported_dellBiosUpdate-dellBiosUpdate.Tpo -c -o bin-supported/bin_supported_dellBiosUpdate-dellBiosUpdate.obj `if test -f 'bin-supported/dellBiosUpdate.cpp'; then $(CYGPATH_W) 'bin-supported/dellBiosUpdate.cpp'; else $(CYGPATH_W) '$(srcdir)/bin-supported/dellBiosUpdate.cpp'; fi`
	mv -f bin-supported/$(DEPDIR)/bin_supported_dellBiosUpdate-dellBiosUpdate.Tpo bin-supported/$(DEPDIR)/bin_supported_dellBiosUpdate-dellBiosUpdate.Po
#	source='bin-supported/dellBiosUpdate.cpp' object='bin-supported/bin_supported_dellBiosUpdate-dellBiosUpdate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_supported_dellBiosUpdate_CXXFLAGS) $(CXXFLAGS) -c -o bin-supported/bin_supported_dellBiosUpdate-dellBiosUpdate.obj `if test -f 'bin-supported/dellBiosUpdate.cpp'; then $(CYGPATH_W) 'bin-supported/dellBiosUpdate.cpp'; else $(CYGPATH_W) '$(srcdir)/bin-supported/dellBiosUpdate.cpp'; fi`

bin-supported/bin_supported_dellBiosUpdateS-dellBiosUpdate.o: bin-supported/dellBiosUpdate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_supported_dellBiosUpdateS_CXXFLAGS) $(CXXFLAGS) -MT bin-supported/bin_supported_dellBiosUpdateS-dellBiosUpdate.o -MD -MP -MF bin-supported/$(DEPDIR)/bin_supported_dellBiosUpdateS-dellBiosUpdate.Tpo -c -o bin-supported/bin_supported_dellBiosUpdateS-dellBiosUpdate.o `test -f 'bin-supported/dellBiosUpdate.cpp' || echo '$(srcdir)/'`bin-supported/dellBiosUpdate.cpp
	mv -f bin-supported/$(DEPDIR)/bin_supported_dellBiosUpdateS-dellBiosUpdate.Tpo bin-supported/$(DEPDIR)/bin_supported_dellBiosUpdateS-dellBiosUpdate.Po
#	source='bin-supported/dellBiosUpdate.cpp' object='bin-supported/bin_supported_dellBiosUpdateS-dellBiosUpdate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_supported_dellBiosUpdateS_CXXFLAGS) $(CXXFLAGS) -c -o bin-supported/bin_supported_dellBiosUpdateS-dellBiosUpdate.o `test -f 'bin-supported/dellBiosUpdate.cpp' || echo '$(srcdir)/'`bin-supported/dellBiosUpdate.cpp

bin-supported/bin_supported_dellBiosUpdateS-dellBiosUpdate.obj: bin-supported/dellBiosUpdate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_supported_dellBiosUpdateS_CXXFLAGS) $(CXXFLAGS) -MT bin-supported/bin_supported_dellBiosUpdateS-dellBiosUpdate.obj -MD -MP -MF bin-supported/$(DEPDIR)/bin_supported_dellBiosUpdateS-dellBiosUpdate.Tpo -c -o bin-supported/bin_supported_dellBiosUpdateS-dellBiosUpdate.obj `if test -f 'bin-supported/dellBiosUpdate.cpp'; then $(CYGPATH_W) 'bin-supported/dellBiosUpdate.cpp'; else $(CYGPATH_W) '$(srcdir)/bin-supported/dellBiosUpdate.cpp'; fi`
	mv -f bin-supported/$(DEPDIR)/bin_supported_dellBiosUpdateS-dellBiosUpdate.Tpo bin-supported/$(DEPDIR)/bin_supported_dellBiosUpdateS-dellBiosUpdate.Po
#	source='bin-supported/dellBiosUpdate.cpp' object='bin-supported/bin_supported_dellBiosUpdateS-dellBiosUpdate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bin_supported_dellBiosUpdateS_CXXFLAGS) $(CXXFLAGS) -c -o bin-supported/bin_supported_dellBiosUpdateS-dellBiosUpdate.obj `if test -f 'bin-supported/dellBiosUpdate.cpp'; then $(CYGPATH_W) 'bin-supported/dellBiosUpdate.cpp'; else $(CYGPATH_W) '$(srcdir)/bin-supported/dellBiosUpdate.cpp'; fi`

cppunit/cppunit_testPlatform-main.o: cppunit/main.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testPlatform_CXXFLAGS) $(CXXFLAGS) -MT cppunit/cppunit_testPlatform-main.o -MD -MP -MF cppunit/$(DEPDIR)/cppunit_testPlatform-main.Tpo -c -o cppunit/cppunit_testPlatform-main.o `test -f 'cppunit/main.cpp' || echo '$(srcdir)/'`cppunit/main.cpp
	mv -f cppunit/$(DEPDIR)/cppunit_testPlatform-main.Tpo cppunit/$(DEPDIR)/cppunit_testPlatform-main.Po
#	source='cppunit/main.cpp' object='cppunit/cppunit_testPlatform-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testPlatform_CXXFLAGS) $(CXXFLAGS) -c -o cppunit/cppunit_testPlatform-main.o `test -f 'cppunit/main.cpp' || echo '$(srcdir)/'`cppunit/main.cpp

cppunit/cppunit_testPlatform-main.obj: cppunit/main.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testPlatform_CXXFLAGS) $(CXXFLAGS) -MT cppunit/cppunit_testPlatform-main.obj -MD -MP -MF cppunit/$(DEPDIR)/cppunit_testPlatform-main.Tpo -c -o cppunit/cppunit_testPlatform-main.obj `if test -f 'cppunit/main.cpp'; then $(CYGPATH_W) 'cppunit/main.cpp'; else $(CYGPATH_W) '$(srcdir)/cppunit/main.cpp'; fi`
	mv -f cppunit/$(DEPDIR)/cppunit_testPlatform-main.Tpo cppunit/$(DEPDIR)/cppunit_testPlatform-main.Po
#	source='cppunit/main.cpp' object='cppunit/cppunit_testPlatform-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testPlatform_CXXFLAGS) $(CXXFLAGS) -c -o cppunit/cppunit_testPlatform-main.obj `if test -f 'cppunit/main.cpp'; then $(CYGPATH_W) 'cppunit/main.cpp'; else $(CYGPATH_W) '$(srcdir)/cppunit/main.cpp'; fi`

cppunit/interface/cppunit_testPlatform-XmlUtils.o: cppunit/interface/XmlUtils.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testPlatform_CXXFLAGS) $(CXXFLAGS) -MT cppunit/interface/cppunit_testPlatform-XmlUtils.o -MD -MP -MF cppunit/interface/$(DEPDIR)/cppunit_testPlatform-XmlUtils.Tpo -c -o cppunit/interface/cppunit_testPlatform-XmlUtils.o `test -f 'cppunit/interface/XmlUtils.cpp' || echo '$(srcdir)/'`cppunit/interface/XmlUtils.cpp
	mv -f cppunit/interface/$(DEPDIR)/cppunit_testPlatform-XmlUtils.Tpo cppunit/interface/$(DEPDIR)/cppunit_testPlatform-XmlUtils.Po
#	source='cppunit/interface/XmlUtils.cpp' object='cppunit/interface/cppunit_testPlatform-XmlUtils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testPlatform_CXXFLAGS) $(CXXFLAGS) -c -o cppunit/interface/cppunit_testPlatform-XmlUtils.o `test -f 'cppunit/interface/XmlUtils.cpp' || echo '$(srcdir)/'`cppunit/interface/XmlUtils.cpp

cppunit/interface/cppunit_testPlatform-XmlUtils.obj: cppunit/interface/XmlUtils.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testPlatform_CXXFLAGS) $(CXXFLAGS) -MT cppunit/interface/cppunit_testPlatform-XmlUtils.obj -MD -MP -MF cppunit/interface/$(DEPDIR)/cppunit_testPlatform-XmlUtils.Tpo -c -o cppunit/interface/cppunit_testPlatform-XmlUtils.obj `if test -f 'cppunit/interface/XmlUtils.cpp'; then $(CYGPATH_W) 'cppunit/interface/XmlUtils.cpp'; else $(CYGPATH_W) '$(srcdir)/cppunit/interface/XmlUtils.cpp'; fi`
	mv -f cppunit/interface/$(DEPDIR)/cppunit_testPlatform-XmlUtils.Tpo cppunit/interface/$(DEPDIR)/cppunit_testPlatform-XmlUtils.Po
#	source='cppunit/interface/XmlUtils.cpp' object='cppunit/interface/cppunit_testPlatform-XmlUtils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testPlatform_CXXFLAGS) $(CXXFLAGS) -c -o cppunit/interface/cppunit_testPlatform-XmlUtils.obj `if test -f 'cppunit/interface/XmlUtils.cpp'; then $(CYGPATH_W) 'cppunit/interface/XmlUtils.cpp'; else $(CYGPATH_W) '$(srcdir)/cppunit/interface/XmlUtils.cpp'; fi`

cppunit/interface/cppunit_testPlatform-testPlatform.o: cppunit/interface/testPlatform.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testPlatform_CXXFLAGS) $(CXXFLAGS) -MT cppunit/interface/cppunit_testPlatform-testPlatform.o -MD -MP -MF cppunit/interface/$(DEPDIR)/cppunit_testPlatform-testPlatform.Tpo -c -o cppunit/interface/cppunit_testPlatform-testPlatform.o `test -f 'cppunit/interface/testPlatform.cpp' || echo '$(srcdir)/'`cppunit/interface/testPlatform.cpp
	mv -f cppunit/interface/$(DEPDIR)/cppunit_testPlatform-testPlatform.Tpo cppunit/interface/$(DEPDIR)/cppunit_testPlatform-testPlatform.Po
#	source='cppunit/interface/testPlatform.cpp' object='cppunit/interface/cppunit_testPlatform-testPlatform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testPlatform_CXXFLAGS) $(CXXFLAGS) -c -o cppunit/interface/cppunit_testPlatform-testPlatform.o `test -f 'cppunit/interface/testPlatform.cpp' || echo '$(srcdir)/'`cppunit/interface/testPlatform.cpp

cppunit/interface/cppunit_testPlatform-testPlatform.obj: cppunit/interface/testPlatform.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testPlatform_CXXFLAGS) $(CXXFLAGS) -MT cppunit/interface/cppunit_testPlatform-testPlatform.obj -MD -MP -MF cppunit/interface/$(DEPDIR)/cppunit_testPlatform-testPlatform.Tpo -c -o cppunit/interface/cppunit_testPlatform-testPlatform.obj `if test -f 'cppunit/interface/testPlatform.cpp'; then $(CYGPATH_W) 'cppunit/interface/testPlatform.cpp'; else $(CYGPATH_W) '$(srcdir)/cppunit/interface/testPlatform.cpp'; fi`
	mv -f cppunit/interface/$(DEPDIR)/cppunit_testPlatform-testPlatform.Tpo cppunit/interface/$(DEPDIR)/cppunit_testPlatform-testPlatform.Po
#	source='cppunit/interface/testPlatform.cpp' object='cppunit/interface/cppunit_testPlatform-testPlatform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testPlatform_CXXFLAGS) $(CXXFLAGS) -c -o cppunit/interface/cppunit_testPlatform-testPlatform.obj `if test -f 'cppunit/interface/testPlatform.cpp'; then $(CYGPATH_W) 'cppunit/interface/testPlatform.cpp'; else $(CYGPATH_W) '$(srcdir)/cppunit/interface/testPlatform.cpp'; fi`

cppunit/cppunit_testRbu-main.o: cppunit/main.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testRbu_CXXFLAGS) $(CXXFLAGS) -MT cppunit/cppunit_testRbu-main.o -MD -MP -MF cppunit/$(DEPDIR)/cppunit_testRbu-main.Tpo -c -o cppunit/cppunit_testRbu-main.o `test -f 'cppunit/main.cpp' || echo '$(srcdir)/'`cppunit/main.cpp
	mv -f cppunit/$(DEPDIR)/cppunit_testRbu-main.Tpo cppunit/$(DEPDIR)/cppunit_testRbu-main.Po
#	source='cppunit/main.cpp' object='cppunit/cppunit_testRbu-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testRbu_CXXFLAGS) $(CXXFLAGS) -c -o cppunit/cppunit_testRbu-main.o `test -f 'cppunit/main.cpp' || echo '$(srcdir)/'`cppunit/main.cpp

cppunit/cppunit_testRbu-main.obj: cppunit/main.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testRbu_CXXFLAGS) $(CXXFLAGS) -MT cppunit/cppunit_testRbu-main.obj -MD -MP -MF cppunit/$(DEPDIR)/cppunit_testRbu-main.Tpo -c -o cppunit/cppunit_testRbu-main.obj `if test -f 'cppunit/main.cpp'; then $(CYGPATH_W) 'cppunit/main.cpp'; else $(CYGPATH_W) '$(srcdir)/cppunit/main.cpp'; fi`
	mv -f cppunit/$(DEPDIR)/cppunit_testRbu-main.Tpo cppunit/$(DEPDIR)/cppunit_testRbu-main.Po
#	source='cppunit/main.cpp' object='cppunit/cppunit_testRbu-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testRbu_CXXFLAGS) $(CXXFLAGS) -c -o cppunit/cppunit_testRbu-main.obj `if test -f 'cppunit/main.cpp'; then $(CYGPATH_W) 'cppunit/main.cpp'; else $(CYGPATH_W) '$(srcdir)/cppunit/main.cpp'; fi`

cppunit/interface/cppunit_testRbu-XmlUtils.o: cppunit/interface/XmlUtils.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testRbu_CXXFLAGS) $(CXXFLAGS) -MT cppunit/interface/cppunit_testRbu-XmlUtils.o -MD -MP -MF cppunit/interface/$(DEPDIR)/cppunit_testRbu-XmlUtils.Tpo -c -o cppunit/interface/cppunit_testRbu-XmlUtils.o `test -f 'cppunit/interface/XmlUtils.cpp' || echo '$(srcdir)/'`cppunit/interface/XmlUtils.cpp
	mv -f cppunit/interface/$(DEPDIR)/cppunit_testRbu-XmlUtils.Tpo cppunit/interface/$(DEPDIR)/cppunit_testRbu-XmlUtils.Po
#	source='cppunit/interface/XmlUtils.cpp' object='cppunit/interface/cppunit_testRbu-XmlUtils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testRbu_CXXFLAGS) $(CXXFLAGS) -c -o cppunit/interface/cppunit_testRbu-XmlUtils.o `test -f 'cppunit/interface/XmlUtils.cpp' || echo '$(srcdir)/'`cppunit/interface/XmlUtils.cpp

cppunit/interface/cppunit_testRbu-XmlUtils.obj: cppunit/interface/XmlUtils.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testRbu_CXXFLAGS) $(CXXFLAGS) -MT cppunit/interface/cppunit_testRbu-XmlUtils.obj -MD -MP -MF cppunit/interface/$(DEPDIR)/cppunit_testRbu-XmlUtils.Tpo -c -o cppunit/interface/cppunit_testRbu-XmlUtils.obj `if test -f 'cppunit/interface/XmlUtils.cpp'; then $(CYGPATH_W) 'cppunit/interface/XmlUtils.cpp'; else $(CYGPATH_W) '$(srcdir)/cppunit/interface/XmlUtils.cpp'; fi`
	mv -f cppunit/interface/$(DEPDIR)/cppunit_testRbu-XmlUtils.Tpo cppunit/interface/$(DEPDIR)/cppunit_testRbu-XmlUtils.Po
#	source='cppunit/interface/XmlUtils.cpp' object='cppunit/interface/cppunit_testRbu-XmlUtils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testRbu_CXXFLAGS) $(CXXFLAGS) -c -o cppunit/interface/cppunit_testRbu-XmlUtils.obj `if test -f 'cppunit/interface/XmlUtils.cpp'; then $(CYGPATH_W) 'cppunit/interface/XmlUtils.cpp'; else $(CYGPATH_W) '$(srcdir)/cppunit/interface/XmlUtils.cpp'; fi`

cppunit/interface/cppunit_testRbu-testRbu.o: cppunit/interface/testRbu.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testRbu_CXXFLAGS) $(CXXFLAGS) -MT cppunit/interface/cppunit_testRbu-testRbu.o -MD -MP -MF cppunit/interface/$(DEPDIR)/cppunit_testRbu-testRbu.Tpo -c -o cppunit/interface/cppunit_testRbu-testRbu.o `test -f 'cppunit/interface/testRbu.cpp' || echo '$(srcdir)/'`cppunit/interface/testRbu.cpp
	mv -f cppunit/interface/$(DEPDIR)/cppunit_testRbu-testRbu.Tpo cppunit/interface/$(DEPDIR)/cppunit_testRbu-testRbu.Po
#	source='cppunit/interface/testRbu.cpp' object='cppunit/interface/cppunit_testRbu-testRbu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testRbu_CXXFLAGS) $(CXXFLAGS) -c -o cppunit/interface/cppunit_testRbu-testRbu.o `test -f 'cppunit/interface/testRbu.cpp' || echo '$(srcdir)/'`cppunit/interface/testRbu.cpp

cppunit/interface/cppunit_testRbu-testRbu.obj: cppunit/interface/testRbu.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testRbu_CXXFLAGS) $(CXXFLAGS) -MT cppunit/interface/cppunit_testRbu-testRbu.obj -MD -MP -MF cppunit/interface/$(DEPDIR)/cppunit_testRbu-testRbu.Tpo -c -o cppunit/interface/cppunit_testRbu-testRbu.obj `if test -f 'cppunit/interface/testRbu.cpp'; then $(CYGPATH_W) 'cppunit/interface/testRbu.cpp'; else $(CYGPATH_W) '$(srcdir)/cppunit/interface/testRbu.cpp'; fi`
	mv -f cppunit/interface/$(DEPDIR)/cppunit_testRbu-testRbu.Tpo cppunit/interface/$(DEPDIR)/cppunit_testRbu-testRbu.Po
#	source='cppunit/interface/testRbu.cpp' object='cppunit/interface/cppunit_testRbu-testRbu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testRbu_CXXFLAGS) $(CXXFLAGS) -c -o cppunit/interface/cppunit_testRbu-testRbu.obj `if test -f 'cppunit/interface/testRbu.cpp'; then $(CYGPATH_W) 'cppunit/interface/testRbu.cpp'; else $(CYGPATH_W) '$(srcdir)/cppunit/interface/testRbu.cpp'; fi`

cppunit/cppunit_testStandalone-main.o: cppunit/main.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testStandalone_CXXFLAGS) $(CXXFLAGS) -MT cppunit/cppunit_testStandalone-main.o -MD -MP -MF cppunit/$(DEPDIR)/cppunit_testStandalone-main.Tpo -c -o cppunit/cppunit_testStandalone-main.o `test -f 'cppunit/main.cpp' || echo '$(srcdir)/'`cppunit/main.cpp
	mv -f cppunit/$(DEPDIR)/cppunit_testStandalone-main.Tpo cppunit/$(DEPDIR)/cppunit_testStandalone-main.Po
#	source='cppunit/main.cpp' object='cppunit/cppunit_testStandalone-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testStandalone_CXXFLAGS) $(CXXFLAGS) -c -o cppunit/cppunit_testStandalone-main.o `test -f 'cppunit/main.cpp' || echo '$(srcdir)/'`cppunit/main.cpp

cppunit/cppunit_testStandalone-main.obj: cppunit/main.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testStandalone_CXXFLAGS) $(CXXFLAGS) -MT cppunit/cppunit_testStandalone-main.obj -MD -MP -MF cppunit/$(DEPDIR)/cppunit_testStandalone-main.Tpo -c -o cppunit/cppunit_testStandalone-main.obj `if test -f 'cppunit/main.cpp'; then $(CYGPATH_W) 'cppunit/main.cpp'; else $(CYGPATH_W) '$(srcdir)/cppunit/main.cpp'; fi`
	mv -f cppunit/$(DEPDIR)/cppunit_testStandalone-main.Tpo cppunit/$(DEPDIR)/cppunit_testStandalone-main.Po
#	source='cppunit/main.cpp' object='cppunit/cppunit_testStandalone-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testStandalone_CXXFLAGS) $(CXXFLAGS) -c -o cppunit/cppunit_testStandalone-main.obj `if test -f 'cppunit/main.cpp'; then $(CYGPATH_W) 'cppunit/main.cpp'; else $(CYGPATH_W) '$(srcdir)/cppunit/main.cpp'; fi`

cppunit/interface/cppunit_testStandalone-XmlUtils.o: cppunit/interface/XmlUtils.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testStandalone_CXXFLAGS) $(CXXFLAGS) -MT cppunit/interface/cppunit_testStandalone-XmlUtils.o -MD -MP -MF cppunit/interface/$(DEPDIR)/cppunit_testStandalone-XmlUtils.Tpo -c -o cppunit/interface/cppunit_testStandalone-XmlUtils.o `test -f 'cppunit/interface/XmlUtils.cpp' || echo '$(srcdir)/'`cppunit/interface/XmlUtils.cpp
	mv -f cppunit/interface/$(DEPDIR)/cppunit_testStandalone-XmlUtils.Tpo cppunit/interface/$(DEPDIR)/cppunit_testStandalone-XmlUtils.Po
#	source='cppunit/interface/XmlUtils.cpp' object='cppunit/interface/cppunit_testStandalone-XmlUtils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testStandalone_CXXFLAGS) $(CXXFLAGS) -c -o cppunit/interface/cppunit_testStandalone-XmlUtils.o `test -f 'cppunit/interface/XmlUtils.cpp' || echo '$(srcdir)/'`cppunit/interface/XmlUtils.cpp

cppunit/interface/cppunit_testStandalone-XmlUtils.obj: cppunit/interface/XmlUtils.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testStandalone_CXXFLAGS) $(CXXFLAGS) -MT cppunit/interface/cppunit_testStandalone-XmlUtils.obj -MD -MP -MF cppunit/interface/$(DEPDIR)/cppunit_testStandalone-XmlUtils.Tpo -c -o cppunit/interface/cppunit_testStandalone-XmlUtils.obj `if test -f 'cppunit/interface/XmlUtils.cpp'; then $(CYGPATH_W) 'cppunit/interface/XmlUtils.cpp'; else $(CYGPATH_W) '$(srcdir)/cppunit/interface/XmlUtils.cpp'; fi`
	mv -f cppunit/interface/$(DEPDIR)/cppunit_testStandalone-XmlUtils.Tpo cppunit/interface/$(DEPDIR)/cppunit_testStandalone-XmlUtils.Po
#	source='cppunit/interface/XmlUtils.cpp' object='cppunit/interface/cppunit_testStandalone-XmlUtils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testStandalone_CXXFLAGS) $(CXXFLAGS) -c -o cppunit/interface/cppunit_testStandalone-XmlUtils.obj `if test -f 'cppunit/interface/XmlUtils.cpp'; then $(CYGPATH_W) 'cppunit/interface/XmlUtils.cpp'; else $(CYGPATH_W) '$(srcdir)/cppunit/interface/XmlUtils.cpp'; fi`

cppunit/interface/cppunit_testStandalone-testStandalone.o: cppunit/interface/testStandalone.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testStandalone_CXXFLAGS) $(CXXFLAGS) -MT cppunit/interface/cppunit_testStandalone-testStandalone.o -MD -MP -MF cppunit/interface/$(DEPDIR)/cppunit_testStandalone-testStandalone.Tpo -c -o cppunit/interface/cppunit_testStandalone-testStandalone.o `test -f 'cppunit/interface/testStandalone.cpp' || echo '$(srcdir)/'`cppunit/interface/testStandalone.cpp
	mv -f cppunit/interface/$(DEPDIR)/cppunit_testStandalone-testStandalone.Tpo cppunit/interface/$(DEPDIR)/cppunit_testStandalone-testStandalone.Po
#	source='cppunit/interface/testStandalone.cpp' object='cppunit/interface/cppunit_testStandalone-testStandalone.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testStandalone_CXXFLAGS) $(CXXFLAGS) -c -o cppunit/interface/cppunit_testStandalone-testStandalone.o `test -f 'cppunit/interface/testStandalone.cpp' || echo '$(srcdir)/'`cppunit/interface/testStandalone.cpp

cppunit/interface/cppunit_testStandalone-testStandalone.obj: cppunit/interface/testStandalone.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testStandalone_CXXFLAGS) $(CXXFLAGS) -MT cppunit/interface/cppunit_testStandalone-testStandalone.obj -MD -MP -MF cppunit/interface/$(DEPDIR)/cppunit_testStandalone-testStandalone.Tpo -c -o cppunit/interface/cppunit_testStandalone-testStandalone.obj `if test -f 'cppunit/interface/testStandalone.cpp'; then $(CYGPATH_W) 'cppunit/interface/testStandalone.cpp'; else $(CYGPATH_W) '$(srcdir)/cppunit/interface/testStandalone.cpp'; fi`
	mv -f cppunit/interface/$(DEPDIR)/cppunit_testStandalone-testStandalone.Tpo cppunit/interface/$(DEPDIR)/cppunit_testStandalone-testStandalone.Po
#	source='cppunit/interface/testStandalone.cpp' object='cppunit/interface/cppunit_testStandalone-testStandalone.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cppunit_testStandalone_CXXFLAGS) $(CXXFLAGS) -c -o cppunit/interface/cppunit_testStandalone-testStandalone.obj `if test -f 'cppunit/interface/testStandalone.cpp'; then $(CYGPATH_W) 'cppunit/interface/testStandalone.cpp'; else $(CYGPATH_W) '$(srcdir)/cppunit/interface/testStandalone.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf bin-supported/.libs bin-supported/_libs
	-rm -rf bin-unsupported/.libs bin-unsupported/_libs
	-rm -rf cppunit/.libs cppunit/_libs
	-rm -rf libraries/.libs libraries/_libs
	-rm -rf libraries/cmos/.libs libraries/cmos/_libs
	-rm -rf libraries/common/.libs libraries/common/_libs
	-rm -rf libraries/memory/.libs libraries/memory/_libs
	-rm -rf libraries/rbu/.libs libraries/rbu/_libs
	-rm -rf libraries/smbios/.libs libraries/smbios/_libs
	-rm -rf libraries/smi/.libs libraries/smi/_libs
	-rm -rf libraries/systeminfo/.libs libraries/systeminfo/_libs
	-rm -rf libraries/token/.libs libraries/token/_libs

distclean-libtool:
	-rm -f libtool

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; ws='[	 ]'; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d $(distdir) || mkdir $(distdir)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  unlzma -c $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-rm -f bin-supported/$(DEPDIR)/$(am__dirstamp)
	-rm -f bin-supported/$(am__dirstamp)
	-rm -f bin-unsupported/$(DEPDIR)/$(am__dirstamp)
	-rm -f bin-unsupported/$(am__dirstamp)
	-rm -f cppunit/$(DEPDIR)/$(am__dirstamp)
	-rm -f cppunit/$(am__dirstamp)
	-rm -f cppunit/interface/$(DEPDIR)/$(am__dirstamp)
	-rm -f cppunit/interface/$(am__dirstamp)
	-rm -f libraries/$(am__dirstamp)
	-rm -f libraries/cmos/$(DEPDIR)/$(am__dirstamp)
	-rm -f libraries/cmos/$(am__dirstamp)
	-rm -f libraries/common/$(DEPDIR)/$(am__dirstamp)
	-rm -f libraries/common/$(am__dirstamp)
	-rm -f libraries/memory/$(DEPDIR)/$(am__dirstamp)
	-rm -f libraries/memory/$(am__dirstamp)
	-rm -f libraries/rbu/$(DEPDIR)/$(am__dirstamp)
	-rm -f libraries/rbu/$(am__dirstamp)
	-rm -f libraries/smbios/$(DEPDIR)/$(am__dirstamp)
	-rm -f libraries/smbios/$(am__dirstamp)
	-rm -f libraries/smi/$(DEPDIR)/$(am__dirstamp)
	-rm -f libraries/smi/$(am__dirstamp)
	-rm -f libraries/systeminfo/$(DEPDIR)/$(am__dirstamp)
	-rm -f libraries/systeminfo/$(am__dirstamp)
	-rm -f libraries/token/$(DEPDIR)/$(am__dirstamp)
	-rm -f libraries/token/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-sbinPROGRAMS \
	mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf bin-supported/$(DEPDIR) bin-unsupported/$(DEPDIR) cppunit/$(DEPDIR) cppunit/interface/$(DEPDIR) libraries/cmos/$(DEPDIR) libraries/common/$(DEPDIR) libraries/memory/$(DEPDIR) libraries/rbu/$(DEPDIR) libraries/smbios/$(DEPDIR) libraries/smi/$(DEPDIR) libraries/systeminfo/$(DEPDIR) libraries/token/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-exec-am: install-binPROGRAMS install-dist_binSCRIPTS \
	install-dist_sbinSCRIPTS install-libLTLIBRARIES \
	install-sbinPROGRAMS

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf bin-supported/$(DEPDIR) bin-unsupported/$(DEPDIR) cppunit/$(DEPDIR) cppunit/interface/$(DEPDIR) libraries/cmos/$(DEPDIR) libraries/common/$(DEPDIR) libraries/memory/$(DEPDIR) libraries/rbu/$(DEPDIR) libraries/smbios/$(DEPDIR) libraries/smi/$(DEPDIR) libraries/systeminfo/$(DEPDIR) libraries/token/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_binSCRIPTS \
	uninstall-dist_sbinSCRIPTS uninstall-libLTLIBRARIES \
	uninstall-sbinPROGRAMS

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am am--refresh check check-TESTS check-am clean \
	clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-sbinPROGRAMS ctags \
	ctags-recursive dist dist-all dist-bzip2 dist-gzip dist-lzma \
	dist-shar dist-tarZ dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am \
	install-dist_binSCRIPTS install-dist_sbinSCRIPTS install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-sbinPROGRAMS install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-dist_binSCRIPTS \
	uninstall-dist_sbinSCRIPTS uninstall-libLTLIBRARIES \
	uninstall-sbinPROGRAMS


$(bin_PROGRAMS): libraries/libsmbios.la
$(sbin_PROGRAMS): libraries/libsmbios.la
$(EXTRA_PROGRAMS): libraries/libsmbios.la
static: $(EXTRA_PROGRAMS)

rpm: dist
	BLD_DIR=$$(mktemp -d /tmp/rpmbuild-$$$$-XXXXXX); \
	mkdir -p $$BLD_DIR/SOURCES $$BLD_DIR/BUILD $$BLD_DIR/RPMS $$BLD_DIR/RPMS/i386 $$BLD_DIR/RPMS/noarch $$BLD_DIR/SRPMS $$BLD_DIR/SPECS ;\
	rpmbuild --define "_topdir $$BLD_DIR" -ta --nodeps $(RELEASE_STRING).tar.gz  ;\
	cp $$BLD_DIR/SRPMS/*rpm .       ;\
	cp $$BLD_DIR/RPMS/*/*rpm .       ;\
	rm -rf $$BLD_DIR

srpm: dist
	BLD_DIR=$$(mktemp -d /tmp/rpmbuild-$$$$-XXXXXX); \
	mkdir -p $$BLD_DIR/SOURCES $$BLD_DIR/BUILD $$BLD_DIR/RPMS $$BLD_DIR/RPMS/i386 $$BLD_DIR/RPMS/noarch $$BLD_DIR/SRPMS $$BLD_DIR/SPECS ;\
	rpmbuild --define "_topdir $$BLD_DIR" -ts --nodeps $(RELEASE_STRING).tar.gz  ;\
	cp $$BLD_DIR/SRPMS/*rpm .       ;\
	rm -rf $$BLD_DIR

unit_test:

static:
	make -C bin-supported static
	make -C bin-unsupported static

########## DOCS ################
clean-generic: clean-docs
	-test -z "$(CLEANFILES)" || rm -rf $(CLEANFILES)
clean-docs:
	rm -rf doc/interface doc/full doc/reports

#all: doc/full/html/index.html doc/interface/html/index.html

doxygen: doc/full/html/index.html doc/interface/html/index.html
doc/full/html/index.html: doc/reports/code-coverage.txt doc/reports/valgrind_output.txt $(shell find doc -name \*.txt)
	cd doc/; doxygen full-documentation.dox > doxygen-full.log

doc/interface/html/index.html: doc/interface-only.dox doc/reports/code-coverage.txt doc/reports/valgrind_output.txt $(shell find doc -name \*.txt)
	cd doc/; doxygen interface-only.dox > doxygen-int.log

doc/reports/code-coverage.txt:
	[ -e doc/reports ] || mkdir -p doc/reports
	@echo '/** \page code_coverage Automatically generated code coverage report' > doc/reports/code-coverage.txt
	@echo '<pre>' >> doc/reports/code-coverage.txt
	@echo 'CODE COVERAGE REPORT HAS NOT BEEN RUN YET IN THIS SOURCE TREE!' >> doc/reports/code-coverage.txt
	@echo "</pre>*/" >> doc/reports/code-coverage.txt

doc/reports/valgrind_output.txt:
	[ -e doc/reports ] || mkdir -p doc/reports
	@echo '/** \page leak_detect Automatically generated leak detection report' > doc/reports/valgrind_output.txt
	@echo '\section leaks Leak detection report' >> doc/reports/valgrind_output.txt
	@echo "Generated for $$(whoami) on $$(date)" >> doc/reports/valgrind_output.txt
	@echo '<pre>' >> doc/reports/valgrind_output.txt
	@echo 'LEAK DETECTION REPORT HAS NOT BEEN RUN YET IN THIS SOURCE TREE!' >> doc/reports/valgrind_output.txt
	@echo "</pre>*/" >> doc/reports/valgrind_output.txt
	@echo '/** \section leak_time Time to run leak detection report.' >> doc/reports/valgrind_output.txt
	@echo '<pre>' >> doc/reports/valgrind_output.txt
	@echo 'LEAK DETECTION REPORT HAS NOT BEEN RUN YET IN THIS SOURCE TREE!' >> doc/reports/valgrind_output.txt
	@echo "</pre>*/" >> doc/reports/valgrind_output.txt
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
